[M::bwa_idx_load_from_disk] read 3171 ALT contigs
[M::process] read 662252 sequences (100000052 bp)...
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222164, 5, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 1151, 1355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3611)
[M::mem_pestat] mean and std.dev: (1029.70, 915.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4739)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (280, 366, 466)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (376.29, 143.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1024)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (311, 561, 1404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3590)
[M::mem_pestat] mean and std.dev: (856.64, 844.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4683)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 407.216 CPU sec, 50.798 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 221944, 16, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 349, 590)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1384)
[M::mem_pestat] mean and std.dev: (375.15, 207.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1781)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 371, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (381.34, 145.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 1874, 4578)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13652)
[M::mem_pestat] mean and std.dev: (2353.88, 2751.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18189)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (209, 306, 1142)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3008)
[M::mem_pestat] mean and std.dev: (438.44, 380.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3941)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 390.185 CPU sec, 48.501 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 221437, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 285, 2109)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5925)
[M::mem_pestat] mean and std.dev: (672.92, 757.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7833)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.11, 146.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (149, 327, 1034)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2804)
[M::mem_pestat] mean and std.dev: (376.18, 303.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3689)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (147, 384, 790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2076)
[M::mem_pestat] mean and std.dev: (402.91, 292.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2719)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 352.006 CPU sec, 43.732 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221570, 18, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (382.96, 146.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (78, 198, 1727)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5025)
[M::mem_pestat] mean and std.dev: (826.88, 1409.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6674)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 350.036 CPU sec, 43.453 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222146, 12, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 371, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (381.15, 144.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (91, 2542, 3587)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10579)
[M::mem_pestat] mean and std.dev: (1931.08, 1613.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14075)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 600, 1061)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2771)
[M::mem_pestat] mean and std.dev: (619.07, 602.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3626)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 349.818 CPU sec, 43.431 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221830, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 370, 470)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 842)
[M::mem_pestat] mean and std.dev: (380.11, 144.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1028)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (95, 386, 1351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3863)
[M::mem_pestat] mean and std.dev: (453.25, 524.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5119)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (418, 797, 2233)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5863)
[M::mem_pestat] mean and std.dev: (1391.80, 1420.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7678)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 350.527 CPU sec, 43.426 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 221959, 14, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 368, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 835)
[M::mem_pestat] mean and std.dev: (378.18, 143.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (107, 552, 856)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2354)
[M::mem_pestat] mean and std.dev: (420.08, 412.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3103)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 252, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (193.45, 99.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 813)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 353.274 CPU sec, 43.882 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221715, 6, 17)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 367, 466)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 832)
[M::mem_pestat] mean and std.dev: (377.21, 142.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1015)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 216, 589)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1475)
[M::mem_pestat] mean and std.dev: (326.06, 225.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1918)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 358.530 CPU sec, 44.478 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 221200, 10, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (281, 365, 461)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 821)
[M::mem_pestat] mean and std.dev: (373.51, 139.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1001)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (242, 427, 677)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1547)
[M::mem_pestat] mean and std.dev: (435.78, 370.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1982)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 372, 779)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1757)
[M::mem_pestat] mean and std.dev: (524.23, 340.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2246)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 369.616 CPU sec, 45.913 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222210, 9, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (291, 377, 481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 861)
[M::mem_pestat] mean and std.dev: (389.08, 148.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 416, 584)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1212)
[M::mem_pestat] mean and std.dev: (411.60, 246.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1526)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 358.691 CPU sec, 44.556 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 220836, 14, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (345, 443, 1084)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2562)
[M::mem_pestat] mean and std.dev: (715.60, 567.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3301)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 381, 486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 872)
[M::mem_pestat] mean and std.dev: (392.95, 150.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1065)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (147, 921, 3546)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10344)
[M::mem_pestat] mean and std.dev: (1746.21, 2019.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13743)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (311, 543, 1322)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3344)
[M::mem_pestat] mean and std.dev: (671.00, 450.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4355)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 349.851 CPU sec, 43.413 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 220729, 17, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (291, 379, 484)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 870)
[M::mem_pestat] mean and std.dev: (390.97, 149.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1063)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (247, 813, 4541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13129)
[M::mem_pestat] mean and std.dev: (2074.76, 2220.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17423)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 286, 552)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1148)
[M::mem_pestat] mean and std.dev: (404.94, 220.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1446)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 351.640 CPU sec, 43.688 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 220851, 10, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 377, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (387.92, 148.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1050)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 146, 856)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2482)
[M::mem_pestat] mean and std.dev: (404.78, 511.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3295)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 332, 619)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1465)
[M::mem_pestat] mean and std.dev: (395.18, 227.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1888)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 350.901 CPU sec, 43.574 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 221556, 9, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 374, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 851)
[M::mem_pestat] mean and std.dev: (384.51, 146.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 184, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (193.82, 82.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 875)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 351.284 CPU sec, 43.628 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 221996, 12, 20)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 371, 472)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 848)
[M::mem_pestat] mean and std.dev: (381.44, 146.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1036)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 604, 1760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5194)
[M::mem_pestat] mean and std.dev: (1083.33, 1267.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6911)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (153, 348, 894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2376)
[M::mem_pestat] mean and std.dev: (475.00, 383.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3117)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 352.309 CPU sec, 43.759 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221848, 11, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 369, 469)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 839)
[M::mem_pestat] mean and std.dev: (379.30, 144.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1024)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 1521, 4376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12742)
[M::mem_pestat] mean and std.dev: (2183.18, 2022.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16925)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (278, 378, 482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 890)
[M::mem_pestat] mean and std.dev: (327.20, 119.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1094)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 355.578 CPU sec, 44.177 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222297, 13, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 368, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 835)
[M::mem_pestat] mean and std.dev: (377.89, 143.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (137, 220, 2235)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6431)
[M::mem_pestat] mean and std.dev: (919.42, 1697.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8529)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (155, 385, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1337)
[M::mem_pestat] mean and std.dev: (502.53, 435.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2244)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 357.170 CPU sec, 44.386 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222023, 15, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (216, 253, 364)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 660)
[M::mem_pestat] mean and std.dev: (238.38, 70.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (281, 365, 462)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 824)
[M::mem_pestat] mean and std.dev: (374.49, 140.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1005)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (400, 1320, 3973)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11119)
[M::mem_pestat] mean and std.dev: (2409.60, 2508.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14692)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 317, 1033)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2611)
[M::mem_pestat] mean and std.dev: (498.80, 552.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3400)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 367.817 CPU sec, 45.691 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 221756, 27, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (247, 336, 888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2170)
[M::mem_pestat] mean and std.dev: (499.06, 460.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2811)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 369, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 833)
[M::mem_pestat] mean and std.dev: (379.08, 142.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1016)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (76, 231, 1424)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4120)
[M::mem_pestat] mean and std.dev: (626.31, 836.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5468)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (341, 392, 1064)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2510)
[M::mem_pestat] mean and std.dev: (593.00, 361.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3233)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 426.715 CPU sec, 53.058 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 220928, 11, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 376, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 862)
[M::mem_pestat] mean and std.dev: (387.77, 148.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1053)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (84, 970, 4401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13035)
[M::mem_pestat] mean and std.dev: (1929.91, 2184.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17352)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (275, 561, 1241)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3173)
[M::mem_pestat] mean and std.dev: (750.40, 572.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4139)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 441.768 CPU sec, 54.958 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221820, 15, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 376, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 862)
[M::mem_pestat] mean and std.dev: (387.86, 148.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1053)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (307, 843, 1655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4351)
[M::mem_pestat] mean and std.dev: (881.43, 815.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5699)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (260, 282, 411)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 713)
[M::mem_pestat] mean and std.dev: (274.77, 111.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 864)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 377.653 CPU sec, 46.914 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 221672, 18, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (257, 335, 431)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 779)
[M::mem_pestat] mean and std.dev: (276.88, 89.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 953)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)
[M::mem_pestat] mean and std.dev: (386.10, 147.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1048)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (100, 1159, 2017)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5851)
[M::mem_pestat] mean and std.dev: (1024.76, 1128.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7768)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 259, 370)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 718)
[M::mem_pestat] mean and std.dev: (256.75, 145.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 892)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 352.830 CPU sec, 43.834 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 221548, 16, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (173, 405, 1616)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4502)
[M::mem_pestat] mean and std.dev: (604.45, 641.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5945)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 853)
[M::mem_pestat] mean and std.dev: (383.98, 146.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1042)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (97, 464, 1894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5488)
[M::mem_pestat] mean and std.dev: (936.53, 1436.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7285)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (222, 495, 936)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2364)
[M::mem_pestat] mean and std.dev: (581.89, 509.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3078)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 355.248 CPU sec, 44.135 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222367, 17, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 845)
[M::mem_pestat] mean and std.dev: (380.31, 145.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1032)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (66, 117, 1066)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3066)
[M::mem_pestat] mean and std.dev: (379.33, 634.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4066)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 324, 1502)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4094)
[M::mem_pestat] mean and std.dev: (1053.50, 1236.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5999)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 356.784 CPU sec, 44.297 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222200, 15, 26)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 369, 468)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (378.83, 143.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (148, 422, 1561)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4387)
[M::mem_pestat] mean and std.dev: (843.57, 1021.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5800)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (172, 302, 718)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1810)
[M::mem_pestat] mean and std.dev: (373.30, 381.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2356)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 355.161 CPU sec, 44.144 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221962, 12, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (282, 367, 466)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 834)
[M::mem_pestat] mean and std.dev: (376.83, 142.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1018)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 946, 3711)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10883)
[M::mem_pestat] mean and std.dev: (1861.83, 2450.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14469)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (216, 298, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1107)
[M::mem_pestat] mean and std.dev: (284.83, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1404)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 365.447 CPU sec, 45.385 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222120, 9, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (280, 364, 460)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 820)
[M::mem_pestat] mean and std.dev: (373.25, 140.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1000)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (159, 276, 585)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1437)
[M::mem_pestat] mean and std.dev: (407.19, 363.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1863)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 384.247 CPU sec, 47.751 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222227, 18, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (282, 367, 465)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 831)
[M::mem_pestat] mean and std.dev: (376.40, 142.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1014)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (93, 236, 1356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3882)
[M::mem_pestat] mean and std.dev: (445.47, 557.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5145)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (473, 666, 800)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1454)
[M::mem_pestat] mean and std.dev: (533.00, 235.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1781)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 372.829 CPU sec, 46.312 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221610, 24, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 479)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 861)
[M::mem_pestat] mean and std.dev: (386.75, 148.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (649, 1157, 2483)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6151)
[M::mem_pestat] mean and std.dev: (1492.17, 1342.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7985)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (235, 915, 1559)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4207)
[M::mem_pestat] mean and std.dev: (1197.07, 1293.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6369)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 353.441 CPU sec, 43.883 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221628, 7, 19)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 479)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 861)
[M::mem_pestat] mean and std.dev: (386.83, 148.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (176, 339, 743)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1877)
[M::mem_pestat] mean and std.dev: (417.94, 399.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2444)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 352.343 CPU sec, 43.791 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 220971, 14, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 374, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (385.74, 148.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (105, 252, 828)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2274)
[M::mem_pestat] mean and std.dev: (318.92, 387.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2997)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (250, 372, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1093)
[M::mem_pestat] mean and std.dev: (430.60, 259.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1468)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 352.930 CPU sec, 43.823 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 221521, 10, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 374, 477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 857)
[M::mem_pestat] mean and std.dev: (385.03, 147.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (66, 795, 1069)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3075)
[M::mem_pestat] mean and std.dev: (728.60, 649.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4078)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (172, 499, 648)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1600)
[M::mem_pestat] mean and std.dev: (497.00, 373.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2076)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 353.973 CPU sec, 43.982 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221189, 18, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.64, 146.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (130, 170, 2195)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6325)
[M::mem_pestat] mean and std.dev: (821.50, 1275.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8390)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 347, 1124)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3022)
[M::mem_pestat] mean and std.dev: (545.09, 570.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3971)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 354.444 CPU sec, 44.033 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 221285, 11, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 371, 472)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 846)
[M::mem_pestat] mean and std.dev: (381.28, 145.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1033)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (292, 801, 4610)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13246)
[M::mem_pestat] mean and std.dev: (2143.27, 2584.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17564)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 357, 616)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1438)
[M::mem_pestat] mean and std.dev: (337.33, 193.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1849)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 357.258 CPU sec, 44.389 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 220948, 15, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (380.93, 145.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (132, 902, 4366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12834)
[M::mem_pestat] mean and std.dev: (2329.67, 2728.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17068)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 314, 689)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1679)
[M::mem_pestat] mean and std.dev: (351.88, 208.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2174)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 354.877 CPU sec, 44.058 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221110, 14, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 369, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 833)
[M::mem_pestat] mean and std.dev: (378.46, 143.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1016)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (132, 655, 3724)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10908)
[M::mem_pestat] mean and std.dev: (1902.50, 2423.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14500)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 359, 602)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1344)
[M::mem_pestat] mean and std.dev: (453.20, 323.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1746)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 358.890 CPU sec, 44.582 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 222235, 13, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 363, 459)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 819)
[M::mem_pestat] mean and std.dev: (371.89, 139.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 999)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (332, 1764, 2383)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6485)
[M::mem_pestat] mean and std.dev: (1623.23, 1590.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8536)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 250, 629)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1499)
[M::mem_pestat] mean and std.dev: (440.93, 372.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1934)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 381.399 CPU sec, 47.384 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 223028, 10, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 368, 468)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (378.19, 144.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1211, 1770, 2401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4781)
[M::mem_pestat] mean and std.dev: (1565.50, 824.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5971)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (407, 532, 3281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9029)
[M::mem_pestat] mean and std.dev: (2073.12, 2528.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12188)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 365.055 CPU sec, 45.356 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222513, 19, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 852)
[M::mem_pestat] mean and std.dev: (382.86, 147.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1041)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (314, 1542, 3025)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8447)
[M::mem_pestat] mean and std.dev: (1605.68, 1518.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11158)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (188, 334, 658)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1598)
[M::mem_pestat] mean and std.dev: (429.07, 316.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2068)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 366.626 CPU sec, 45.552 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 222003, 8, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (145, 286, 1207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3331)
[M::mem_pestat] mean and std.dev: (320.56, 326.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4393)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 375, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (385.96, 148.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (199, 259, 561)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1285)
[M::mem_pestat] mean and std.dev: (296.86, 196.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1647)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 366.929 CPU sec, 45.585 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 222347, 10, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 473)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (382.25, 145.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (101, 411, 3024)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8870)
[M::mem_pestat] mean and std.dev: (1555.90, 1789.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11793)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (402, 590, 821)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1659)
[M::mem_pestat] mean and std.dev: (634.43, 301.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2078)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 362.794 CPU sec, 45.089 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222639, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.06, 146.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 662252 reads in 364.542 CPU sec, 45.300 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222475, 17, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (133, 301, 495)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1219)
[M::mem_pestat] mean and std.dev: (270.56, 151.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1581)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (380.76, 144.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (136, 167, 462)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1114)
[M::mem_pestat] mean and std.dev: (284.69, 263.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1440)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 404, 871)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2105)
[M::mem_pestat] mean and std.dev: (441.00, 336.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2722)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 362.988 CPU sec, 45.103 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 222927, 18, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (209, 314, 1300)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3482)
[M::mem_pestat] mean and std.dev: (498.90, 523.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4573)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (380.91, 144.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (319, 1104, 1818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4816)
[M::mem_pestat] mean and std.dev: (1094.56, 1106.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6315)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 265, 459)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1053)
[M::mem_pestat] mean and std.dev: (339.70, 232.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1350)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 367.011 CPU sec, 45.556 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222444, 10, 24)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 367, 465)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 829)
[M::mem_pestat] mean and std.dev: (376.69, 141.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1011)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (986, 3219, 4586)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11786)
[M::mem_pestat] mean and std.dev: (3315.80, 3144.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15895)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (215, 308, 713)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1709)
[M::mem_pestat] mean and std.dev: (443.78, 373.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2207)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 383.907 CPU sec, 47.662 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 220819, 5, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (291, 377, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)
[M::mem_pestat] mean and std.dev: (388.74, 147.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (308, 683, 978)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2318)
[M::mem_pestat] mean and std.dev: (566.89, 315.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2988)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 469.622 CPU sec, 58.421 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 220494, 11, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (106, 289, 630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1678)
[M::mem_pestat] mean and std.dev: (325.58, 252.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2202)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (294, 382, 488)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 876)
[M::mem_pestat] mean and std.dev: (394.31, 150.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1070)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (236, 297, 1304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3440)
[M::mem_pestat] mean and std.dev: (685.00, 959.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4522)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (346, 1027, 1584)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4060)
[M::mem_pestat] mean and std.dev: (847.00, 615.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5298)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 424.661 CPU sec, 52.847 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 219923, 17, 17)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (297, 385, 493)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 885)
[M::mem_pestat] mean and std.dev: (398.54, 152.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1081)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (122, 668, 4636)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13664)
[M::mem_pestat] mean and std.dev: (2135.65, 2797.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18178)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 299, 748)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1866)
[M::mem_pestat] mean and std.dev: (383.93, 253.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2425)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 381.496 CPU sec, 47.398 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 221701, 7, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 313, 829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2117)
[M::mem_pestat] mean and std.dev: (511.17, 508.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2761)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (292, 380, 485)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 871)
[M::mem_pestat] mean and std.dev: (391.72, 149.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1064)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (180, 218, 517)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1191)
[M::mem_pestat] mean and std.dev: (374.73, 275.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1528)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 367.666 CPU sec, 45.698 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 221469, 14, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 381, 487)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 875)
[M::mem_pestat] mean and std.dev: (393.30, 150.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1069)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (296, 562, 886)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2066)
[M::mem_pestat] mean and std.dev: (472.83, 318.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2656)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 417, 1304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3648)
[M::mem_pestat] mean and std.dev: (694.76, 765.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4820)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 364.009 CPU sec, 45.201 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221984, 14, 20)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)
[M::mem_pestat] mean and std.dev: (386.06, 147.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1048)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (438, 612, 2706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7242)
[M::mem_pestat] mean and std.dev: (995.92, 982.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9510)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (210, 398, 668)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1584)
[M::mem_pestat] mean and std.dev: (405.84, 253.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2042)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 366.481 CPU sec, 45.547 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 221873, 16, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 375, 477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 853)
[M::mem_pestat] mean and std.dev: (385.99, 146.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1041)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 1074, 4545)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13271)
[M::mem_pestat] mean and std.dev: (2331.19, 2324.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17634)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (236, 335, 1040)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2648)
[M::mem_pestat] mean and std.dev: (634.93, 751.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3640)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 367.036 CPU sec, 45.609 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 221674, 10, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 374, 476)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 852)
[M::mem_pestat] mean and std.dev: (385.12, 145.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1040)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (352, 2770, 5936)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17104)
[M::mem_pestat] mean and std.dev: (2926.90, 2521.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22688)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 216, 1432)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3972)
[M::mem_pestat] mean and std.dev: (664.90, 734.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5242)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 378.786 CPU sec, 47.100 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 222521, 14, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (284, 442, 1146)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2870)
[M::mem_pestat] mean and std.dev: (663.33, 537.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3732)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 370, 469)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 835)
[M::mem_pestat] mean and std.dev: (380.43, 142.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1018)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (78, 429, 2477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7275)
[M::mem_pestat] mean and std.dev: (1235.92, 1858.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9674)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 344, 1087)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2749)
[M::mem_pestat] mean and std.dev: (707.90, 692.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3580)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 389.793 CPU sec, 48.448 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 221535, 13, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 385, 1362)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3696)
[M::mem_pestat] mean and std.dev: (719.00, 746.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4863)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (294, 381, 487)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 873)
[M::mem_pestat] mean and std.dev: (393.43, 150.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1066)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 162, 896)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2438)
[M::mem_pestat] mean and std.dev: (324.45, 291.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3209)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (264, 382, 889)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2139)
[M::mem_pestat] mean and std.dev: (541.06, 479.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2764)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 374.913 CPU sec, 46.585 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221542, 9, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 380, 486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 872)
[M::mem_pestat] mean and std.dev: (392.84, 150.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1065)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (249, 374, 654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1464)
[M::mem_pestat] mean and std.dev: (439.54, 342.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1869)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 366.999 CPU sec, 45.547 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 220442, 9, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (271, 411, 785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1813)
[M::mem_pestat] mean and std.dev: (340.56, 200.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2327)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 381, 486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 872)
[M::mem_pestat] mean and std.dev: (393.06, 150.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1065)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (208, 295, 632)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1480)
[M::mem_pestat] mean and std.dev: (442.82, 358.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1904)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 371.941 CPU sec, 46.182 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 221329, 15, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 377, 481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 863)
[M::mem_pestat] mean and std.dev: (388.82, 148.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1054)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (143, 186, 828)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2198)
[M::mem_pestat] mean and std.dev: (534.40, 590.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2895)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (260, 499, 841)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2003)
[M::mem_pestat] mean and std.dev: (677.25, 504.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2695)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 369.765 CPU sec, 45.945 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 221298, 18, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (217, 276, 870)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2176)
[M::mem_pestat] mean and std.dev: (505.00, 365.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2829)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 378, 482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 866)
[M::mem_pestat] mean and std.dev: (389.53, 148.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1058)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (355, 922, 2449)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6637)
[M::mem_pestat] mean and std.dev: (1686.22, 1826.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8992)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (143, 250, 433)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1013)
[M::mem_pestat] mean and std.dev: (258.75, 138.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1303)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 370.851 CPU sec, 46.020 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222285, 9, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (156, 226, 525)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1263)
[M::mem_pestat] mean and std.dev: (310.30, 213.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1632)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.28, 146.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (95, 227, 859)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2387)
[M::mem_pestat] mean and std.dev: (334.69, 368.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3151)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 367.287 CPU sec, 45.614 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222854, 14, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (150, 341, 2778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8034)
[M::mem_pestat] mean and std.dev: (1534.80, 2339.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10891)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 374, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (384.86, 146.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1036)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (81, 328, 584)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1590)
[M::mem_pestat] mean and std.dev: (280.17, 281.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2093)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 326, 2063)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5653)
[M::mem_pestat] mean and std.dev: (654.00, 710.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7448)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 374.425 CPU sec, 46.454 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222705, 14, 27)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 469)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 837)
[M::mem_pestat] mean and std.dev: (380.02, 143.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1021)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (70, 968, 1803)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5269)
[M::mem_pestat] mean and std.dev: (1340.86, 1587.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7691)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 298, 541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1273)
[M::mem_pestat] mean and std.dev: (333.88, 198.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1639)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 381.978 CPU sec, 47.471 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 222146, 18, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (281, 364, 461)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 821)
[M::mem_pestat] mean and std.dev: (373.66, 140.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1001)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 985, 3707)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10883)
[M::mem_pestat] mean and std.dev: (2056.00, 2669.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14471)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (150, 258, 981)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2643)
[M::mem_pestat] mean and std.dev: (363.82, 306.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3474)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 463.562 CPU sec, 57.700 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 220899, 17, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 473)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (382.11, 145.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (242, 723, 1582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4262)
[M::mem_pestat] mean and std.dev: (653.00, 621.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5602)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (168, 349, 918)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2418)
[M::mem_pestat] mean and std.dev: (487.67, 413.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3168)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 464.167 CPU sec, 57.750 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 219440, 10, 21)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 373, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 851)
[M::mem_pestat] mean and std.dev: (384.26, 146.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (55, 352, 1061)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3073)
[M::mem_pestat] mean and std.dev: (557.22, 745.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4079)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 446, 1928)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5180)
[M::mem_pestat] mean and std.dev: (991.95, 1070.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6806)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 423.566 CPU sec, 52.702 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221315, 12, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (382.95, 146.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 683, 1894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5296)
[M::mem_pestat] mean and std.dev: (757.09, 790.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6997)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (398, 617, 1366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3302)
[M::mem_pestat] mean and std.dev: (842.38, 723.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4270)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 377.301 CPU sec, 46.890 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 222103, 11, 20)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (144, 258, 373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 831)
[M::mem_pestat] mean and std.dev: (230.67, 104.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1060)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 853)
[M::mem_pestat] mean and std.dev: (384.00, 146.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1042)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (361, 1406, 3656)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10246)
[M::mem_pestat] mean and std.dev: (1820.55, 1962.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13541)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (368, 547, 1512)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3800)
[M::mem_pestat] mean and std.dev: (760.68, 573.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4944)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 365.563 CPU sec, 45.445 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 222182, 16, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 473)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (382.36, 146.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (77, 418, 1265)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3641)
[M::mem_pestat] mean and std.dev: (622.00, 670.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4829)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (340, 514, 874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1942)
[M::mem_pestat] mean and std.dev: (554.38, 366.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2476)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 363.618 CPU sec, 45.159 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 222208, 12, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 363, 525)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1167)
[M::mem_pestat] mean and std.dev: (287.18, 123.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1488)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.22, 146.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (423, 1089, 4324)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12126)
[M::mem_pestat] mean and std.dev: (2371.33, 2969.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16027)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (219, 498, 1344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3594)
[M::mem_pestat] mean and std.dev: (797.82, 833.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4719)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 367.440 CPU sec, 45.638 real sec
[M::process] read 406436 sequences (61371836 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 222259, 16, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 470)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 840)
[M::mem_pestat] mean and std.dev: (380.59, 144.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1025)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (111, 833, 2753)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8037)
[M::mem_pestat] mean and std.dev: (1320.62, 1591.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10679)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 372, 714)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1666)
[M::mem_pestat] mean and std.dev: (389.07, 248.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2142)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 372.925 CPU sec, 46.474 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 136677, 3, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 367, 464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 826)
[M::mem_pestat] mean and std.dev: (376.32, 140.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1007)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 406436 reads in 238.871 CPU sec, 29.845 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /Dedicated/jmichaelson-wdata/bcbio-dna/bin/bwa mem -K 100000000 -v 3 -t 8 -Y -M -R @RG\tID:S8_lane1\tSM:S8\tPL:ILLUMINA\tLB:lib1 /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/bwa/hg38.fa /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_08_lane1_20230820000_S8_L001_R1_001.fastq.gz /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_08_lane1_20230820000_S8_L001_R2_001.fastq.gz
[main] Real time: 3398.028 sec; CPU: 26358.123 sec
[E::hts_open_format] Failed to open file /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane1_sorted.bam.tmp.0000.bam
samtools sort: failed to create temporary file "/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane1_sorted.bam.tmp.0000.bam": File exists
[E::hts_open_format] Failed to open file /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane1_sorted.bam.tmp.0001.bam
samtools sort: failed to create temporary file "/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane1_sorted.bam.tmp.0001.bam": File exists
[M::bwa_idx_load_from_disk] read 3171 ALT contigs
[M::process] read 662252 sequences (100000052 bp)...
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222164, 5, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 1151, 1355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3611)
[M::mem_pestat] mean and std.dev: (1029.70, 915.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4739)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (280, 366, 466)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (376.29, 143.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1024)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (311, 561, 1404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3590)
[M::mem_pestat] mean and std.dev: (856.64, 844.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4683)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 410.717 CPU sec, 51.760 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 221944, 16, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 349, 590)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1384)
[M::mem_pestat] mean and std.dev: (375.15, 207.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1781)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 371, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (381.34, 145.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 1874, 4578)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13652)
[M::mem_pestat] mean and std.dev: (2353.88, 2751.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18189)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (209, 306, 1142)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3008)
[M::mem_pestat] mean and std.dev: (438.44, 380.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3941)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 394.151 CPU sec, 49.008 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 221437, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 285, 2109)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5925)
[M::mem_pestat] mean and std.dev: (672.92, 757.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7833)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.11, 146.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (149, 327, 1034)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2804)
[M::mem_pestat] mean and std.dev: (376.18, 303.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3689)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (147, 384, 790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2076)
[M::mem_pestat] mean and std.dev: (402.91, 292.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2719)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 352.923 CPU sec, 43.841 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221570, 18, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (382.96, 146.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (78, 198, 1727)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5025)
[M::mem_pestat] mean and std.dev: (826.88, 1409.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6674)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 397.040 CPU sec, 49.376 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222146, 12, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 371, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (381.15, 144.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (91, 2542, 3587)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10579)
[M::mem_pestat] mean and std.dev: (1931.08, 1613.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14075)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 600, 1061)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2771)
[M::mem_pestat] mean and std.dev: (619.07, 602.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3626)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 364.291 CPU sec, 45.258 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221830, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 370, 470)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 842)
[M::mem_pestat] mean and std.dev: (380.11, 144.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1028)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (95, 386, 1351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3863)
[M::mem_pestat] mean and std.dev: (453.25, 524.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5119)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (418, 797, 2233)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5863)
[M::mem_pestat] mean and std.dev: (1391.80, 1420.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7678)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 397.791 CPU sec, 49.547 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 221959, 14, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 368, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 835)
[M::mem_pestat] mean and std.dev: (378.18, 143.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (107, 552, 856)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2354)
[M::mem_pestat] mean and std.dev: (420.08, 412.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3103)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 252, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (193.45, 99.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 813)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 354.052 CPU sec, 43.981 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221715, 6, 17)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 367, 466)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 832)
[M::mem_pestat] mean and std.dev: (377.21, 142.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1015)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 216, 589)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1475)
[M::mem_pestat] mean and std.dev: (326.06, 225.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1918)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 371.833 CPU sec, 46.198 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 221200, 10, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (281, 365, 461)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 821)
[M::mem_pestat] mean and std.dev: (373.51, 139.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1001)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (242, 427, 677)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1547)
[M::mem_pestat] mean and std.dev: (435.78, 370.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1982)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 372, 779)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1757)
[M::mem_pestat] mean and std.dev: (524.23, 340.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2246)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 371.825 CPU sec, 46.195 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222210, 9, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (291, 377, 481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 861)
[M::mem_pestat] mean and std.dev: (389.08, 148.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 416, 584)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1212)
[M::mem_pestat] mean and std.dev: (411.60, 246.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1526)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 398.010 CPU sec, 49.462 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 220836, 14, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (345, 443, 1084)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2562)
[M::mem_pestat] mean and std.dev: (715.60, 567.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3301)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 381, 486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 872)
[M::mem_pestat] mean and std.dev: (392.95, 150.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1065)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (147, 921, 3546)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10344)
[M::mem_pestat] mean and std.dev: (1746.21, 2019.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13743)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (311, 543, 1322)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3344)
[M::mem_pestat] mean and std.dev: (671.00, 450.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4355)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 395.367 CPU sec, 49.102 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 220729, 17, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (291, 379, 484)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 870)
[M::mem_pestat] mean and std.dev: (390.97, 149.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1063)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (247, 813, 4541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13129)
[M::mem_pestat] mean and std.dev: (2074.76, 2220.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17423)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 286, 552)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1148)
[M::mem_pestat] mean and std.dev: (404.94, 220.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1446)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 394.059 CPU sec, 48.955 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 220851, 10, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 377, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (387.92, 148.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1050)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 146, 856)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2482)
[M::mem_pestat] mean and std.dev: (404.78, 511.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3295)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 332, 619)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1465)
[M::mem_pestat] mean and std.dev: (395.18, 227.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1888)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 371.222 CPU sec, 46.096 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 221556, 9, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 374, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 851)
[M::mem_pestat] mean and std.dev: (384.51, 146.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 184, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (193.82, 82.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 875)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 384.270 CPU sec, 47.777 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 221996, 12, 20)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 371, 472)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 848)
[M::mem_pestat] mean and std.dev: (381.44, 146.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1036)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 604, 1760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5194)
[M::mem_pestat] mean and std.dev: (1083.33, 1267.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6911)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (153, 348, 894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2376)
[M::mem_pestat] mean and std.dev: (475.00, 383.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3117)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 349.725 CPU sec, 43.468 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221848, 11, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 369, 469)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 839)
[M::mem_pestat] mean and std.dev: (379.30, 144.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1024)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 1521, 4376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12742)
[M::mem_pestat] mean and std.dev: (2183.18, 2022.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16925)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (278, 378, 482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 890)
[M::mem_pestat] mean and std.dev: (327.20, 119.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1094)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 355.550 CPU sec, 45.212 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222297, 13, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 368, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 835)
[M::mem_pestat] mean and std.dev: (377.89, 143.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (137, 220, 2235)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6431)
[M::mem_pestat] mean and std.dev: (919.42, 1697.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8529)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (155, 385, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1337)
[M::mem_pestat] mean and std.dev: (502.53, 435.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2244)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 358.832 CPU sec, 44.563 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222023, 15, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (216, 253, 364)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 660)
[M::mem_pestat] mean and std.dev: (238.38, 70.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (281, 365, 462)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 824)
[M::mem_pestat] mean and std.dev: (374.49, 140.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1005)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (400, 1320, 3973)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11119)
[M::mem_pestat] mean and std.dev: (2409.60, 2508.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14692)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 317, 1033)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2611)
[M::mem_pestat] mean and std.dev: (498.80, 552.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3400)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 375.415 CPU sec, 46.671 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 221756, 27, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (247, 336, 888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2170)
[M::mem_pestat] mean and std.dev: (499.06, 460.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2811)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 369, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 833)
[M::mem_pestat] mean and std.dev: (379.08, 142.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1016)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (76, 231, 1424)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4120)
[M::mem_pestat] mean and std.dev: (626.31, 836.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5468)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (341, 392, 1064)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2510)
[M::mem_pestat] mean and std.dev: (593.00, 361.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3233)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 461.663 CPU sec, 57.465 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 220928, 11, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 376, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 862)
[M::mem_pestat] mean and std.dev: (387.77, 148.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1053)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (84, 970, 4401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13035)
[M::mem_pestat] mean and std.dev: (1929.91, 2184.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17352)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (275, 561, 1241)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3173)
[M::mem_pestat] mean and std.dev: (750.40, 572.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4139)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 523.576 CPU sec, 65.168 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221820, 15, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 376, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 862)
[M::mem_pestat] mean and std.dev: (387.86, 148.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1053)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (307, 843, 1655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4351)
[M::mem_pestat] mean and std.dev: (881.43, 815.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5699)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (260, 282, 411)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 713)
[M::mem_pestat] mean and std.dev: (274.77, 111.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 864)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 398.415 CPU sec, 245.842 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 221672, 18, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (257, 335, 431)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 779)
[M::mem_pestat] mean and std.dev: (276.88, 89.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 953)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)
[M::mem_pestat] mean and std.dev: (386.10, 147.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1048)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (100, 1159, 2017)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5851)
[M::mem_pestat] mean and std.dev: (1024.76, 1128.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7768)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 259, 370)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 718)
[M::mem_pestat] mean and std.dev: (256.75, 145.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 892)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 427.197 CPU sec, 53.163 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 221548, 16, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (173, 405, 1616)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4502)
[M::mem_pestat] mean and std.dev: (604.45, 641.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5945)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 853)
[M::mem_pestat] mean and std.dev: (383.98, 146.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1042)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (97, 464, 1894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5488)
[M::mem_pestat] mean and std.dev: (936.53, 1436.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7285)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (222, 495, 936)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2364)
[M::mem_pestat] mean and std.dev: (581.89, 509.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3078)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 404.114 CPU sec, 50.268 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222367, 17, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 845)
[M::mem_pestat] mean and std.dev: (380.31, 145.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1032)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (66, 117, 1066)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3066)
[M::mem_pestat] mean and std.dev: (379.33, 634.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4066)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 324, 1502)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4094)
[M::mem_pestat] mean and std.dev: (1053.50, 1236.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5999)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 425.455 CPU sec, 52.892 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222200, 15, 26)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 369, 468)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (378.83, 143.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (148, 422, 1561)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4387)
[M::mem_pestat] mean and std.dev: (843.57, 1021.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5800)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (172, 302, 718)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1810)
[M::mem_pestat] mean and std.dev: (373.30, 381.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2356)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 411.219 CPU sec, 51.229 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221962, 12, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (282, 367, 466)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 834)
[M::mem_pestat] mean and std.dev: (376.83, 142.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1018)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 946, 3711)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10883)
[M::mem_pestat] mean and std.dev: (1861.83, 2450.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14469)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (216, 298, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1107)
[M::mem_pestat] mean and std.dev: (284.83, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1404)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 429.197 CPU sec, 53.499 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222120, 9, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (280, 364, 460)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 820)
[M::mem_pestat] mean and std.dev: (373.25, 140.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1000)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (159, 276, 585)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1437)
[M::mem_pestat] mean and std.dev: (407.19, 363.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1863)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 458.012 CPU sec, 57.018 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222227, 18, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (282, 367, 465)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 831)
[M::mem_pestat] mean and std.dev: (376.40, 142.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1014)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (93, 236, 1356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3882)
[M::mem_pestat] mean and std.dev: (445.47, 557.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5145)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (473, 666, 800)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1454)
[M::mem_pestat] mean and std.dev: (533.00, 235.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1781)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 435.576 CPU sec, 54.119 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221610, 24, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 479)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 861)
[M::mem_pestat] mean and std.dev: (386.75, 148.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (649, 1157, 2483)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6151)
[M::mem_pestat] mean and std.dev: (1492.17, 1342.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7985)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (235, 915, 1559)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4207)
[M::mem_pestat] mean and std.dev: (1197.07, 1293.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6369)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 413.161 CPU sec, 51.333 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221628, 7, 19)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 479)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 861)
[M::mem_pestat] mean and std.dev: (386.83, 148.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (176, 339, 743)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1877)
[M::mem_pestat] mean and std.dev: (417.94, 399.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2444)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 398.130 CPU sec, 49.521 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 220971, 14, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 374, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (385.74, 148.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (105, 252, 828)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2274)
[M::mem_pestat] mean and std.dev: (318.92, 387.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2997)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (250, 372, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1093)
[M::mem_pestat] mean and std.dev: (430.60, 259.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1468)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 400.378 CPU sec, 49.715 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 221521, 10, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 374, 477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 857)
[M::mem_pestat] mean and std.dev: (385.03, 147.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (66, 795, 1069)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3075)
[M::mem_pestat] mean and std.dev: (728.60, 649.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4078)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (172, 499, 648)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1600)
[M::mem_pestat] mean and std.dev: (497.00, 373.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2076)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 401.008 CPU sec, 49.887 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221189, 18, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.64, 146.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (130, 170, 2195)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6325)
[M::mem_pestat] mean and std.dev: (821.50, 1275.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8390)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 347, 1124)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3022)
[M::mem_pestat] mean and std.dev: (545.09, 570.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3971)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 404.288 CPU sec, 51.340 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 221285, 11, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 371, 472)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 846)
[M::mem_pestat] mean and std.dev: (381.28, 145.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1033)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (292, 801, 4610)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13246)
[M::mem_pestat] mean and std.dev: (2143.27, 2584.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17564)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 357, 616)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1438)
[M::mem_pestat] mean and std.dev: (337.33, 193.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1849)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 430.569 CPU sec, 53.533 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 220948, 15, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (380.93, 145.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (132, 902, 4366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12834)
[M::mem_pestat] mean and std.dev: (2329.67, 2728.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17068)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 314, 689)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1679)
[M::mem_pestat] mean and std.dev: (351.88, 208.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2174)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 433.277 CPU sec, 53.789 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221110, 14, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 369, 467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 833)
[M::mem_pestat] mean and std.dev: (378.46, 143.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1016)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (132, 655, 3724)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10908)
[M::mem_pestat] mean and std.dev: (1902.50, 2423.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14500)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 359, 602)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1344)
[M::mem_pestat] mean and std.dev: (453.20, 323.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1746)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 406.704 CPU sec, 50.505 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 222235, 13, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 363, 459)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 819)
[M::mem_pestat] mean and std.dev: (371.89, 139.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 999)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (332, 1764, 2383)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6485)
[M::mem_pestat] mean and std.dev: (1623.23, 1590.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8536)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (194, 250, 629)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1499)
[M::mem_pestat] mean and std.dev: (440.93, 372.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1934)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 436.528 CPU sec, 54.470 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 223028, 10, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 368, 468)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (378.19, 144.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1211, 1770, 2401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4781)
[M::mem_pestat] mean and std.dev: (1565.50, 824.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5971)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (407, 532, 3281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9029)
[M::mem_pestat] mean and std.dev: (2073.12, 2528.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12188)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 427.266 CPU sec, 53.604 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222513, 19, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 852)
[M::mem_pestat] mean and std.dev: (382.86, 147.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1041)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (314, 1542, 3025)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8447)
[M::mem_pestat] mean and std.dev: (1605.68, 1518.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11158)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (188, 334, 658)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1598)
[M::mem_pestat] mean and std.dev: (429.07, 316.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2068)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 520.398 CPU sec, 64.755 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 222003, 8, 25)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (145, 286, 1207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3331)
[M::mem_pestat] mean and std.dev: (320.56, 326.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4393)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 375, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 860)
[M::mem_pestat] mean and std.dev: (385.96, 148.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (199, 259, 561)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1285)
[M::mem_pestat] mean and std.dev: (296.86, 196.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1647)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 455.106 CPU sec, 56.968 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 222347, 10, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 473)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (382.25, 145.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (101, 411, 3024)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8870)
[M::mem_pestat] mean and std.dev: (1555.90, 1789.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11793)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (402, 590, 821)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1659)
[M::mem_pestat] mean and std.dev: (634.43, 301.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2078)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 448.099 CPU sec, 55.622 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222639, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.06, 146.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 662252 reads in 566.192 CPU sec, 70.683 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222475, 17, 22)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (133, 301, 495)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1219)
[M::mem_pestat] mean and std.dev: (270.56, 151.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1581)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (380.76, 144.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (136, 167, 462)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1114)
[M::mem_pestat] mean and std.dev: (284.69, 263.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1440)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 404, 871)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2105)
[M::mem_pestat] mean and std.dev: (441.00, 336.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2722)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 415.420 CPU sec, 52.464 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 222927, 18, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (209, 314, 1300)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3482)
[M::mem_pestat] mean and std.dev: (498.90, 523.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4573)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 843)
[M::mem_pestat] mean and std.dev: (380.91, 144.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1029)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (319, 1104, 1818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4816)
[M::mem_pestat] mean and std.dev: (1094.56, 1106.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6315)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 265, 459)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1053)
[M::mem_pestat] mean and std.dev: (339.70, 232.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1350)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 435.235 CPU sec, 54.166 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 222444, 10, 24)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 367, 465)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 829)
[M::mem_pestat] mean and std.dev: (376.69, 141.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1011)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (986, 3219, 4586)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11786)
[M::mem_pestat] mean and std.dev: (3315.80, 3144.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15895)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (215, 308, 713)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1709)
[M::mem_pestat] mean and std.dev: (443.78, 373.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2207)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 409.690 CPU sec, 51.306 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 220819, 5, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (291, 377, 480)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)
[M::mem_pestat] mean and std.dev: (388.74, 147.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (308, 683, 978)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2318)
[M::mem_pestat] mean and std.dev: (566.89, 315.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2988)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 497.966 CPU sec, 82.300 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 220494, 11, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (106, 289, 630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1678)
[M::mem_pestat] mean and std.dev: (325.58, 252.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2202)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (294, 382, 488)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 876)
[M::mem_pestat] mean and std.dev: (394.31, 150.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1070)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (236, 297, 1304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3440)
[M::mem_pestat] mean and std.dev: (685.00, 959.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4522)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (346, 1027, 1584)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4060)
[M::mem_pestat] mean and std.dev: (847.00, 615.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5298)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 495.710 CPU sec, 61.806 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 219923, 17, 17)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (297, 385, 493)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 885)
[M::mem_pestat] mean and std.dev: (398.54, 152.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1081)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (122, 668, 4636)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13664)
[M::mem_pestat] mean and std.dev: (2135.65, 2797.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18178)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 299, 748)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1866)
[M::mem_pestat] mean and std.dev: (383.93, 253.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2425)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 429.645 CPU sec, 53.847 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 221701, 7, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 313, 829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2117)
[M::mem_pestat] mean and std.dev: (511.17, 508.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2761)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (292, 380, 485)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 871)
[M::mem_pestat] mean and std.dev: (391.72, 149.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1064)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (180, 218, 517)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1191)
[M::mem_pestat] mean and std.dev: (374.73, 275.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1528)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 391.004 CPU sec, 48.595 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 221469, 14, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 381, 487)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 875)
[M::mem_pestat] mean and std.dev: (393.30, 150.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1069)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (296, 562, 886)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2066)
[M::mem_pestat] mean and std.dev: (472.83, 318.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2656)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 417, 1304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3648)
[M::mem_pestat] mean and std.dev: (694.76, 765.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4820)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 403.662 CPU sec, 50.192 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221984, 14, 20)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 375, 478)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)
[M::mem_pestat] mean and std.dev: (386.06, 147.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1048)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (438, 612, 2706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7242)
[M::mem_pestat] mean and std.dev: (995.92, 982.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9510)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (210, 398, 668)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1584)
[M::mem_pestat] mean and std.dev: (405.84, 253.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2042)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 393.461 CPU sec, 48.920 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 221873, 16, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 375, 477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 853)
[M::mem_pestat] mean and std.dev: (385.99, 146.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1041)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 1074, 4545)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13271)
[M::mem_pestat] mean and std.dev: (2331.19, 2324.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17634)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (236, 335, 1040)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2648)
[M::mem_pestat] mean and std.dev: (634.93, 751.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3640)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 380.231 CPU sec, 47.258 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 221674, 10, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 374, 476)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 852)
[M::mem_pestat] mean and std.dev: (385.12, 145.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1040)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (352, 2770, 5936)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17104)
[M::mem_pestat] mean and std.dev: (2926.90, 2521.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22688)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 216, 1432)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3972)
[M::mem_pestat] mean and std.dev: (664.90, 734.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5242)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 379.293 CPU sec, 47.933 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 222521, 14, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (284, 442, 1146)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2870)
[M::mem_pestat] mean and std.dev: (663.33, 537.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3732)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 370, 469)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 835)
[M::mem_pestat] mean and std.dev: (380.43, 142.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1018)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (78, 429, 2477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7275)
[M::mem_pestat] mean and std.dev: (1235.92, 1858.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9674)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 344, 1087)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2749)
[M::mem_pestat] mean and std.dev: (707.90, 692.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3580)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 455.216 CPU sec, 56.725 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 221535, 13, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 385, 1362)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3696)
[M::mem_pestat] mean and std.dev: (719.00, 746.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4863)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (294, 381, 487)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 873)
[M::mem_pestat] mean and std.dev: (393.43, 150.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1066)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 162, 896)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2438)
[M::mem_pestat] mean and std.dev: (324.45, 291.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3209)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (264, 382, 889)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2139)
[M::mem_pestat] mean and std.dev: (541.06, 479.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2764)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 461.282 CPU sec, 57.529 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 221542, 9, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 380, 486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 872)
[M::mem_pestat] mean and std.dev: (392.84, 150.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1065)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (249, 374, 654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1464)
[M::mem_pestat] mean and std.dev: (439.54, 342.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1869)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 374.828 CPU sec, 46.542 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 220442, 9, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (271, 411, 785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1813)
[M::mem_pestat] mean and std.dev: (340.56, 200.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2327)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (293, 381, 486)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 872)
[M::mem_pestat] mean and std.dev: (393.06, 150.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1065)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (208, 295, 632)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1480)
[M::mem_pestat] mean and std.dev: (442.82, 358.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1904)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 515.467 CPU sec, 64.140 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 221329, 15, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 377, 481)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 863)
[M::mem_pestat] mean and std.dev: (388.82, 148.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1054)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (143, 186, 828)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2198)
[M::mem_pestat] mean and std.dev: (534.40, 590.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2895)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (260, 499, 841)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2003)
[M::mem_pestat] mean and std.dev: (677.25, 504.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2695)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 492.167 CPU sec, 61.456 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 221298, 18, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (217, 276, 870)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2176)
[M::mem_pestat] mean and std.dev: (505.00, 365.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2829)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (290, 378, 482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 866)
[M::mem_pestat] mean and std.dev: (389.53, 148.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1058)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (355, 922, 2449)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6637)
[M::mem_pestat] mean and std.dev: (1686.22, 1826.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8992)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (143, 250, 433)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1013)
[M::mem_pestat] mean and std.dev: (258.75, 138.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1303)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 395.110 CPU sec, 58.661 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222285, 9, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (156, 226, 525)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1263)
[M::mem_pestat] mean and std.dev: (310.30, 213.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1632)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.28, 146.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (95, 227, 859)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2387)
[M::mem_pestat] mean and std.dev: (334.69, 368.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3151)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 397.298 CPU sec, 63.636 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 222854, 14, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (150, 341, 2778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8034)
[M::mem_pestat] mean and std.dev: (1534.80, 2339.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10891)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 374, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (384.86, 146.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1036)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (81, 328, 584)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1590)
[M::mem_pestat] mean and std.dev: (280.17, 281.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2093)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 326, 2063)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5653)
[M::mem_pestat] mean and std.dev: (654.00, 710.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7448)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 361.447 CPU sec, 44.884 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 222705, 14, 27)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 469)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 837)
[M::mem_pestat] mean and std.dev: (380.02, 143.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1021)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (70, 968, 1803)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5269)
[M::mem_pestat] mean and std.dev: (1340.86, 1587.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7691)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (175, 298, 541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1273)
[M::mem_pestat] mean and std.dev: (333.88, 198.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1639)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 507.831 CPU sec, 63.184 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 222146, 18, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (281, 364, 461)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 821)
[M::mem_pestat] mean and std.dev: (373.66, 140.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1001)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 985, 3707)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10883)
[M::mem_pestat] mean and std.dev: (2056.00, 2669.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14471)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (150, 258, 981)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2643)
[M::mem_pestat] mean and std.dev: (363.82, 306.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3474)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 557.468 CPU sec, 69.372 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 220899, 17, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 473)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (382.11, 145.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (242, 723, 1582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4262)
[M::mem_pestat] mean and std.dev: (653.00, 621.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5602)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (168, 349, 918)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2418)
[M::mem_pestat] mean and std.dev: (487.67, 413.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3168)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 473.783 CPU sec, 59.269 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 219440, 10, 21)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (287, 373, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 851)
[M::mem_pestat] mean and std.dev: (384.26, 146.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (55, 352, 1061)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3073)
[M::mem_pestat] mean and std.dev: (557.22, 745.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4079)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 446, 1928)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5180)
[M::mem_pestat] mean and std.dev: (991.95, 1070.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6806)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 422.420 CPU sec, 144.981 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 221315, 12, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (382.95, 146.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 683, 1894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5296)
[M::mem_pestat] mean and std.dev: (757.09, 790.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6997)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (398, 617, 1366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3302)
[M::mem_pestat] mean and std.dev: (842.38, 723.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4270)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 453.619 CPU sec, 56.426 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 222103, 11, 20)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (144, 258, 373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 831)
[M::mem_pestat] mean and std.dev: (230.67, 104.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1060)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 373, 475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 853)
[M::mem_pestat] mean and std.dev: (384.00, 146.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1042)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (361, 1406, 3656)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10246)
[M::mem_pestat] mean and std.dev: (1820.55, 1962.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13541)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (368, 547, 1512)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3800)
[M::mem_pestat] mean and std.dev: (760.68, 573.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4944)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 401.773 CPU sec, 49.827 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 222182, 16, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 372, 473)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 849)
[M::mem_pestat] mean and std.dev: (382.36, 146.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1037)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (77, 418, 1265)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3641)
[M::mem_pestat] mean and std.dev: (622.00, 670.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4829)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (340, 514, 874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1942)
[M::mem_pestat] mean and std.dev: (554.38, 366.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2476)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 376.535 CPU sec, 46.785 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 222208, 12, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 363, 525)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1167)
[M::mem_pestat] mean and std.dev: (287.18, 123.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1488)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (286, 372, 474)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 850)
[M::mem_pestat] mean and std.dev: (383.22, 146.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1038)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (423, 1089, 4324)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12126)
[M::mem_pestat] mean and std.dev: (2371.33, 2969.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16027)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (219, 498, 1344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3594)
[M::mem_pestat] mean and std.dev: (797.82, 833.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4719)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 444.875 CPU sec, 55.267 real sec
[M::process] read 406436 sequences (61371836 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 222259, 16, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (285, 370, 470)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 840)
[M::mem_pestat] mean and std.dev: (380.59, 144.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1025)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (111, 833, 2753)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8037)
[M::mem_pestat] mean and std.dev: (1320.62, 1591.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10679)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 372, 714)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1666)
[M::mem_pestat] mean and std.dev: (389.07, 248.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2142)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 387.683 CPU sec, 48.302 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 136677, 3, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 367, 464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 826)
[M::mem_pestat] mean and std.dev: (376.32, 140.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1007)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 406436 reads in 255.131 CPU sec, 31.869 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /Dedicated/jmichaelson-wdata/bcbio-dna/bin/bwa mem -K 100000000 -v 3 -t 8 -Y -M -R @RG\tID:S8_lane1\tSM:S8\tPL:ILLUMINA\tLB:lib1 /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/bwa/hg38.fa /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_08_lane1_20230820000_S8_L001_R1_001.fastq.gz /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_08_lane1_20230820000_S8_L001_R2_001.fastq.gz
[main] Real time: 4226.154 sec; CPU: 29684.537 sec
[bam_sort_core] merging from 22 files and 2 in-memory blocks...
[Tue Jan 16 15:47:28 CST 2024] picard.sam.markduplicates.MarkDuplicates INPUT=[/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted.bam] OUTPUT=/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted_set_marked.bam METRICS_FILE=/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_marked_dup_metrics.txt    MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=50000 MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=8000 SORTING_COLLECTION_SIZE_RATIO=0.25 PROGRAM_RECORD_ID=MarkDuplicates PROGRAM_GROUP_NAME=MarkDuplicates REMOVE_DUPLICATES=false ASSUME_SORTED=false DUPLICATE_SCORING_STRATEGY=SUM_OF_BASE_QUALITIES READ_NAME_REGEX=[a-zA-Z0-9]+:[0-9]:([0-9]+):([0-9]+):([0-9]+).* OPTICAL_DUPLICATE_PIXEL_DISTANCE=100 VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json
[Tue Jan 16 15:47:28 CST 2024] Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux 3.10.0-1160.99.1.el7.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_382-b05; Picard version: 1.141(8ece590411350163e7689e9e77aab8efcb622170_1447695087) IntelDeflater
INFO	2024-01-16 15:47:29	MarkDuplicates	Start of doWork freeMemory: 510837496; totalMemory: 514850816; maxMemory: 954728448
INFO	2024-01-16 15:47:29	MarkDuplicates	Reading input file and constructing read end information.
INFO	2024-01-16 15:47:29	MarkDuplicates	Will retain up to 3672032 data points before spilling to disk.
INFO	2024-01-16 15:47:34	MarkDuplicates	Read     1,000,000 records.  Elapsed time: 00:00:04s.  Time for last 1,000,000:    4s.  Last read position: chr1:77,023,674
INFO	2024-01-16 15:47:34	MarkDuplicates	Tracking 5576 as yet unmatched pairs. 214 records in RAM.
INFO	2024-01-16 15:47:39	MarkDuplicates	Read     2,000,000 records.  Elapsed time: 00:00:09s.  Time for last 1,000,000:    4s.  Last read position: chr1:155,463,906
INFO	2024-01-16 15:47:39	MarkDuplicates	Tracking 10721 as yet unmatched pairs. 225 records in RAM.
INFO	2024-01-16 15:47:43	MarkDuplicates	Read     3,000,000 records.  Elapsed time: 00:00:13s.  Time for last 1,000,000:    4s.  Last read position: chr1:234,043,783
INFO	2024-01-16 15:47:43	MarkDuplicates	Tracking 15304 as yet unmatched pairs. 64 records in RAM.
INFO	2024-01-16 15:47:52	MarkDuplicates	Read     4,000,000 records.  Elapsed time: 00:00:22s.  Time for last 1,000,000:    8s.  Last read position: chr2:56,609,107
INFO	2024-01-16 15:47:52	MarkDuplicates	Tracking 58482 as yet unmatched pairs. 3763 records in RAM.
INFO	2024-01-16 15:47:56	MarkDuplicates	Read     5,000,000 records.  Elapsed time: 00:00:26s.  Time for last 1,000,000:    4s.  Last read position: chr2:134,343,280
INFO	2024-01-16 15:47:56	MarkDuplicates	Tracking 66947 as yet unmatched pairs. 2257 records in RAM.
INFO	2024-01-16 15:48:02	MarkDuplicates	Read     6,000,000 records.  Elapsed time: 00:00:32s.  Time for last 1,000,000:    5s.  Last read position: chr2:213,802,849
INFO	2024-01-16 15:48:02	MarkDuplicates	Tracking 68256 as yet unmatched pairs. 640 records in RAM.
INFO	2024-01-16 15:48:06	MarkDuplicates	Read     7,000,000 records.  Elapsed time: 00:00:36s.  Time for last 1,000,000:    4s.  Last read position: chr3:49,728,497
INFO	2024-01-16 15:48:06	MarkDuplicates	Tracking 69536 as yet unmatched pairs. 3418 records in RAM.
INFO	2024-01-16 15:48:15	MarkDuplicates	Read     8,000,000 records.  Elapsed time: 00:00:45s.  Time for last 1,000,000:    8s.  Last read position: chr3:126,322,572
INFO	2024-01-16 15:48:15	MarkDuplicates	Tracking 71791 as yet unmatched pairs. 1664 records in RAM.
INFO	2024-01-16 15:48:20	MarkDuplicates	Read     9,000,000 records.  Elapsed time: 00:00:50s.  Time for last 1,000,000:    5s.  Last read position: chr4:6,772,346
INFO	2024-01-16 15:48:20	MarkDuplicates	Tracking 72714 as yet unmatched pairs. 6677 records in RAM.
INFO	2024-01-16 15:48:28	MarkDuplicates	Read    10,000,000 records.  Elapsed time: 00:00:58s.  Time for last 1,000,000:    7s.  Last read position: chr4:79,168,654
INFO	2024-01-16 15:48:28	MarkDuplicates	Tracking 99497 as yet unmatched pairs. 2969 records in RAM.
INFO	2024-01-16 15:48:34	MarkDuplicates	Read    11,000,000 records.  Elapsed time: 00:01:04s.  Time for last 1,000,000:    6s.  Last read position: chr4:159,184,019
INFO	2024-01-16 15:48:34	MarkDuplicates	Tracking 99714 as yet unmatched pairs. 888 records in RAM.
INFO	2024-01-16 15:48:42	MarkDuplicates	Read    12,000,000 records.  Elapsed time: 00:01:12s.  Time for last 1,000,000:    8s.  Last read position: chr5:49,601,507
INFO	2024-01-16 15:48:42	MarkDuplicates	Tracking 102472 as yet unmatched pairs. 11617 records in RAM.
INFO	2024-01-16 15:48:50	MarkDuplicates	Read    13,000,000 records.  Elapsed time: 00:01:20s.  Time for last 1,000,000:    7s.  Last read position: chr5:124,833,135
INFO	2024-01-16 15:48:50	MarkDuplicates	Tracking 107132 as yet unmatched pairs. 1659 records in RAM.
INFO	2024-01-16 15:48:56	MarkDuplicates	Read    14,000,000 records.  Elapsed time: 00:01:26s.  Time for last 1,000,000:    5s.  Last read position: chr6:21,687,577
INFO	2024-01-16 15:48:56	MarkDuplicates	Tracking 107191 as yet unmatched pairs. 4702 records in RAM.
INFO	2024-01-16 15:49:05	MarkDuplicates	Read    15,000,000 records.  Elapsed time: 00:01:35s.  Time for last 1,000,000:    9s.  Last read position: chr6:99,934,613
INFO	2024-01-16 15:49:05	MarkDuplicates	Tracking 106959 as yet unmatched pairs. 2083 records in RAM.
INFO	2024-01-16 15:49:15	MarkDuplicates	Read    16,000,000 records.  Elapsed time: 00:01:45s.  Time for last 1,000,000:    9s.  Last read position: chr7:7,642,623
INFO	2024-01-16 15:49:15	MarkDuplicates	Tracking 106830 as yet unmatched pairs. 5468 records in RAM.
INFO	2024-01-16 15:49:23	MarkDuplicates	Read    17,000,000 records.  Elapsed time: 00:01:53s.  Time for last 1,000,000:    8s.  Last read position: chr7:85,958,656
INFO	2024-01-16 15:49:23	MarkDuplicates	Tracking 107312 as yet unmatched pairs. 2870 records in RAM.
INFO	2024-01-16 15:49:30	MarkDuplicates	Read    18,000,000 records.  Elapsed time: 00:02:00s.  Time for last 1,000,000:    6s.  Last read position: chr8:4,901,508
INFO	2024-01-16 15:49:30	MarkDuplicates	Tracking 106716 as yet unmatched pairs. 4960 records in RAM.
INFO	2024-01-16 15:49:45	MarkDuplicates	Read    19,000,000 records.  Elapsed time: 00:02:14s.  Time for last 1,000,000:   14s.  Last read position: chr8:83,327,431
INFO	2024-01-16 15:49:45	MarkDuplicates	Tracking 105762 as yet unmatched pairs. 2180 records in RAM.
INFO	2024-01-16 15:49:49	MarkDuplicates	Read    20,000,000 records.  Elapsed time: 00:02:19s.  Time for last 1,000,000:    4s.  Last read position: chr9:16,261,695
INFO	2024-01-16 15:49:49	MarkDuplicates	Tracking 104701 as yet unmatched pairs. 4451 records in RAM.
INFO	2024-01-16 15:50:01	MarkDuplicates	Read    21,000,000 records.  Elapsed time: 00:02:31s.  Time for last 1,000,000:   11s.  Last read position: chr9:109,291,837
INFO	2024-01-16 15:50:01	MarkDuplicates	Tracking 104141 as yet unmatched pairs. 1244 records in RAM.
INFO	2024-01-16 15:50:10	MarkDuplicates	Read    22,000,000 records.  Elapsed time: 00:02:40s.  Time for last 1,000,000:    8s.  Last read position: chr10:43,683,266
INFO	2024-01-16 15:50:10	MarkDuplicates	Tracking 102506 as yet unmatched pairs. 3647 records in RAM.
INFO	2024-01-16 15:50:21	MarkDuplicates	Read    23,000,000 records.  Elapsed time: 00:02:51s.  Time for last 1,000,000:   10s.  Last read position: chr10:122,058,035
INFO	2024-01-16 15:50:21	MarkDuplicates	Tracking 101062 as yet unmatched pairs. 590 records in RAM.
INFO	2024-01-16 15:50:26	MarkDuplicates	Read    24,000,000 records.  Elapsed time: 00:02:56s.  Time for last 1,000,000:    5s.  Last read position: chr11:66,834,074
INFO	2024-01-16 15:50:26	MarkDuplicates	Tracking 100714 as yet unmatched pairs. 2640 records in RAM.
INFO	2024-01-16 15:50:33	MarkDuplicates	Read    25,000,000 records.  Elapsed time: 00:03:02s.  Time for last 1,000,000:    6s.  Last read position: chr12:10,339,583
INFO	2024-01-16 15:50:33	MarkDuplicates	Tracking 98895 as yet unmatched pairs. 5974 records in RAM.
INFO	2024-01-16 15:50:39	MarkDuplicates	Read    26,000,000 records.  Elapsed time: 00:03:08s.  Time for last 1,000,000:    5s.  Last read position: chr12:89,039,458
INFO	2024-01-16 15:50:39	MarkDuplicates	Tracking 96802 as yet unmatched pairs. 2197 records in RAM.
INFO	2024-01-16 15:50:48	MarkDuplicates	Read    27,000,000 records.  Elapsed time: 00:03:18s.  Time for last 1,000,000:    9s.  Last read position: chr13:44,118,371
INFO	2024-01-16 15:50:48	MarkDuplicates	Tracking 95185 as yet unmatched pairs. 2864 records in RAM.
INFO	2024-01-16 15:50:54	MarkDuplicates	Read    28,000,000 records.  Elapsed time: 00:03:24s.  Time for last 1,000,000:    6s.  Last read position: chr14:27,526,231
INFO	2024-01-16 15:50:54	MarkDuplicates	Tracking 93195 as yet unmatched pairs. 4225 records in RAM.
INFO	2024-01-16 15:51:00	MarkDuplicates	Read    29,000,000 records.  Elapsed time: 00:03:30s.  Time for last 1,000,000:    5s.  Last read position: chr14:105,896,736
INFO	2024-01-16 15:51:00	MarkDuplicates	Tracking 90241 as yet unmatched pairs. 27 records in RAM.
INFO	2024-01-16 15:51:11	MarkDuplicates	Read    30,000,000 records.  Elapsed time: 00:03:40s.  Time for last 1,000,000:   10s.  Last read position: chr15:93,923,624
INFO	2024-01-16 15:51:11	MarkDuplicates	Tracking 87569 as yet unmatched pairs. 420 records in RAM.
INFO	2024-01-16 15:51:21	MarkDuplicates	Read    31,000,000 records.  Elapsed time: 00:03:51s.  Time for last 1,000,000:   10s.  Last read position: chr16:72,409,463
INFO	2024-01-16 15:51:21	MarkDuplicates	Tracking 84622 as yet unmatched pairs. 1158 records in RAM.
INFO	2024-01-16 15:51:26	MarkDuplicates	Read    32,000,000 records.  Elapsed time: 00:03:56s.  Time for last 1,000,000:    5s.  Last read position: chr17:57,383,887
INFO	2024-01-16 15:51:26	MarkDuplicates	Tracking 80413 as yet unmatched pairs. 1730 records in RAM.
INFO	2024-01-16 15:51:37	MarkDuplicates	Read    33,000,000 records.  Elapsed time: 00:04:06s.  Time for last 1,000,000:   10s.  Last read position: chr18:50,142,524
INFO	2024-01-16 15:51:37	MarkDuplicates	Tracking 78186 as yet unmatched pairs. 1415 records in RAM.
INFO	2024-01-16 15:51:49	MarkDuplicates	Read    34,000,000 records.  Elapsed time: 00:04:19s.  Time for last 1,000,000:   12s.  Last read position: chr19:49,485,872
INFO	2024-01-16 15:51:49	MarkDuplicates	Tracking 73511 as yet unmatched pairs. 779 records in RAM.
INFO	2024-01-16 15:51:54	MarkDuplicates	Read    35,000,000 records.  Elapsed time: 00:04:24s.  Time for last 1,000,000:    4s.  Last read position: chr20:63,026,847
INFO	2024-01-16 15:51:54	MarkDuplicates	Tracking 66117 as yet unmatched pairs. 141 records in RAM.
INFO	2024-01-16 15:52:04	MarkDuplicates	Read    36,000,000 records.  Elapsed time: 00:04:34s.  Time for last 1,000,000:   10s.  Last read position: chr22:41,180,921
INFO	2024-01-16 15:52:04	MarkDuplicates	Tracking 59834 as yet unmatched pairs. 706 records in RAM.
INFO	2024-01-16 15:52:16	MarkDuplicates	Read    37,000,000 records.  Elapsed time: 00:04:46s.  Time for last 1,000,000:   11s.  Last read position: chrX:70,893,742
INFO	2024-01-16 15:52:16	MarkDuplicates	Tracking 55084 as yet unmatched pairs. 4878 records in RAM.
INFO	2024-01-16 15:52:24	MarkDuplicates	Read    38,000,000 records.  Elapsed time: 00:04:54s.  Time for last 1,000,000:    8s.  Last read position: chrX:151,841,663
INFO	2024-01-16 15:52:24	MarkDuplicates	Tracking 50632 as yet unmatched pairs. 284 records in RAM.
INFO	2024-01-16 15:52:33	MarkDuplicates	Read    39,000,000 records.  Elapsed time: 00:05:03s.  Time for last 1,000,000:    8s.  Last read position: chrUn_JTFH01001887v1_decoy:1,421
INFO	2024-01-16 15:52:33	MarkDuplicates	Tracking 196 as yet unmatched pairs. 0 records in RAM.
INFO	2024-01-16 15:52:33	MarkDuplicates	Read 39024565 records. 0 pairs never matched.
INFO	2024-01-16 15:52:34	MarkDuplicates	After buildSortedReadEndLists freeMemory: 1037281896; totalMemory: 1048051712; maxMemory: 1048051712
INFO	2024-01-16 15:52:34	MarkDuplicates	Will retain up to 32751616 duplicate indices before spilling to disk.
INFO	2024-01-16 15:52:34	MarkDuplicates	Traversing read pair information and detecting duplicates.
INFO	2024-01-16 15:52:41	MarkDuplicates	Traversing fragment information and detecting duplicates.
INFO	2024-01-16 15:52:50	MarkDuplicates	Sorting list of duplicate records.
INFO	2024-01-16 15:52:51	MarkDuplicates	After generateDuplicateIndexes freeMemory: 787192240; totalMemory: 1059586048; maxMemory: 1059586048
INFO	2024-01-16 15:52:51	MarkDuplicates	Marking 6876595 records as duplicates.
INFO	2024-01-16 15:52:51	MarkDuplicates	Found 1861443 optical duplicate clusters.
INFO	2024-01-16 15:55:07	MarkDuplicates	Written    10,000,000 records.  Elapsed time: 00:02:14s.  Time for last 10,000,000:  134s.  Last read position: chr4:79,168,654
INFO	2024-01-16 15:57:23	MarkDuplicates	Written    20,000,000 records.  Elapsed time: 00:04:30s.  Time for last 10,000,000:  136s.  Last read position: chr9:16,261,695
INFO	2024-01-16 15:59:39	MarkDuplicates	Written    30,000,000 records.  Elapsed time: 00:06:46s.  Time for last 10,000,000:  136s.  Last read position: chr15:93,923,624
INFO	2024-01-16 16:02:07	MarkDuplicates	Written    40,000,000 records.  Elapsed time: 00:09:15s.  Time for last 10,000,000:  148s.  Last read position: */*
INFO	2024-01-16 16:03:39	MarkDuplicates	Before output close freeMemory: 1055562872; totalMemory: 1069547520; maxMemory: 1069547520
INFO	2024-01-16 16:03:40	MarkDuplicates	After output close freeMemory: 1055561920; totalMemory: 1069547520; maxMemory: 1069547520
[Tue Jan 16 16:03:40 CST 2024] picard.sam.markduplicates.MarkDuplicates done. Elapsed time: 16.20 minutes.
Runtime.totalMemory()=1069547520
16:04:48.383 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_compression.so
[Tue Jan 16 16:04:50 CST 2024] MarkDuplicates  --INPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted.bam --OUTPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted_set_marked.bam --METRICS_FILE /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_marked_dup_metrics.txt  --MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP 50000 --MAX_FILE_HANDLES_FOR_READ_ENDS_MAP 8000 --SORTING_COLLECTION_SIZE_RATIO 0.25 --TAG_DUPLICATE_SET_MEMBERS false --REMOVE_SEQUENCING_DUPLICATES false --TAGGING_POLICY DontTag --CLEAR_DT true --DUPLEX_UMI false --ADD_PG_TAG_TO_READS true --REMOVE_DUPLICATES false --ASSUME_SORTED false --DUPLICATE_SCORING_STRATEGY SUM_OF_BASE_QUALITIES --PROGRAM_RECORD_ID MarkDuplicates --PROGRAM_GROUP_NAME MarkDuplicates --READ_NAME_REGEX <optimized capture of last three ':' separated fields as numeric values> --OPTICAL_DUPLICATE_PIXEL_DISTANCE 100 --MAX_OPTICAL_DUPLICATE_SET_SIZE 300000 --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false
Jan 16, 2024 4:04:52 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine
INFO: Failed to detect whether we are running on Google Compute Engine.
[Tue Jan 16 16:04:52 CST 2024] Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux 3.10.0-1160.99.1.el7.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_382-b05; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.2.0
INFO	2024-01-16 16:04:52	MarkDuplicates	Start of doWork freeMemory: 747487768; totalMemory: 762314752; maxMemory: 19786104832
INFO	2024-01-16 16:04:52	MarkDuplicates	Reading input file and constructing read end information.
INFO	2024-01-16 16:04:52	MarkDuplicates	Will retain up to 71688785 data points before spilling to disk.
INFO	2024-01-16 16:04:58	MarkDuplicates	Read     1,000,000 records.  Elapsed time: 00:00:05s.  Time for last 1,000,000:    5s.  Last read position: chr1:77,023,674
INFO	2024-01-16 16:04:58	MarkDuplicates	Tracking 5576 as yet unmatched pairs. 214 records in RAM.
INFO	2024-01-16 16:05:02	MarkDuplicates	Read     2,000,000 records.  Elapsed time: 00:00:09s.  Time for last 1,000,000:    4s.  Last read position: chr1:155,463,906
INFO	2024-01-16 16:05:02	MarkDuplicates	Tracking 10721 as yet unmatched pairs. 225 records in RAM.
INFO	2024-01-16 16:05:06	MarkDuplicates	Read     3,000,000 records.  Elapsed time: 00:00:13s.  Time for last 1,000,000:    3s.  Last read position: chr1:234,043,783
INFO	2024-01-16 16:05:06	MarkDuplicates	Tracking 15304 as yet unmatched pairs. 64 records in RAM.
INFO	2024-01-16 16:05:11	MarkDuplicates	Read     4,000,000 records.  Elapsed time: 00:00:18s.  Time for last 1,000,000:    4s.  Last read position: chr2:56,609,107
INFO	2024-01-16 16:05:11	MarkDuplicates	Tracking 58482 as yet unmatched pairs. 3763 records in RAM.
INFO	2024-01-16 16:05:15	MarkDuplicates	Read     5,000,000 records.  Elapsed time: 00:00:22s.  Time for last 1,000,000:    4s.  Last read position: chr2:134,343,280
INFO	2024-01-16 16:05:15	MarkDuplicates	Tracking 66947 as yet unmatched pairs. 2257 records in RAM.
INFO	2024-01-16 16:05:22	MarkDuplicates	Read     6,000,000 records.  Elapsed time: 00:00:28s.  Time for last 1,000,000:    6s.  Last read position: chr2:213,802,849
INFO	2024-01-16 16:05:22	MarkDuplicates	Tracking 68256 as yet unmatched pairs. 640 records in RAM.
INFO	2024-01-16 16:05:26	MarkDuplicates	Read     7,000,000 records.  Elapsed time: 00:00:32s.  Time for last 1,000,000:    4s.  Last read position: chr3:49,728,497
INFO	2024-01-16 16:05:26	MarkDuplicates	Tracking 69536 as yet unmatched pairs. 3418 records in RAM.
INFO	2024-01-16 16:05:30	MarkDuplicates	Read     8,000,000 records.  Elapsed time: 00:00:36s.  Time for last 1,000,000:    3s.  Last read position: chr3:126,322,572
INFO	2024-01-16 16:05:30	MarkDuplicates	Tracking 71791 as yet unmatched pairs. 1664 records in RAM.
INFO	2024-01-16 16:05:34	MarkDuplicates	Read     9,000,000 records.  Elapsed time: 00:00:40s.  Time for last 1,000,000:    4s.  Last read position: chr4:6,772,346
INFO	2024-01-16 16:05:34	MarkDuplicates	Tracking 72714 as yet unmatched pairs. 6677 records in RAM.
INFO	2024-01-16 16:05:38	MarkDuplicates	Read    10,000,000 records.  Elapsed time: 00:00:45s.  Time for last 1,000,000:    4s.  Last read position: chr4:79,168,654
INFO	2024-01-16 16:05:38	MarkDuplicates	Tracking 99497 as yet unmatched pairs. 2969 records in RAM.
INFO	2024-01-16 16:05:42	MarkDuplicates	Read    11,000,000 records.  Elapsed time: 00:00:49s.  Time for last 1,000,000:    3s.  Last read position: chr4:159,184,019
INFO	2024-01-16 16:05:42	MarkDuplicates	Tracking 99714 as yet unmatched pairs. 888 records in RAM.
INFO	2024-01-16 16:05:53	MarkDuplicates	Read    12,000,000 records.  Elapsed time: 00:01:00s.  Time for last 1,000,000:   11s.  Last read position: chr5:49,601,507
INFO	2024-01-16 16:05:53	MarkDuplicates	Tracking 102472 as yet unmatched pairs. 11617 records in RAM.
INFO	2024-01-16 16:05:57	MarkDuplicates	Read    13,000,000 records.  Elapsed time: 00:01:04s.  Time for last 1,000,000:    4s.  Last read position: chr5:124,833,135
INFO	2024-01-16 16:05:57	MarkDuplicates	Tracking 107132 as yet unmatched pairs. 1659 records in RAM.
INFO	2024-01-16 16:06:01	MarkDuplicates	Read    14,000,000 records.  Elapsed time: 00:01:08s.  Time for last 1,000,000:    3s.  Last read position: chr6:21,687,577
INFO	2024-01-16 16:06:01	MarkDuplicates	Tracking 107191 as yet unmatched pairs. 4702 records in RAM.
INFO	2024-01-16 16:06:05	MarkDuplicates	Read    15,000,000 records.  Elapsed time: 00:01:12s.  Time for last 1,000,000:    4s.  Last read position: chr6:99,934,613
INFO	2024-01-16 16:06:05	MarkDuplicates	Tracking 106959 as yet unmatched pairs. 2083 records in RAM.
INFO	2024-01-16 16:06:09	MarkDuplicates	Read    16,000,000 records.  Elapsed time: 00:01:16s.  Time for last 1,000,000:    3s.  Last read position: chr7:7,642,623
INFO	2024-01-16 16:06:09	MarkDuplicates	Tracking 106830 as yet unmatched pairs. 5468 records in RAM.
INFO	2024-01-16 16:06:14	MarkDuplicates	Read    17,000,000 records.  Elapsed time: 00:01:20s.  Time for last 1,000,000:    4s.  Last read position: chr7:85,958,656
INFO	2024-01-16 16:06:14	MarkDuplicates	Tracking 107312 as yet unmatched pairs. 2870 records in RAM.
INFO	2024-01-16 16:06:18	MarkDuplicates	Read    18,000,000 records.  Elapsed time: 00:01:24s.  Time for last 1,000,000:    3s.  Last read position: chr8:4,901,508
INFO	2024-01-16 16:06:18	MarkDuplicates	Tracking 106716 as yet unmatched pairs. 4960 records in RAM.
INFO	2024-01-16 16:06:22	MarkDuplicates	Read    19,000,000 records.  Elapsed time: 00:01:29s.  Time for last 1,000,000:    4s.  Last read position: chr8:83,327,431
INFO	2024-01-16 16:06:22	MarkDuplicates	Tracking 105762 as yet unmatched pairs. 2180 records in RAM.
INFO	2024-01-16 16:06:26	MarkDuplicates	Read    20,000,000 records.  Elapsed time: 00:01:32s.  Time for last 1,000,000:    3s.  Last read position: chr9:16,261,695
INFO	2024-01-16 16:06:26	MarkDuplicates	Tracking 104701 as yet unmatched pairs. 4451 records in RAM.
INFO	2024-01-16 16:06:46	MarkDuplicates	Read    21,000,000 records.  Elapsed time: 00:01:53s.  Time for last 1,000,000:   20s.  Last read position: chr9:109,291,837
INFO	2024-01-16 16:06:46	MarkDuplicates	Tracking 104141 as yet unmatched pairs. 1244 records in RAM.
INFO	2024-01-16 16:06:50	MarkDuplicates	Read    22,000,000 records.  Elapsed time: 00:01:57s.  Time for last 1,000,000:    4s.  Last read position: chr10:43,683,266
INFO	2024-01-16 16:06:50	MarkDuplicates	Tracking 102506 as yet unmatched pairs. 3647 records in RAM.
INFO	2024-01-16 16:06:55	MarkDuplicates	Read    23,000,000 records.  Elapsed time: 00:02:01s.  Time for last 1,000,000:    4s.  Last read position: chr10:122,058,035
INFO	2024-01-16 16:06:55	MarkDuplicates	Tracking 101062 as yet unmatched pairs. 590 records in RAM.
INFO	2024-01-16 16:06:58	MarkDuplicates	Read    24,000,000 records.  Elapsed time: 00:02:05s.  Time for last 1,000,000:    3s.  Last read position: chr11:66,834,074
INFO	2024-01-16 16:06:58	MarkDuplicates	Tracking 100714 as yet unmatched pairs. 2640 records in RAM.
INFO	2024-01-16 16:07:03	MarkDuplicates	Read    25,000,000 records.  Elapsed time: 00:02:10s.  Time for last 1,000,000:    4s.  Last read position: chr12:10,339,583
INFO	2024-01-16 16:07:03	MarkDuplicates	Tracking 98895 as yet unmatched pairs. 5974 records in RAM.
INFO	2024-01-16 16:07:07	MarkDuplicates	Read    26,000,000 records.  Elapsed time: 00:02:13s.  Time for last 1,000,000:    3s.  Last read position: chr12:89,039,458
INFO	2024-01-16 16:07:07	MarkDuplicates	Tracking 96802 as yet unmatched pairs. 2197 records in RAM.
INFO	2024-01-16 16:07:11	MarkDuplicates	Read    27,000,000 records.  Elapsed time: 00:02:18s.  Time for last 1,000,000:    4s.  Last read position: chr13:44,118,371
INFO	2024-01-16 16:07:11	MarkDuplicates	Tracking 95185 as yet unmatched pairs. 2864 records in RAM.
INFO	2024-01-16 16:07:15	MarkDuplicates	Read    28,000,000 records.  Elapsed time: 00:02:22s.  Time for last 1,000,000:    3s.  Last read position: chr14:27,526,231
INFO	2024-01-16 16:07:15	MarkDuplicates	Tracking 93195 as yet unmatched pairs. 4225 records in RAM.
INFO	2024-01-16 16:07:20	MarkDuplicates	Read    29,000,000 records.  Elapsed time: 00:02:26s.  Time for last 1,000,000:    4s.  Last read position: chr14:105,896,736
INFO	2024-01-16 16:07:20	MarkDuplicates	Tracking 90241 as yet unmatched pairs. 27 records in RAM.
INFO	2024-01-16 16:07:24	MarkDuplicates	Read    30,000,000 records.  Elapsed time: 00:02:30s.  Time for last 1,000,000:    3s.  Last read position: chr15:93,923,624
INFO	2024-01-16 16:07:24	MarkDuplicates	Tracking 87569 as yet unmatched pairs. 420 records in RAM.
INFO	2024-01-16 16:07:29	MarkDuplicates	Read    31,000,000 records.  Elapsed time: 00:02:35s.  Time for last 1,000,000:    5s.  Last read position: chr16:72,409,463
INFO	2024-01-16 16:07:29	MarkDuplicates	Tracking 84622 as yet unmatched pairs. 1158 records in RAM.
INFO	2024-01-16 16:07:33	MarkDuplicates	Read    32,000,000 records.  Elapsed time: 00:02:39s.  Time for last 1,000,000:    3s.  Last read position: chr17:57,383,887
INFO	2024-01-16 16:07:33	MarkDuplicates	Tracking 80413 as yet unmatched pairs. 1730 records in RAM.
INFO	2024-01-16 16:07:53	MarkDuplicates	Read    33,000,000 records.  Elapsed time: 00:03:00s.  Time for last 1,000,000:   20s.  Last read position: chr18:50,142,524
INFO	2024-01-16 16:07:53	MarkDuplicates	Tracking 78186 as yet unmatched pairs. 1415 records in RAM.
INFO	2024-01-16 16:07:57	MarkDuplicates	Read    34,000,000 records.  Elapsed time: 00:03:04s.  Time for last 1,000,000:    3s.  Last read position: chr19:49,485,872
INFO	2024-01-16 16:07:57	MarkDuplicates	Tracking 73511 as yet unmatched pairs. 779 records in RAM.
INFO	2024-01-16 16:08:02	MarkDuplicates	Read    35,000,000 records.  Elapsed time: 00:03:09s.  Time for last 1,000,000:    5s.  Last read position: chr20:63,026,847
INFO	2024-01-16 16:08:02	MarkDuplicates	Tracking 66117 as yet unmatched pairs. 141 records in RAM.
INFO	2024-01-16 16:08:08	MarkDuplicates	Read    36,000,000 records.  Elapsed time: 00:03:14s.  Time for last 1,000,000:    5s.  Last read position: chr22:41,180,921
INFO	2024-01-16 16:08:08	MarkDuplicates	Tracking 59834 as yet unmatched pairs. 706 records in RAM.
INFO	2024-01-16 16:08:11	MarkDuplicates	Read    37,000,000 records.  Elapsed time: 00:03:18s.  Time for last 1,000,000:    3s.  Last read position: chrX:70,893,742
INFO	2024-01-16 16:08:11	MarkDuplicates	Tracking 55084 as yet unmatched pairs. 4878 records in RAM.
INFO	2024-01-16 16:08:16	MarkDuplicates	Read    38,000,000 records.  Elapsed time: 00:03:23s.  Time for last 1,000,000:    4s.  Last read position: chrX:151,841,663
INFO	2024-01-16 16:08:16	MarkDuplicates	Tracking 50632 as yet unmatched pairs. 284 records in RAM.
INFO	2024-01-16 16:08:22	MarkDuplicates	Read    39,000,000 records.  Elapsed time: 00:03:29s.  Time for last 1,000,000:    5s.  Last read position: chrUn_JTFH01001887v1_decoy:1,421
INFO	2024-01-16 16:08:22	MarkDuplicates	Tracking 196 as yet unmatched pairs. 0 records in RAM.
INFO	2024-01-16 16:08:22	MarkDuplicates	Read 39024565 records. 0 pairs never matched.
INFO	2024-01-16 16:08:38	MarkDuplicates	After buildSortedReadEndLists freeMemory: 6592246344; totalMemory: 11421089792; maxMemory: 19786104832
INFO	2024-01-16 16:08:38	MarkDuplicates	Will retain up to 618315776 duplicate indices before spilling to disk.
INFO	2024-01-16 16:08:39	MarkDuplicates	Traversing read pair information and detecting duplicates.
INFO	2024-01-16 16:08:41	MarkDuplicates	Traversing fragment information and detecting duplicates.
INFO	2024-01-16 16:08:42	MarkDuplicates	Sorting list of duplicate records.
INFO	2024-01-16 16:08:43	MarkDuplicates	After generateDuplicateIndexes freeMemory: 10230719304; totalMemory: 15286665216; maxMemory: 19786104832
INFO	2024-01-16 16:08:43	MarkDuplicates	Marking 6876595 records as duplicates.
INFO	2024-01-16 16:08:43	MarkDuplicates	Found 378138 optical duplicate clusters.
INFO	2024-01-16 16:08:43	MarkDuplicates	Reads are assumed to be ordered by: coordinate
INFO	2024-01-16 16:09:36	MarkDuplicates	Written    10,000,000 records.  Elapsed time: 00:00:49s.  Time for last 10,000,000:   49s.  Last read position: chr4:79,168,654
INFO	2024-01-16 16:10:26	MarkDuplicates	Written    20,000,000 records.  Elapsed time: 00:01:40s.  Time for last 10,000,000:   50s.  Last read position: chr9:16,261,695
INFO	2024-01-16 16:11:16	MarkDuplicates	Written    30,000,000 records.  Elapsed time: 00:02:29s.  Time for last 10,000,000:   49s.  Last read position: chr15:93,923,624
INFO	2024-01-16 16:12:09	MarkDuplicates	Written    40,000,000 records.  Elapsed time: 00:03:23s.  Time for last 10,000,000:   53s.  Last read position: */*
INFO	2024-01-16 16:12:44	MarkDuplicates	Before output close freeMemory: 10661056856; totalMemory: 15622209536; maxMemory: 19786104832
INFO	2024-01-16 16:12:48	MarkDuplicates	After output close freeMemory: 15906627168; totalMemory: 15996026880; maxMemory: 19786104832
[Tue Jan 16 16:12:48 CST 2024] picard.sam.markduplicates.MarkDuplicates done. Elapsed time: 8.01 minutes.
Runtime.totalMemory()=15996026880
Tool returned:
0
Using GATK jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar MarkDuplicates --INPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted.bam --OUTPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted_set_marked.bam --METRICS_FILE /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_marked_dup_metrics.txt
16:12:56.829 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_compression.so
Jan 16, 2024 4:12:58 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine
INFO: Failed to detect whether we are running on Google Compute Engine.
16:12:58.477 INFO  BaseRecalibrator - ------------------------------------------------------------
16:12:58.477 INFO  BaseRecalibrator - The Genome Analysis Toolkit (GATK) v4.1.2.0
16:12:58.477 INFO  BaseRecalibrator - For support and documentation go to https://software.broadinstitute.org/gatk/
16:12:58.477 INFO  BaseRecalibrator - Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux v3.10.0-1160.99.1.el7.x86_64 amd64
16:12:58.478 INFO  BaseRecalibrator - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_382-b05
16:12:58.478 INFO  BaseRecalibrator - Start Date/Time: January 16, 2024 4:12:56 PM CST
16:12:58.478 INFO  BaseRecalibrator - ------------------------------------------------------------
16:12:58.478 INFO  BaseRecalibrator - ------------------------------------------------------------
16:12:58.478 INFO  BaseRecalibrator - HTSJDK Version: 2.19.0
16:12:58.478 INFO  BaseRecalibrator - Picard Version: 2.19.0
16:12:58.478 INFO  BaseRecalibrator - HTSJDK Defaults.COMPRESSION_LEVEL : 2
16:12:58.478 INFO  BaseRecalibrator - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false
16:12:58.478 INFO  BaseRecalibrator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true
16:12:58.478 INFO  BaseRecalibrator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false
16:12:58.478 INFO  BaseRecalibrator - Deflater: IntelDeflater
16:12:58.478 INFO  BaseRecalibrator - Inflater: IntelInflater
16:12:58.479 INFO  BaseRecalibrator - GCS max retries/reopens: 20
16:12:58.479 INFO  BaseRecalibrator - Requester pays: disabled
16:12:58.479 INFO  BaseRecalibrator - Initializing engine
16:13:01.503 INFO  FeatureManager - Using codec VCFCodec to read file file:///Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.dbsnp138.vcf.gz
16:13:02.369 INFO  FeatureManager - Using codec VCFCodec to read file file:///Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.known_indels.vcf.gz
16:13:04.170 INFO  BaseRecalibrator - Done initializing engine
16:13:04.174 INFO  BaseRecalibrationEngine - The covariates being used here: 
16:13:04.174 INFO  BaseRecalibrationEngine - 	ReadGroupCovariate
16:13:04.174 INFO  BaseRecalibrationEngine - 	QualityScoreCovariate
16:13:04.174 INFO  BaseRecalibrationEngine - 	ContextCovariate
16:13:04.174 INFO  BaseRecalibrationEngine - 	CycleCovariate
16:13:04.236 INFO  ProgressMeter - Starting traversal
16:13:04.237 INFO  ProgressMeter -        Current Locus  Elapsed Minutes       Reads Processed     Reads/Minute
16:13:14.293 INFO  ProgressMeter -        chr1:10138790              0.2                103000         614619.6
16:13:24.319 INFO  ProgressMeter -        chr1:23904308              0.3                249000         743986.9
16:13:34.345 INFO  ProgressMeter -        chr1:38616730              0.5                404000         805101.6
16:13:44.386 INFO  ProgressMeter -        chr1:53886591              0.7                563000         841365.9
16:13:54.414 INFO  ProgressMeter -        chr1:68645767              0.8                714000         853794.6
16:14:04.466 INFO  ProgressMeter -        chr1:84147388              1.0                867000         863703.5
16:14:14.501 INFO  ProgressMeter -        chr1:97819775              1.2               1005000         858192.0
16:14:24.507 INFO  ProgressMeter -       chr1:112587788              1.3               1149000         858851.4
16:14:34.510 INFO  ProgressMeter -       chr1:147771629              1.5               1374000         913229.9
16:14:44.511 INFO  ProgressMeter -       chr1:155229099              1.7               1443000         863434.2
16:14:54.527 INFO  ProgressMeter -       chr1:168346315              1.8               1577000         857920.0
16:15:04.583 INFO  ProgressMeter -       chr1:182055812              2.0               1716000         855533.2
16:15:14.645 INFO  ProgressMeter -       chr1:195776413              2.2               1852000         852095.0
16:15:24.676 INFO  ProgressMeter -       chr1:208411862              2.3               1981000         846346.1
16:15:34.709 INFO  ProgressMeter -       chr1:222599356              2.5               2125000         847339.4
16:15:44.725 INFO  ProgressMeter -       chr1:237012446              2.7               2274000         850157.0
16:15:54.780 INFO  ProgressMeter -         chr2:1870481              2.8               2414000         849287.3
16:16:04.805 INFO  ProgressMeter -        chr2:16005104              3.0               2560000         850649.1
16:16:14.807 INFO  ProgressMeter -        chr2:30921569              3.2               2714000         854489.2
16:16:24.811 INFO  ProgressMeter -        chr2:43696123              3.3               2870000         858536.0
16:16:34.886 INFO  ProgressMeter -        chr2:56816159              3.5               3003000         855356.5
16:16:44.905 INFO  ProgressMeter -        chr2:70938061              3.7               3146000         855406.6
16:16:54.957 INFO  ProgressMeter -        chr2:85602594              3.8               3294000         856622.7
16:17:04.965 INFO  ProgressMeter -       chr2:104798006              4.0               3469000         864627.3
16:17:14.981 INFO  ProgressMeter -       chr2:120695266              4.2               3623000         866940.0
16:17:25.016 INFO  ProgressMeter -       chr2:134666026              4.3               3764000         866020.7
16:17:35.035 INFO  ProgressMeter -       chr2:150069127              4.5               3918000         868100.9
16:17:45.102 INFO  ProgressMeter -       chr2:165746207              4.7               4075000         870525.0
16:17:55.113 INFO  ProgressMeter -       chr2:180427359              4.8               4223000         871092.8
16:18:05.148 INFO  ProgressMeter -       chr2:196067511              5.0               4378000         872949.1
16:18:15.167 INFO  ProgressMeter -       chr2:211606644              5.2               4536000         875312.4
16:18:25.222 INFO  ProgressMeter -       chr2:226299609              5.3               4685000         875741.9
16:18:35.299 INFO  ProgressMeter -       chr2:240210964              5.5               4830000         875364.7
16:18:45.344 INFO  ProgressMeter -        chr3:11185563              5.7               4964000         873157.1
16:18:55.413 INFO  ProgressMeter -        chr3:25428671              5.9               5110000         873066.5
16:19:05.431 INFO  ProgressMeter -        chr3:39925539              6.0               5257000         873270.3
16:19:15.458 INFO  ProgressMeter -        chr3:54850431              6.2               5414000         875058.3
16:19:25.483 INFO  ProgressMeter -        chr3:68930294              6.4               5558000         874710.8
16:19:35.529 INFO  ProgressMeter -        chr3:83479795              6.5               5704000         874640.9
16:19:45.558 INFO  ProgressMeter -       chr3:100610715              6.7               5867000         877155.4
16:19:55.606 INFO  ProgressMeter -       chr3:115680658              6.9               6017000         877606.2
16:20:05.643 INFO  ProgressMeter -       chr3:130013530              7.0               6164000         877633.4
16:20:15.646 INFO  ProgressMeter -       chr3:144987425              7.2               6316000         878424.0
16:20:25.679 INFO  ProgressMeter -       chr3:159257100              7.4               6459000         877895.6
16:20:35.726 INFO  ProgressMeter -       chr3:173973988              7.5               6605000         877762.2
16:20:45.729 INFO  ProgressMeter -       chr3:188549342              7.7               6753000         877978.4
16:20:55.760 INFO  ProgressMeter -         chr4:3496841              7.9               6891000         876871.9
16:21:05.788 INFO  ProgressMeter -        chr4:15497803              8.0               7013000         873803.3
16:21:15.790 INFO  ProgressMeter -        chr4:29703397              8.2               7156000         873476.5
16:21:25.821 INFO  ProgressMeter -        chr4:43751849              8.4               7295000         872635.5
16:21:35.848 INFO  ProgressMeter -        chr4:58189138              8.5               7463000         875235.3
16:21:45.864 INFO  ProgressMeter -        chr4:72333530              8.7               7601000         874302.9
16:21:55.922 INFO  ProgressMeter -        chr4:86971072              8.9               7748000         874352.3
16:22:05.982 INFO  ProgressMeter -       chr4:102083223              9.0               7898000         874730.5
16:22:16.021 INFO  ProgressMeter -       chr4:117257871              9.2               8049000         875233.8
16:22:26.042 INFO  ProgressMeter -       chr4:132346477              9.4               8199000         875641.9
16:22:36.112 INFO  ProgressMeter -       chr4:147625250              9.5               8351000         876170.5
16:22:46.124 INFO  ProgressMeter -       chr4:162796681              9.7               8502000         876665.1
16:22:56.166 INFO  ProgressMeter -       chr4:177133341              9.9               8645000         876287.5
16:23:06.181 INFO  ProgressMeter -       chr4:190179203             10.0               8777000         874865.4
16:23:16.188 INFO  ProgressMeter -        chr5:12681124             10.2               8910000         873605.1
16:23:26.216 INFO  ProgressMeter -        chr5:27348809             10.4               9056000         873598.6
16:23:36.269 INFO  ProgressMeter -        chr5:41867333             10.5               9203000         873658.3
16:23:46.283 INFO  ProgressMeter -        chr5:58638206             10.7               9376000         876200.3
16:23:56.318 INFO  ProgressMeter -        chr5:75496328             10.9               9533000         877161.0
16:24:06.372 INFO  ProgressMeter -        chr5:90573089             11.0               9683000         877435.7
16:24:16.420 INFO  ProgressMeter -       chr5:106268878             11.2               9837000         878064.5
16:24:26.441 INFO  ProgressMeter -       chr5:120177385             11.4               9976000         877391.5
16:24:36.497 INFO  ProgressMeter -       chr5:135014415             11.5              10126000         877647.1
16:24:46.524 INFO  ProgressMeter -       chr5:150030806             11.7              10280000         878273.4
16:24:56.546 INFO  ProgressMeter -       chr5:164442257             11.9              10426000         878214.4
16:25:06.587 INFO  ProgressMeter -       chr5:178975849             12.0              10575000         878383.1
16:25:16.598 INFO  ProgressMeter -        chr6:10622978             12.2              10709000         877354.2
16:25:26.639 INFO  ProgressMeter -        chr6:24663310             12.4              10853000         877125.9
16:25:36.652 INFO  ProgressMeter -        chr6:37412541             12.5              10983000         875819.9
16:25:46.690 INFO  ProgressMeter -        chr6:51421650             12.7              11127000         875621.2
16:25:56.712 INFO  ProgressMeter -        chr6:67656031             12.9              11272000         875523.5
16:26:06.742 INFO  ProgressMeter -        chr6:81714925             13.0              11411000         874959.3
16:26:16.800 INFO  ProgressMeter -        chr6:96882210             13.2              11561000         875211.2
16:26:26.823 INFO  ProgressMeter -       chr6:112262190             13.4              11716000         875869.8
16:26:36.850 INFO  ProgressMeter -       chr6:127729857             13.5              11871000         876505.8
16:26:46.881 INFO  ProgressMeter -       chr6:142653808             13.7              12021000         876758.4
16:26:56.911 INFO  ProgressMeter -       chr6:157222226             13.9              12168000         876789.7
16:27:06.930 INFO  ProgressMeter -           chr7:68575             14.0              12309000         876404.6
16:27:16.979 INFO  ProgressMeter -        chr7:12627541             14.2              12439000         875223.7
16:27:27.042 INFO  ProgressMeter -        chr7:26608108             14.4              12579000         874751.5
16:27:37.052 INFO  ProgressMeter -        chr7:41433391             14.5              12729000         875030.8
16:27:47.099 INFO  ProgressMeter -        chr7:55743827             14.7              12876000         875063.1
16:27:57.126 INFO  ProgressMeter -        chr7:73326184             14.9              13021000         874980.0
16:28:07.167 INFO  ProgressMeter -        chr7:88174237             15.0              13165000         874819.6
16:28:17.184 INFO  ProgressMeter -       chr7:100608476             15.2              13291000         873500.9
16:28:27.193 INFO  ProgressMeter -       chr7:115341259             15.4              13441000         873779.5
16:28:37.230 INFO  ProgressMeter -       chr7:130724886             15.5              13595000         874283.1
16:28:47.249 INFO  ProgressMeter -       chr7:142338679             15.7              13715000         872629.4
16:28:57.296 INFO  ProgressMeter -       chr7:156625150             15.9              13860000         872559.7
16:29:07.309 INFO  ProgressMeter -         chr8:8789849             16.1              13969000         870277.6
16:29:17.341 INFO  ProgressMeter -        chr8:20780707             16.2              14091000         868828.0
16:29:27.401 INFO  ProgressMeter -        chr8:35000376             16.4              14237000         868847.9
16:29:37.433 INFO  ProgressMeter -        chr8:51453229             16.6              14387000         869133.6
16:29:47.485 INFO  ProgressMeter -        chr8:65961972             16.7              14534000         869216.8
16:29:57.510 INFO  ProgressMeter -        chr8:81085326             16.9              14686000         869617.6
16:30:07.577 INFO  ProgressMeter -        chr8:96552649             17.1              14839000         870034.3
16:30:17.630 INFO  ProgressMeter -       chr8:112098411             17.2              14996000         870685.2
16:30:27.630 INFO  ProgressMeter -       chr8:127044706             17.4              15147000         871023.7
16:30:37.691 INFO  ProgressMeter -       chr8:141167876             17.6              15292000         870964.3
16:30:47.767 INFO  ProgressMeter -         chr9:8700953             17.7              15423000         870103.2
16:30:57.785 INFO  ProgressMeter -        chr9:21720386             17.9              15554000         869305.2
16:31:07.852 INFO  ProgressMeter -        chr9:35943246             18.1              15697000         869146.3
16:31:17.871 INFO  ProgressMeter -        chr9:72005376             18.2              15839000         868975.2
16:31:27.922 INFO  ProgressMeter -        chr9:86006729             18.4              15981000         868780.5
16:31:37.937 INFO  ProgressMeter -       chr9:100964168             18.6              16135000         869264.6
16:31:47.938 INFO  ProgressMeter -       chr9:115226807             18.7              16279000         869217.8
16:31:57.950 INFO  ProgressMeter -       chr9:129868085             18.9              16433000         869691.0
16:32:07.964 INFO  ProgressMeter -        chr10:4447268             19.1              16570000         869263.4
16:32:17.995 INFO  ProgressMeter -       chr10:17376411             19.2              16703000         868622.4
16:32:28.042 INFO  ProgressMeter -       chr10:31193872             19.4              16843000         868341.3
16:32:38.086 INFO  ProgressMeter -       chr10:46648183             19.6              17005000         869191.9
16:32:48.122 INFO  ProgressMeter -       chr10:61751150             19.7              17152000         869273.6
16:32:58.186 INFO  ProgressMeter -       chr10:76250056             19.9              17301000         869434.1
16:33:08.215 INFO  ProgressMeter -       chr10:90348440             20.1              17444000         869318.2
16:33:18.275 INFO  ProgressMeter -      chr10:103791744             20.2              17584000         869033.8
16:33:28.343 INFO  ProgressMeter -      chr10:116664839             20.4              17714000         868258.1
16:33:38.381 INFO  ProgressMeter -      chr10:129279886             20.6              17846000         867613.5
16:33:48.402 INFO  ProgressMeter -        chr11:7328810             20.7              17967000         866461.3
16:33:58.419 INFO  ProgressMeter -       chr11:20510937             20.9              18103000         866046.6
16:34:08.460 INFO  ProgressMeter -       chr11:33535770             21.1              18233000         865339.9
16:34:18.471 INFO  ProgressMeter -       chr11:46637821             21.2              18366000         864801.9
16:34:28.481 INFO  ProgressMeter -       chr11:62063776             21.4              18492000         863948.6
16:34:38.513 INFO  ProgressMeter -       chr11:74857986             21.6              18628000         863556.2
16:34:48.586 INFO  ProgressMeter -       chr11:88612063             21.7              18768000         863327.2
16:34:58.618 INFO  ProgressMeter -      chr11:102318624             21.9              18902000         862854.8
16:35:08.654 INFO  ProgressMeter -      chr11:116364886             22.1              19044000         862749.4
16:35:18.721 INFO  ProgressMeter -      chr11:129846357             22.2              19184000         862535.6
16:35:28.778 INFO  ProgressMeter -        chr12:7880969             22.4              19322000         862242.2
16:35:38.797 INFO  ProgressMeter -       chr12:21335565             22.6              19457000         861844.4
16:35:48.812 INFO  ProgressMeter -       chr12:36031271             22.7              19596000         861630.9
16:35:58.817 INFO  ProgressMeter -       chr12:50626607             22.9              19736000         861470.4
16:36:08.875 INFO  ProgressMeter -       chr12:64624598             23.1              19879000         861409.3
16:36:18.898 INFO  ProgressMeter -       chr12:79162799             23.2              20024000         861457.3
16:36:28.965 INFO  ProgressMeter -       chr12:94040035             23.4              20171000         861561.8
16:36:39.020 INFO  ProgressMeter -      chr12:107803493             23.6              20312000         861418.3
16:36:49.041 INFO  ProgressMeter -      chr12:121512104             23.7              20458000         861508.0
16:36:59.293 INFO  ProgressMeter -       chr13:16062268             23.9              20583000         860580.3
16:37:09.335 INFO  ProgressMeter -       chr13:30341950             24.1              20739000         861077.1
16:37:19.385 INFO  ProgressMeter -       chr13:44294896             24.3              20880000         860943.4
16:37:29.387 INFO  ProgressMeter -       chr13:59237173             24.4              21029000         861167.8
16:37:39.446 INFO  ProgressMeter -       chr13:73486826             24.6              21169000         860989.9
16:37:49.454 INFO  ProgressMeter -       chr13:87969896             24.8              21311000         860924.7
16:37:59.529 INFO  ProgressMeter -      chr13:102135252             24.9              21453000         860821.8
16:38:09.580 INFO  ProgressMeter -       chr14:18950272             25.1              21582000         860215.9
16:38:19.640 INFO  ProgressMeter -       chr14:30831105             25.3              21700000         859177.4
16:38:29.701 INFO  ProgressMeter -       chr14:40050834             25.4              21793000         857168.7
16:38:39.722 INFO  ProgressMeter -       chr14:54146072             25.6              21933000         857045.2
16:38:49.740 INFO  ProgressMeter -       chr14:68355849             25.8              22078000         857119.0
16:38:59.795 INFO  ProgressMeter -       chr14:82197726             25.9              22222000         857132.9
16:39:09.853 INFO  ProgressMeter -       chr14:95837351             26.1              22362000         856991.8
16:39:20.369 INFO  ProgressMeter -       chr15:19188648             26.3              22482000         855842.6
16:39:30.392 INFO  ProgressMeter -       chr15:33947855             26.4              22609000         855238.5
16:39:40.412 INFO  ProgressMeter -       chr15:47935491             26.6              22750000         855169.4
16:39:50.474 INFO  ProgressMeter -       chr15:61664908             26.8              22889000         855004.6
16:40:00.520 INFO  ProgressMeter -       chr15:75570760             26.9              23034000         855073.0
16:40:10.591 INFO  ProgressMeter -       chr15:89836600             27.1              23178000         855090.6
16:40:20.675 INFO  ProgressMeter -         chr16:830277             27.3              23312000         854734.5
16:40:30.768 INFO  ProgressMeter -        chr16:6380087             27.4              23372000         851681.5
16:40:40.818 INFO  ProgressMeter -       chr16:19185318             27.6              23498000         851078.2
16:40:50.840 INFO  ProgressMeter -       chr16:34586041             27.8              23644000         851216.5
16:41:00.862 INFO  ProgressMeter -       chr16:57028605             27.9              23811000         852104.7
16:41:10.890 INFO  ProgressMeter -       chr16:71427524             28.1              23958000         852267.8
16:41:20.964 INFO  ProgressMeter -       chr16:83174328             28.3              24080000         851521.8
16:41:31.010 INFO  ProgressMeter -        chr17:4225342             28.4              24199000         850693.6
16:41:41.033 INFO  ProgressMeter -       chr17:17297624             28.6              24335000         850479.6
16:41:51.060 INFO  ProgressMeter -       chr17:35179411             28.8              24503000         851378.5
16:42:01.066 INFO  ProgressMeter -       chr17:49954997             28.9              24651000         851586.4
16:42:11.084 INFO  ProgressMeter -       chr17:64668646             29.1              24802000         851889.1
16:42:21.107 INFO  ProgressMeter -       chr17:77889413             29.3              24941000         851776.2
16:42:31.163 INFO  ProgressMeter -        chr18:7427893             29.4              25079000         851614.6
16:42:41.198 INFO  ProgressMeter -       chr18:25926929             29.6              25225000         851735.1
16:42:51.206 INFO  ProgressMeter -       chr18:40756335             29.8              25374000         851967.8
16:43:01.256 INFO  ProgressMeter -       chr18:53100234             30.0              25499000         851376.6
16:43:11.272 INFO  ProgressMeter -       chr18:66830371             30.1              25637000         851239.7
16:43:21.293 INFO  ProgressMeter -       chr18:79307899             30.3              25763000         850705.8
16:43:31.343 INFO  ProgressMeter -       chr19:10453858             30.5              25884000         849999.9
16:43:41.355 INFO  ProgressMeter -       chr19:22348191             30.6              26012000         849548.0
16:43:51.413 INFO  ProgressMeter -       chr19:36836915             30.8              26136000         848950.0
16:44:01.462 INFO  ProgressMeter -       chr19:48208016             31.0              26256000         848233.3
16:44:11.523 INFO  ProgressMeter -         chr20:908630             31.1              26376000         847518.8
16:44:21.574 INFO  ProgressMeter -       chr20:14022073             31.3              26511000         847295.9
16:44:31.583 INFO  ProgressMeter -       chr20:18889616             31.5              26561000         844392.1
16:44:41.612 INFO  ProgressMeter -       chr20:34941766             31.6              26729000         845241.5
16:44:51.671 INFO  ProgressMeter -       chr20:48554411             31.8              26872000         845282.2
16:45:01.680 INFO  ProgressMeter -       chr20:61650678             32.0              27009000         845156.8
16:45:11.744 INFO  ProgressMeter -       chr21:20021062             32.1              27161000         845475.5
16:45:21.796 INFO  ProgressMeter -       chr21:33446656             32.3              27297000         845301.1
16:45:31.829 INFO  ProgressMeter -       chr21:46660035             32.5              27430000         845043.5
16:45:41.865 INFO  ProgressMeter -       chr22:28921121             32.6              27585000         845462.0
16:45:51.903 INFO  ProgressMeter -       chr22:42343435             32.8              27729000         845539.8
16:46:01.912 INFO  ProgressMeter -         chrX:5906427             33.0              27875000         845690.0
16:46:11.915 INFO  ProgressMeter -        chrX:23781306             33.1              28056000         846897.7
16:46:21.952 INFO  ProgressMeter -        chrX:41492503             33.3              28231000         847899.1
16:46:32.000 INFO  ProgressMeter -        chrX:63491672             33.5              28408000         848944.8
16:46:42.050 INFO  ProgressMeter -        chrX:81407897             33.6              28584000         849949.9
16:46:52.062 INFO  ProgressMeter -        chrX:98887011             33.8              28752000         850724.3
16:47:02.112 INFO  ProgressMeter -       chrX:117939284             34.0              28936000         851946.3
16:47:12.113 INFO  ProgressMeter -       chrX:136465422             34.1              29117000         853088.8
16:47:22.127 INFO  ProgressMeter -       chrX:154506504             34.3              29291000         854010.7
16:47:32.168 INFO  ProgressMeter - chrUn_KI270742v1:61234             34.5              29604000         858945.5
16:47:43.582 INFO  ProgressMeter - chr22_KI270878v1_alt:164027             34.7              29641000         855298.2
16:47:56.744 INFO  ProgressMeter - chrUn_JTFH01000098v1_decoy:24             34.9              29705000         851753.8
16:48:05.985 INFO  BaseRecalibrator - 17533296 read(s) filtered by: ((((((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND WellformedReadFilter)
  17533296 read(s) filtered by: (((((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter)
      17533296 read(s) filtered by: ((((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter)
          10791724 read(s) filtered by: (((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter)
              10663400 read(s) filtered by: ((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter)
                  10663400 read(s) filtered by: (MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter)
                      10663400 read(s) filtered by: MappingQualityNotZeroReadFilter 
              128324 read(s) filtered by: NotSecondaryAlignmentReadFilter 
          6741572 read(s) filtered by: NotDuplicateReadFilter 

16:48:06.027 INFO  ProgressMeter - chrUn_JTFH01001998v1_decoy:1772             35.0              29741085         849021.6
16:48:06.027 INFO  ProgressMeter - Traversal complete. Processed 29741085 total reads in 35.0 minutes.
16:48:06.072 INFO  BaseRecalibrator - Calculating quantized quality scores...
16:48:06.081 INFO  BaseRecalibrator - Writing recalibration report...
16:48:06.262 INFO  BaseRecalibrator - ...done!
16:48:06.262 INFO  BaseRecalibrator - Shutting down engine
[January 16, 2024 4:48:06 PM CST] org.broadinstitute.hellbender.tools.walkers.bqsr.BaseRecalibrator done. Elapsed time: 35.17 minutes.
Runtime.totalMemory()=8696365056
Tool returned:
29741085
Using GATK jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar BaseRecalibrator --input /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted_set_marked.bam --reference /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/seq/hg38.fa --known-sites /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.dbsnp138.vcf.gz --known-sites /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.known_indels.vcf.gz --output /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_recal_data.table
16:48:09.634 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_compression.so
Jan 16, 2024 4:48:11 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine
INFO: Failed to detect whether we are running on Google Compute Engine.
16:48:11.285 INFO  ApplyBQSR - ------------------------------------------------------------
16:48:11.285 INFO  ApplyBQSR - The Genome Analysis Toolkit (GATK) v4.1.2.0
16:48:11.285 INFO  ApplyBQSR - For support and documentation go to https://software.broadinstitute.org/gatk/
16:48:11.286 INFO  ApplyBQSR - Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux v3.10.0-1160.99.1.el7.x86_64 amd64
16:48:11.286 INFO  ApplyBQSR - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_382-b05
16:48:11.286 INFO  ApplyBQSR - Start Date/Time: January 16, 2024 4:48:09 PM CST
16:48:11.286 INFO  ApplyBQSR - ------------------------------------------------------------
16:48:11.286 INFO  ApplyBQSR - ------------------------------------------------------------
16:48:11.286 INFO  ApplyBQSR - HTSJDK Version: 2.19.0
16:48:11.286 INFO  ApplyBQSR - Picard Version: 2.19.0
16:48:11.286 INFO  ApplyBQSR - HTSJDK Defaults.COMPRESSION_LEVEL : 2
16:48:11.287 INFO  ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false
16:48:11.287 INFO  ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true
16:48:11.287 INFO  ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false
16:48:11.287 INFO  ApplyBQSR - Deflater: IntelDeflater
16:48:11.287 INFO  ApplyBQSR - Inflater: IntelInflater
16:48:11.287 INFO  ApplyBQSR - GCS max retries/reopens: 20
16:48:11.287 INFO  ApplyBQSR - Requester pays: disabled
16:48:11.287 INFO  ApplyBQSR - Initializing engine
16:48:12.446 INFO  ApplyBQSR - Done initializing engine
16:48:12.536 INFO  ProgressMeter - Starting traversal
16:48:12.536 INFO  ProgressMeter -        Current Locus  Elapsed Minutes       Reads Processed     Reads/Minute
16:48:22.546 INFO  ProgressMeter -        chr1:41477097              0.2                548000        3284715.3
16:48:32.561 INFO  ProgressMeter -        chr1:86746158              0.3               1122000        3361797.8
16:48:42.570 INFO  ProgressMeter -       chr1:124742435              0.5               1699000        3394153.3
16:48:52.586 INFO  ProgressMeter -       chr1:162496686              0.7               2091000        3132662.5
16:49:02.597 INFO  ProgressMeter -       chr1:207990151              0.8               2665000        3194103.2
16:49:12.598 INFO  ProgressMeter -         chr2:3653528              1.0               3238000        3234657.5
16:49:22.599 INFO  ProgressMeter -        chr2:26466205              1.2               3529000        3022137.2
16:49:32.599 INFO  ProgressMeter -        chr2:64523863              1.3               4099000        3071830.9
16:49:42.612 INFO  ProgressMeter -       chr2:108820736              1.5               4673000        3112704.8
16:49:59.966 INFO  ProgressMeter -       chr2:129752193              1.8               4941000        2759564.4
16:50:09.978 INFO  ProgressMeter -       chr2:175766019              2.0               5521000        2820626.4
16:50:40.213 INFO  ProgressMeter -       chr2:206774146              2.5               5912000        2401999.0
16:50:50.229 INFO  ProgressMeter -         chr3:2544921              2.6               6397000        2433969.8
16:51:00.231 INFO  ProgressMeter -        chr3:47713569              2.8               6973000        2494886.5
16:51:10.233 INFO  ProgressMeter -        chr3:92638886              3.0               7544000        2547257.4
16:51:20.444 INFO  ProgressMeter -       chr3:102282326              3.1               7698000        2458011.4
16:51:30.461 INFO  ProgressMeter -       chr3:148382678              3.3               8279000        2509751.2
16:51:40.464 INFO  ProgressMeter -       chr3:194369990              3.5               8857000        2555788.5
16:51:50.476 INFO  ProgressMeter -        chr4:40154323              3.6               9419000        2593099.0
16:52:00.484 INFO  ProgressMeter -        chr4:78311588              3.8               9989000        2629283.9
16:52:10.491 INFO  ProgressMeter -       chr4:124320172              4.0              10564000        2663696.9
16:52:20.790 INFO  ProgressMeter -       chr4:160138272              4.1              11012000        2661467.7
16:52:30.794 INFO  ProgressMeter -        chr5:14451435              4.3              11583000        2691029.9
16:52:40.808 INFO  ProgressMeter -        chr5:57307469              4.5              12152000        2717848.7
16:52:53.618 INFO  ProgressMeter -        chr5:92685662              4.7              12600000        2689606.6
16:53:03.625 INFO  ProgressMeter -       chr5:138431435              4.9              13173000        2715252.0
16:53:13.641 INFO  ProgressMeter -         chr6:1948073              5.0              13747000        2739310.2
16:53:23.645 INFO  ProgressMeter -        chr6:30680757              5.2              14114000        2722004.2
16:53:33.647 INFO  ProgressMeter -        chr6:74929506              5.4              14690000        2744845.2
16:53:43.659 INFO  ProgressMeter -       chr6:121138231              5.5              15267000        2766412.4
16:53:53.670 INFO  ProgressMeter -       chr6:164445260              5.7              15815000        2781604.9
16:54:03.676 INFO  ProgressMeter -        chr7:38591822              5.9              16388000        2800250.6
16:54:13.686 INFO  ProgressMeter -        chr7:82979668              6.0              16964000        2818330.3
16:54:23.698 INFO  ProgressMeter -       chr7:121223614              6.2              17449000        2820716.6
16:54:33.701 INFO  ProgressMeter -         chr8:6915399              6.4              18025000        2837361.3
16:54:43.701 INFO  ProgressMeter -        chr8:51397881              6.5              18598000        2852709.2
16:54:53.710 INFO  ProgressMeter -        chr8:86930513              6.7              19056000        2850035.1
16:55:03.722 INFO  ProgressMeter -       chr8:129645184              6.9              19594000        2859151.0
16:55:13.738 INFO  ProgressMeter -        chr9:29137832              7.0              20162000        2872073.0
16:55:23.750 INFO  ProgressMeter -        chr9:81586066              7.2              20647000        2872865.9
16:55:33.753 INFO  ProgressMeter -       chr9:126660280              7.4              21223000        2886062.9
16:55:43.766 INFO  ProgressMeter -       chr10:32705188              7.5              21798000        2898477.5
16:56:00.992 INFO  ProgressMeter -       chr10:57332423              7.8              22175000        2840187.4
16:56:11.001 INFO  ProgressMeter -      chr10:102241556              8.0              22748000        2852622.4
16:56:23.968 INFO  ProgressMeter -       chr11:11027579              8.2              23301000        2844869.7
16:56:33.980 INFO  ProgressMeter -       chr11:57175611              8.4              23873000        2856516.1
16:56:43.991 INFO  ProgressMeter -      chr11:102070839              8.5              24445000        2867701.0
16:56:53.998 INFO  ProgressMeter -        chr12:9954988              8.7              24995000        2875952.6
16:57:04.001 INFO  ProgressMeter -       chr12:54537061              8.9              25569000        2886624.7
16:57:14.013 INFO  ProgressMeter -       chr12:99667825              9.0              26134000        2895857.1
16:57:24.014 INFO  ProgressMeter -       chr13:16137613              9.2              26577000        2891538.7
16:57:34.024 INFO  ProgressMeter -       chr13:56484741              9.4              27156000        2901896.9
16:57:44.031 INFO  ProgressMeter -      chr13:102863648              9.5              27731000        2911416.5
16:57:54.033 INFO  ProgressMeter -       chr14:44384873              9.7              28210000        2910763.1
16:58:04.050 INFO  ProgressMeter -       chr14:89937974              9.9              28790000        2920302.8
16:58:14.066 INFO  ProgressMeter -       chr15:43997735             10.0              29359000        2928432.5
16:58:28.514 INFO  ProgressMeter -       chr15:78770114             10.3              29804000        2903090.7
16:58:38.518 INFO  ProgressMeter -       chr16:20480554             10.4              30371000        2911042.2
16:58:48.531 INFO  ProgressMeter -       chr16:67508501             10.6              30935000        2918419.2
16:58:58.543 INFO  ProgressMeter -       chr17:14202584             10.8              31417000        2917956.0
16:59:08.544 INFO  ProgressMeter -       chr17:56403275             10.9              31987000        2925609.0
16:59:18.543 INFO  ProgressMeter -       chr18:16156269             11.1              32557000        2933032.2
16:59:28.551 INFO  ProgressMeter -       chr18:55910315             11.3              33073000        2935408.2
16:59:38.555 INFO  ProgressMeter -       chr19:19922877             11.4              33646000        2942717.3
16:59:48.570 INFO  ProgressMeter -        chr20:6267732             11.6              34203000        2948390.5
16:59:58.578 INFO  ProgressMeter -       chr20:43867241             11.8              34750000        2953082.1
17:00:08.593 INFO  ProgressMeter -       chr21:23689626             11.9              35325000        2959959.9
17:00:18.607 INFO  ProgressMeter -       chr22:32893843             12.1              35890000        2965829.7
17:00:28.614 INFO  ProgressMeter -        chrX:18982900             12.3              36364000        2964142.4
17:00:38.625 INFO  ProgressMeter -        chrX:65921311             12.4              36937000        2970449.9
17:00:48.640 INFO  ProgressMeter -       chrX:112706210             12.6              37516000        2977054.7
17:00:58.655 INFO  ProgressMeter -       chrX:153744695             12.8              38024000        2977918.6
17:01:08.655 INFO  ProgressMeter - chrUn_GL000220v1:157971             12.9              38584000        2982841.5
17:01:18.667 INFO  ProgressMeter -             unmapped             13.1              39145000        2987670.0
17:01:28.673 INFO  ProgressMeter -             unmapped             13.3              39707000        2992474.9
17:01:38.685 INFO  ProgressMeter -             unmapped             13.4              40331000        3001752.8
17:01:48.698 INFO  ProgressMeter -             unmapped             13.6              40953000        3010652.3
17:01:58.709 INFO  ProgressMeter -             unmapped             13.8              41512000        3014768.1
17:02:08.722 INFO  ProgressMeter -             unmapped             13.9              42134000        3023298.6
17:02:18.724 INFO  ProgressMeter -             unmapped             14.1              42750000        3031241.3
17:02:28.737 INFO  ProgressMeter -             unmapped             14.3              43322000        3035875.9
17:02:38.747 INFO  ProgressMeter -             unmapped             14.4              43943000        3043811.5
17:02:48.757 INFO  ProgressMeter -             unmapped             14.6              44562000        3051425.4
17:02:58.759 INFO  ProgressMeter -             unmapped             14.8              45129000        3055370.9
17:03:08.768 INFO  ProgressMeter -             unmapped             14.9              45749000        3062759.5
17:03:18.769 INFO  ProgressMeter -             unmapped             15.1              46367000        3069872.8
17:03:28.781 INFO  ProgressMeter -             unmapped             15.3              46867000        3069073.3
17:03:35.280 INFO  ApplyBQSR - No reads filtered by: WellformedReadFilter
17:03:35.286 INFO  ProgressMeter -             unmapped             15.4              47274381        3073923.4
17:03:35.286 INFO  ProgressMeter - Traversal complete. Processed 47274381 total reads in 15.4 minutes.
17:03:36.162 INFO  ApplyBQSR - Shutting down engine
[January 16, 2024 5:03:36 PM CST] org.broadinstitute.hellbender.tools.walkers.bqsr.ApplyBQSR done. Elapsed time: 15.44 minutes.
Runtime.totalMemory()=989855744
Using GATK jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar ApplyBQSR --reference /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/seq/hg38.fa --input /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_sorted_set_marked.bam --bqsr-recal-file /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_recal_data.table --output /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_recal.bam
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane2.sam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane1.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane2.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane1_sorted.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane2_sorted.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane1_sorted.bam.bai’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S8_lane2_sorted.bam.bai’: No such file or directory
