[M::bwa_idx_load_from_disk] read 3171 ALT contigs
[M::process] read 662252 sequences (100000052 bp)...
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 271660, 13, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (316, 408, 522)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 934)
[M::mem_pestat] mean and std.dev: (423.49, 160.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1140)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1934, 2661, 4375)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9257)
[M::mem_pestat] mean and std.dev: (2843.85, 1518.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11698)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (439, 801, 1703)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4231)
[M::mem_pestat] mean and std.dev: (915.92, 715.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5495)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 460.314 CPU sec, 57.340 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (18, 272239, 18, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 685, 1437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3745)
[M::mem_pestat] mean and std.dev: (834.88, 664.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4899)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 414, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 951)
[M::mem_pestat] mean and std.dev: (430.20, 163.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1161)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (159, 1817, 3340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9702)
[M::mem_pestat] mean and std.dev: (2140.50, 2366.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12883)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (347, 728, 3820)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10766)
[M::mem_pestat] mean and std.dev: (1927.22, 2229.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14239)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 412.758 CPU sec, 51.288 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272567, 12, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (335, 553, 1687)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4391)
[M::mem_pestat] mean and std.dev: (663.09, 537.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5743)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 415, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 954)
[M::mem_pestat] mean and std.dev: (431.10, 164.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1165)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 790, 1849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5195)
[M::mem_pestat] mean and std.dev: (1033.25, 1238.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6868)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 381.331 CPU sec, 47.444 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272652, 20, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 264, 2521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7213)
[M::mem_pestat] mean and std.dev: (1455.18, 2025.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9559)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 414, 530)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 948)
[M::mem_pestat] mean and std.dev: (429.51, 162.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1157)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 835, 1869)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5357)
[M::mem_pestat] mean and std.dev: (946.72, 1021.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7101)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (280, 614, 1122)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2806)
[M::mem_pestat] mean and std.dev: (835.24, 718.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3711)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 390.510 CPU sec, 48.525 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 272143, 12, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (249, 757, 987)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2463)
[M::mem_pestat] mean and std.dev: (619.67, 445.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3201)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 411, 526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 940)
[M::mem_pestat] mean and std.dev: (426.84, 161.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1147)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (113, 1931, 4444)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13106)
[M::mem_pestat] mean and std.dev: (2209.42, 2303.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17437)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (442, 624, 741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1339)
[M::mem_pestat] mean and std.dev: (536.28, 221.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1638)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 399.484 CPU sec, 49.615 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 272055, 16, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (271, 351, 679)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1495)
[M::mem_pestat] mean and std.dev: (321.64, 192.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1903)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 409, 521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 927)
[M::mem_pestat] mean and std.dev: (423.68, 159.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1130)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (56, 752, 4570)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13598)
[M::mem_pestat] mean and std.dev: (1963.19, 2269.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18112)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 361, 899)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2241)
[M::mem_pestat] mean and std.dev: (582.36, 400.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2912)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 397.215 CPU sec, 49.286 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (16, 271327, 14, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (363, 811, 1579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4011)
[M::mem_pestat] mean and std.dev: (778.71, 759.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5227)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (316, 407, 519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 925)
[M::mem_pestat] mean and std.dev: (421.55, 158.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1128)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (876, 1422, 3629)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9135)
[M::mem_pestat] mean and std.dev: (2078.43, 1821.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11888)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 281, 847)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2029)
[M::mem_pestat] mean and std.dev: (410.75, 300.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2620)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 393.136 CPU sec, 48.857 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 270536, 14, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 213, 644)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1558)
[M::mem_pestat] mean and std.dev: (268.75, 164.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2015)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (317, 407, 517)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 917)
[M::mem_pestat] mean and std.dev: (421.09, 156.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1117)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 1267, 4394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12814)
[M::mem_pestat] mean and std.dev: (2432.14, 2794.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (266, 604, 1106)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2786)
[M::mem_pestat] mean and std.dev: (565.22, 367.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3626)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 404.465 CPU sec, 50.315 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 273414, 14, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (211, 340, 778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1912)
[M::mem_pestat] mean and std.dev: (345.89, 231.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2479)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (330, 425, 547)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 981)
[M::mem_pestat] mean and std.dev: (443.46, 169.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1198)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (38, 646, 1752)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5180)
[M::mem_pestat] mean and std.dev: (939.08, 1231.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6894)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (190, 466, 1234)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3322)
[M::mem_pestat] mean and std.dev: (750.22, 753.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4366)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 393.482 CPU sec, 48.882 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272353, 17, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (329, 425, 546)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 980)
[M::mem_pestat] mean and std.dev: (442.34, 169.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1072, 1745, 2654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5818)
[M::mem_pestat] mean and std.dev: (1811.44, 1153.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7400)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (349, 440, 1298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3196)
[M::mem_pestat] mean and std.dev: (741.27, 620.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4145)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 393.377 CPU sec, 48.924 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272935, 8, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (327, 421, 541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 969)
[M::mem_pestat] mean and std.dev: (438.62, 167.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1183)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 662252 reads in 394.224 CPU sec, 48.975 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272961, 11, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 530, 1303)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3455)
[M::mem_pestat] mean and std.dev: (850.00, 894.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4531)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 417, 536)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 962)
[M::mem_pestat] mean and std.dev: (434.35, 166.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1175)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (90, 493, 2785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8175)
[M::mem_pestat] mean and std.dev: (1531.36, 1682.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10870)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (262, 336, 1064)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2668)
[M::mem_pestat] mean and std.dev: (563.57, 489.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3470)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 388.859 CPU sec, 48.313 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272722, 15, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (251, 1146, 4077)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11729)
[M::mem_pestat] mean and std.dev: (1742.33, 2033.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15555)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (320, 413, 529)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 947)
[M::mem_pestat] mean and std.dev: (428.60, 163.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1156)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (265, 357, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7207)
[M::mem_pestat] mean and std.dev: (1314.64, 1662.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9521)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (222, 806, 2164)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6048)
[M::mem_pestat] mean and std.dev: (1272.62, 1347.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7990)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 381.587 CPU sec, 47.439 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272236, 16, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 400, 1475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4049)
[M::mem_pestat] mean and std.dev: (727.55, 683.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5336)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 410, 525)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 937)
[M::mem_pestat] mean and std.dev: (425.77, 160.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1143)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (88, 719, 2417)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7075)
[M::mem_pestat] mean and std.dev: (1263.31, 1410.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9404)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 412, 1521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4079)
[M::mem_pestat] mean and std.dev: (709.87, 687.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5358)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 398.813 CPU sec, 49.542 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 272137, 10, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (317, 408, 520)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 926)
[M::mem_pestat] mean and std.dev: (422.34, 158.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1129)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (104, 1538, 3608)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10616)
[M::mem_pestat] mean and std.dev: (1674.90, 1877.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14120)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 399.503 CPU sec, 49.672 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271184, 13, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (314, 404, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (417.45, 154.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (784, 1758, 5875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16057)
[M::mem_pestat] mean and std.dev: (2701.62, 2606.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21148)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (365, 474, 1310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3200)
[M::mem_pestat] mean and std.dev: (857.45, 781.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4145)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 434.542 CPU sec, 54.033 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 270814, 13, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (326, 420, 538)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 962)
[M::mem_pestat] mean and std.dev: (436.79, 165.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1174)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (90, 1598, 3214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9462)
[M::mem_pestat] mean and std.dev: (1958.54, 2125.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12586)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 362, 421)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 787)
[M::mem_pestat] mean and std.dev: (307.83, 113.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 970)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 517.765 CPU sec, 64.423 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272036, 13, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 420, 540)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 970)
[M::mem_pestat] mean and std.dev: (437.65, 167.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1185)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 304, 1825)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5411)
[M::mem_pestat] mean and std.dev: (945.46, 1235.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7204)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (424, 636, 2419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6409)
[M::mem_pestat] mean and std.dev: (1028.33, 1046.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8404)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 430.119 CPU sec, 53.561 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 273060, 18, 20)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 419, 539)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 967)
[M::mem_pestat] mean and std.dev: (436.65, 166.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1181)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (73, 1548, 1913)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5593)
[M::mem_pestat] mean and std.dev: (1548.06, 1493.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7523)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 456, 935)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2427)
[M::mem_pestat] mean and std.dev: (474.22, 361.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3173)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 379.541 CPU sec, 47.177 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272930, 12, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 416, 534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 958)
[M::mem_pestat] mean and std.dev: (432.45, 164.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1170)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (189, 2651, 4379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12759)
[M::mem_pestat] mean and std.dev: (2200.92, 1998.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16949)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (332, 762, 1360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3416)
[M::mem_pestat] mean and std.dev: (995.60, 853.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4444)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 394.910 CPU sec, 49.063 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 272248, 8, 4)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (293, 363, 388)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (103, 578)
[M::mem_pestat] mean and std.dev: (300.33, 81.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 673)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 411, 526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 940)
[M::mem_pestat] mean and std.dev: (426.57, 161.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1147)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 662252 reads in 389.749 CPU sec, 48.368 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272120, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (382, 843, 1091)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2509)
[M::mem_pestat] mean and std.dev: (705.67, 397.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3218)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (317, 409, 522)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 932)
[M::mem_pestat] mean and std.dev: (423.47, 159.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1137)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (508, 936, 1490)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3454)
[M::mem_pestat] mean and std.dev: (699.67, 540.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4436)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 295, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1805)
[M::mem_pestat] mean and std.dev: (341.18, 177.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2322)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 398.363 CPU sec, 49.531 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 271880, 14, 19)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (316, 406, 516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 916)
[M::mem_pestat] mean and std.dev: (419.60, 156.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1116)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 143, 1747)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5177)
[M::mem_pestat] mean and std.dev: (721.54, 1217.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6892)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (337, 884, 1303)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3235)
[M::mem_pestat] mean and std.dev: (948.47, 641.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4201)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 394.116 CPU sec, 48.950 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 271100, 18, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (208, 380, 2016)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5632)
[M::mem_pestat] mean and std.dev: (841.07, 938.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7440)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (314, 404, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (417.38, 155.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (156, 768, 3040)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8808)
[M::mem_pestat] mean and std.dev: (1781.78, 2186.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11692)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 418.438 CPU sec, 52.138 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272994, 16, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1236, 1989, 2482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4974)
[M::mem_pestat] mean and std.dev: (1906.30, 1216.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6772)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 418, 537)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (434.97, 165.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1176)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 1839, 3315)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9595)
[M::mem_pestat] mean and std.dev: (2254.31, 2777.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13362)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 305, 867)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2035)
[M::mem_pestat] mean and std.dev: (443.36, 283.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2619)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 401.146 CPU sec, 49.912 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 273276, 15, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 419, 537)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 961)
[M::mem_pestat] mean and std.dev: (435.48, 165.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1173)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (531, 917, 1931)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4731)
[M::mem_pestat] mean and std.dev: (1128.69, 1007.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6131)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (414, 776, 904)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1884)
[M::mem_pestat] mean and std.dev: (552.90, 253.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2374)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 380.883 CPU sec, 47.340 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 272802, 16, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 714, 5330)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15606)
[M::mem_pestat] mean and std.dev: (2297.54, 3226.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20744)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 419, 538)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 966)
[M::mem_pestat] mean and std.dev: (435.60, 166.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1180)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 912, 2972)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8368)
[M::mem_pestat] mean and std.dev: (1609.75, 1731.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11066)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 608, 1093)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2767)
[M::mem_pestat] mean and std.dev: (642.20, 453.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3604)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 379.462 CPU sec, 47.131 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272448, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 417, 535)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 957)
[M::mem_pestat] mean and std.dev: (433.74, 164.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1168)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1472, 2285, 4641)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10979)
[M::mem_pestat] mean and std.dev: (2461.83, 1867.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14148)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (459, 501, 1186)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2640)
[M::mem_pestat] mean and std.dev: (572.78, 328.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3367)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 390.889 CPU sec, 48.619 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272269, 20, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 415, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 951)
[M::mem_pestat] mean and std.dev: (430.32, 163.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1161)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (762, 1349, 3030)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7566)
[M::mem_pestat] mean and std.dev: (1793.00, 1599.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9834)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 557, 1076)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2652)
[M::mem_pestat] mean and std.dev: (676.20, 596.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3440)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 399.963 CPU sec, 49.695 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272229, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (320, 412, 527)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 941)
[M::mem_pestat] mean and std.dev: (427.67, 161.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1148)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (131, 1266, 4531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13331)
[M::mem_pestat] mean and std.dev: (2296.50, 2687.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17731)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 261, 1036)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2700)
[M::mem_pestat] mean and std.dev: (547.40, 620.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3532)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 401.657 CPU sec, 49.942 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 271689, 10, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 409, 521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 927)
[M::mem_pestat] mean and std.dev: (423.64, 158.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1130)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (110, 2729, 4613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13619)
[M::mem_pestat] mean and std.dev: (2890.20, 3219.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18122)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (249, 642, 1204)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3114)
[M::mem_pestat] mean and std.dev: (789.30, 641.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4069)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 406.071 CPU sec, 50.494 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 271003, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (249, 920, 4103)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11811)
[M::mem_pestat] mean and std.dev: (1749.00, 2080.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15665)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (314, 404, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (417.11, 155.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (133, 2673, 4371)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12847)
[M::mem_pestat] mean and std.dev: (2480.82, 2370.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17085)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (336, 687, 1553)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3987)
[M::mem_pestat] mean and std.dev: (746.00, 577.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5204)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 418.968 CPU sec, 52.119 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272976, 11, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (208, 1208, 1398)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3778)
[M::mem_pestat] mean and std.dev: (913.00, 978.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4968)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 412, 528)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 946)
[M::mem_pestat] mean and std.dev: (428.14, 162.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1155)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (114, 766, 4411)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13005)
[M::mem_pestat] mean and std.dev: (2075.27, 2718.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17302)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (344, 1287, 1526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3890)
[M::mem_pestat] mean and std.dev: (933.80, 608.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5072)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 410.730 CPU sec, 51.047 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 272530, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 418, 536)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 960)
[M::mem_pestat] mean and std.dev: (434.23, 165.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1172)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 442, 1385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3915)
[M::mem_pestat] mean and std.dev: (981.36, 1269.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6059)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (457, 699, 1510)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3616)
[M::mem_pestat] mean and std.dev: (787.50, 533.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4669)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 404.845 CPU sec, 50.611 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (19, 272667, 16, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (170, 553, 1930)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5450)
[M::mem_pestat] mean and std.dev: (926.53, 1224.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7210)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 416, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 950)
[M::mem_pestat] mean and std.dev: (431.69, 163.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1159)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (566, 1958, 4386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12026)
[M::mem_pestat] mean and std.dev: (2139.06, 1566.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15846)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (372, 691, 788)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1620)
[M::mem_pestat] mean and std.dev: (586.22, 265.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2036)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 397.757 CPU sec, 49.445 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272557, 12, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (795, 998, 1294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2292)
[M::mem_pestat] mean and std.dev: (770.75, 378.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2791)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 416, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 952)
[M::mem_pestat] mean and std.dev: (431.23, 163.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1162)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (160, 1339, 4582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13426)
[M::mem_pestat] mean and std.dev: (2614.67, 3002.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17848)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 649, 5112)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14790)
[M::mem_pestat] mean and std.dev: (2077.93, 2529.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19629)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 393.126 CPU sec, 48.855 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (16, 272567, 9, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (272, 351, 1309)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3383)
[M::mem_pestat] mean and std.dev: (632.20, 597.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4420)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 412, 527)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 943)
[M::mem_pestat] mean and std.dev: (427.42, 162.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1151)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 229, 762)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1994)
[M::mem_pestat] mean and std.dev: (326.40, 242.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2610)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 410.220 CPU sec, 50.941 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 272966, 18, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 413, 528)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 942)
[M::mem_pestat] mean and std.dev: (428.70, 161.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1149)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (66, 1011, 1590)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4638)
[M::mem_pestat] mean and std.dev: (1047.12, 1288.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6202)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (420, 439, 779)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1497)
[M::mem_pestat] mean and std.dev: (552.40, 313.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1856)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 409.088 CPU sec, 50.864 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 271464, 10, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 519, 1181)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2995)
[M::mem_pestat] mean and std.dev: (574.09, 421.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3902)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 408, 521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 927)
[M::mem_pestat] mean and std.dev: (423.38, 157.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1130)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 620, 4110)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12264)
[M::mem_pestat] mean and std.dev: (1477.20, 1849.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16341)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 841, 1094)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2632)
[M::mem_pestat] mean and std.dev: (651.21, 495.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3401)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 437.682 CPU sec, 54.454 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 270570, 13, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (238, 583, 3406)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9742)
[M::mem_pestat] mean and std.dev: (1727.42, 2586.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12910)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (331, 426, 547)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 979)
[M::mem_pestat] mean and std.dev: (443.98, 167.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1195)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (126, 971, 4264)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12540)
[M::mem_pestat] mean and std.dev: (1792.46, 1962.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16678)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (303, 739, 1625)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4269)
[M::mem_pestat] mean and std.dev: (812.27, 791.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5591)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 540.277 CPU sec, 67.223 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 272034, 12, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (206, 354, 1764)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4880)
[M::mem_pestat] mean and std.dev: (1025.31, 1235.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6438)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (332, 428, 551)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 989)
[M::mem_pestat] mean and std.dev: (446.12, 170.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1208)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 982, 3277)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9595)
[M::mem_pestat] mean and std.dev: (1908.00, 2481.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12754)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 629, 1532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4186)
[M::mem_pestat] mean and std.dev: (732.83, 635.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5513)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 442.031 CPU sec, 54.955 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 271973, 11, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (215, 245, 665)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1565)
[M::mem_pestat] mean and std.dev: (323.82, 246.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2015)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (334, 430, 556)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1000)
[M::mem_pestat] mean and std.dev: (449.70, 172.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1222)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (657, 974, 4386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11844)
[M::mem_pestat] mean and std.dev: (1892.73, 2028.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15573)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (416, 698, 2187)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5729)
[M::mem_pestat] mean and std.dev: (1356.67, 1593.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7729)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 410.786 CPU sec, 51.055 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 272603, 20, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (375, 735, 1162)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2736)
[M::mem_pestat] mean and std.dev: (746.85, 447.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3523)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (329, 423, 544)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 974)
[M::mem_pestat] mean and std.dev: (440.96, 167.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1189)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (505, 1217, 3682)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10036)
[M::mem_pestat] mean and std.dev: (2167.40, 2135.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13213)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (439, 529, 1568)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3826)
[M::mem_pestat] mean and std.dev: (887.15, 713.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4955)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 406.811 CPU sec, 50.559 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 272485, 14, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (327, 421, 541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 969)
[M::mem_pestat] mean and std.dev: (438.30, 166.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1183)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (61, 913, 1514)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4420)
[M::mem_pestat] mean and std.dev: (1190.71, 1379.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6707)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 477, 528)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 942)
[M::mem_pestat] mean and std.dev: (426.11, 168.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1149)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 440.807 CPU sec, 54.794 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 271953, 16, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (305, 575, 741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1613)
[M::mem_pestat] mean and std.dev: (509.54, 364.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2049)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 419, 537)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 961)
[M::mem_pestat] mean and std.dev: (435.58, 165.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1173)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (297, 2278, 6301)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 18309)
[M::mem_pestat] mean and std.dev: (3097.81, 3149.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 24313)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (214, 437, 1109)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2899)
[M::mem_pestat] mean and std.dev: (525.82, 482.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3794)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 398.984 CPU sec, 49.599 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271631, 19, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 416, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 953)
[M::mem_pestat] mean and std.dev: (431.87, 162.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1163)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (767, 1504, 2831)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6959)
[M::mem_pestat] mean and std.dev: (1722.56, 1423.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9023)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 421.477 CPU sec, 52.407 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 272264, 15, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (389, 830, 1405)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3437)
[M::mem_pestat] mean and std.dev: (933.81, 748.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4453)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 416, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 945)
[M::mem_pestat] mean and std.dev: (431.75, 161.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1152)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (98, 859, 2161)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6287)
[M::mem_pestat] mean and std.dev: (938.14, 1008.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8350)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 428.260 CPU sec, 53.241 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 272760, 12, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (332, 427, 551)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 989)
[M::mem_pestat] mean and std.dev: (446.25, 169.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1208)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (547, 1970, 3030)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7996)
[M::mem_pestat] mean and std.dev: (1482.18, 1298.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10479)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (187, 456, 1422)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3892)
[M::mem_pestat] mean and std.dev: (716.80, 789.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5127)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 409.904 CPU sec, 50.963 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272352, 12, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (331, 427, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 985)
[M::mem_pestat] mean and std.dev: (445.13, 169.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1203)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 1304, 2608)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7734)
[M::mem_pestat] mean and std.dev: (1366.17, 1578.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10297)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (276, 842, 2053)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5607)
[M::mem_pestat] mean and std.dev: (929.00, 902.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7384)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 414.027 CPU sec, 51.474 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272793, 17, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 857, 1504)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4022)
[M::mem_pestat] mean and std.dev: (848.64, 633.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5281)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (328, 423, 544)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 976)
[M::mem_pestat] mean and std.dev: (440.84, 168.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1192)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (172, 624, 4190)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12226)
[M::mem_pestat] mean and std.dev: (1654.41, 1882.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16244)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (156, 296, 460)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1068)
[M::mem_pestat] mean and std.dev: (285.90, 224.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1372)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 402.614 CPU sec, 50.074 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 272490, 10, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (327, 422, 542)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 972)
[M::mem_pestat] mean and std.dev: (438.90, 167.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1187)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (539, 1199, 2742)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7148)
[M::mem_pestat] mean and std.dev: (2175.20, 2291.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11340)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (339, 544, 2935)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8127)
[M::mem_pestat] mean and std.dev: (1291.85, 1274.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10723)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 400.180 CPU sec, 49.781 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272589, 12, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 416, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 953)
[M::mem_pestat] mean and std.dev: (432.04, 164.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1163)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (347, 1280, 1872)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4922)
[M::mem_pestat] mean and std.dev: (1142.42, 951.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6447)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 605, 1568)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4126)
[M::mem_pestat] mean and std.dev: (744.92, 788.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5405)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 420.266 CPU sec, 52.229 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271835, 11, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 415, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 950)
[M::mem_pestat] mean and std.dev: (431.46, 163.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1159)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (413, 1256, 3560)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9854)
[M::mem_pestat] mean and std.dev: (1829.45, 1648.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13001)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 297, 760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1826)
[M::mem_pestat] mean and std.dev: (398.89, 283.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2359)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 429.834 CPU sec, 53.405 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271565, 11, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 407, 519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 921)
[M::mem_pestat] mean and std.dev: (421.83, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1122)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (151, 1295, 2419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6955)
[M::mem_pestat] mean and std.dev: (1577.18, 1669.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9223)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 218, 596)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1498)
[M::mem_pestat] mean and std.dev: (334.31, 256.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1949)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 428.159 CPU sec, 53.223 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 269675, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 411, 524)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 934)
[M::mem_pestat] mean and std.dev: (425.45, 159.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1139)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 307, 656)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1614)
[M::mem_pestat] mean and std.dev: (382.07, 285.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2093)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 562.002 CPU sec, 69.987 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 269307, 16, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (249, 488, 932)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2298)
[M::mem_pestat] mean and std.dev: (685.00, 569.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2981)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 414, 529)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 943)
[M::mem_pestat] mean and std.dev: (429.99, 162.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1150)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 523, 2536)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7540)
[M::mem_pestat] mean and std.dev: (1298.62, 1475.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10042)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 604, 1370)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3542)
[M::mem_pestat] mean and std.dev: (728.50, 634.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4628)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 480.841 CPU sec, 59.768 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 270125, 14, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (225, 282, 1475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3975)
[M::mem_pestat] mean and std.dev: (711.70, 687.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5225)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 416, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 955)
[M::mem_pestat] mean and std.dev: (432.26, 164.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1166)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (113, 1298, 4394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12956)
[M::mem_pestat] mean and std.dev: (1786.93, 1896.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17237)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (441, 673, 1013)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2157)
[M::mem_pestat] mean and std.dev: (670.27, 421.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2729)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 431.573 CPU sec, 53.716 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272978, 13, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 1151, 1162)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3124)
[M::mem_pestat] mean and std.dev: (647.33, 479.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4105)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 417, 535)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 959)
[M::mem_pestat] mean and std.dev: (433.40, 164.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1171)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 342, 1833)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5427)
[M::mem_pestat] mean and std.dev: (728.67, 926.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7224)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 396.744 CPU sec, 49.301 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272761, 20, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 415, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 952)
[M::mem_pestat] mean and std.dev: (430.75, 163.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1162)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (154, 371, 1980)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5632)
[M::mem_pestat] mean and std.dev: (1070.21, 1504.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7458)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (340, 639, 1033)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2419)
[M::mem_pestat] mean and std.dev: (718.46, 491.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3112)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 406.059 CPU sec, 50.464 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272811, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (325, 443, 1288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3214)
[M::mem_pestat] mean and std.dev: (569.00, 369.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4177)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 415, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 949)
[M::mem_pestat] mean and std.dev: (430.61, 163.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1158)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (647, 2440, 4468)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12110)
[M::mem_pestat] mean and std.dev: (2812.75, 2676.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15931)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 1209, 1666)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4486)
[M::mem_pestat] mean and std.dev: (1206.80, 1008.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5896)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 404.123 CPU sec, 50.265 real sec
[M::process] read 70472 sequences (10641272 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272693, 18, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (349, 569, 1218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2956)
[M::mem_pestat] mean and std.dev: (879.00, 662.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3825)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (320, 410, 523)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 929)
[M::mem_pestat] mean and std.dev: (425.46, 159.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1132)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (589, 1452, 3630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9712)
[M::mem_pestat] mean and std.dev: (2085.67, 1881.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12753)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (591, 657, 1833)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4317)
[M::mem_pestat] mean and std.dev: (791.22, 571.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5559)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 413.833 CPU sec, 51.755 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 29001, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (313, 401, 510)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 904)
[M::mem_pestat] mean and std.dev: (414.58, 153.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1101)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 70472 reads in 46.687 CPU sec, 5.762 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /Dedicated/jmichaelson-wdata/bcbio-dna/bin/bwa mem -K 100000000 -v 3 -t 8 -Y -M -R @RG\tID:S28_lane1\tSM:S28\tPL:ILLUMINA\tLB:lib1 /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/bwa/hg38.fa /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_28_lane1_20230820000_S28_L001_R1_001.fastq.gz /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_28_lane1_20230820000_S28_L001_R2_001.fastq.gz
[main] Real time: 3224.038 sec; CPU: 25334.123 sec
[E::hts_open_format] Failed to open file /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane1_sorted.bam.tmp.0001.bam
[E::hts_open_format] Failed to open file /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane1_sorted.bam.tmp.0000.bam
samtools sort: failed to create temporary file "/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane1_sorted.bam.tmp.0000.bam": File exists
samtools sort: failed to create temporary file "/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane1_sorted.bam.tmp.0001.bam": File exists
[M::bwa_idx_load_from_disk] read 3171 ALT contigs
[M::process] read 662252 sequences (100000052 bp)...
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 271660, 13, 15)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (316, 408, 522)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 934)
[M::mem_pestat] mean and std.dev: (423.49, 160.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1140)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1934, 2661, 4375)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9257)
[M::mem_pestat] mean and std.dev: (2843.85, 1518.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11698)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (439, 801, 1703)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4231)
[M::mem_pestat] mean and std.dev: (915.92, 715.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5495)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 521.462 CPU sec, 65.185 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (18, 272239, 18, 18)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 685, 1437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3745)
[M::mem_pestat] mean and std.dev: (834.88, 664.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4899)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 414, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 951)
[M::mem_pestat] mean and std.dev: (430.20, 163.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1161)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (159, 1817, 3340)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9702)
[M::mem_pestat] mean and std.dev: (2140.50, 2366.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12883)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (347, 728, 3820)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10766)
[M::mem_pestat] mean and std.dev: (1927.22, 2229.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14239)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 527.664 CPU sec, 65.662 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272567, 12, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (335, 553, 1687)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4391)
[M::mem_pestat] mean and std.dev: (663.09, 537.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5743)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 415, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 954)
[M::mem_pestat] mean and std.dev: (431.10, 164.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1165)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 790, 1849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5195)
[M::mem_pestat] mean and std.dev: (1033.25, 1238.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6868)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 399.848 CPU sec, 52.186 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272652, 20, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 264, 2521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7213)
[M::mem_pestat] mean and std.dev: (1455.18, 2025.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9559)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 414, 530)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 948)
[M::mem_pestat] mean and std.dev: (429.51, 162.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1157)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 835, 1869)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5357)
[M::mem_pestat] mean and std.dev: (946.72, 1021.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7101)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (280, 614, 1122)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2806)
[M::mem_pestat] mean and std.dev: (835.24, 718.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3711)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 433.487 CPU sec, 53.870 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 272143, 12, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (249, 757, 987)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2463)
[M::mem_pestat] mean and std.dev: (619.67, 445.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3201)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 411, 526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 940)
[M::mem_pestat] mean and std.dev: (426.84, 161.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1147)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (113, 1931, 4444)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13106)
[M::mem_pestat] mean and std.dev: (2209.42, 2303.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17437)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (442, 624, 741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1339)
[M::mem_pestat] mean and std.dev: (536.28, 221.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1638)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 443.398 CPU sec, 55.177 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 272055, 16, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (271, 351, 679)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1495)
[M::mem_pestat] mean and std.dev: (321.64, 192.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1903)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 409, 521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 927)
[M::mem_pestat] mean and std.dev: (423.68, 159.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1130)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (56, 752, 4570)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13598)
[M::mem_pestat] mean and std.dev: (1963.19, 2269.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18112)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 361, 899)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2241)
[M::mem_pestat] mean and std.dev: (582.36, 400.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2912)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 451.934 CPU sec, 56.285 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (16, 271327, 14, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (363, 811, 1579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4011)
[M::mem_pestat] mean and std.dev: (778.71, 759.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5227)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (316, 407, 519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 925)
[M::mem_pestat] mean and std.dev: (421.55, 158.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1128)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (876, 1422, 3629)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9135)
[M::mem_pestat] mean and std.dev: (2078.43, 1821.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11888)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 281, 847)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2029)
[M::mem_pestat] mean and std.dev: (410.75, 300.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2620)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 416.824 CPU sec, 51.808 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 270536, 14, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 213, 644)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1558)
[M::mem_pestat] mean and std.dev: (268.75, 164.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2015)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (317, 407, 517)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 917)
[M::mem_pestat] mean and std.dev: (421.09, 156.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1117)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 1267, 4394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12814)
[M::mem_pestat] mean and std.dev: (2432.14, 2794.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (266, 604, 1106)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2786)
[M::mem_pestat] mean and std.dev: (565.22, 367.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3626)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 462.266 CPU sec, 57.434 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 273414, 14, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (211, 340, 778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1912)
[M::mem_pestat] mean and std.dev: (345.89, 231.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2479)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (330, 425, 547)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 981)
[M::mem_pestat] mean and std.dev: (443.46, 169.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1198)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (38, 646, 1752)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5180)
[M::mem_pestat] mean and std.dev: (939.08, 1231.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6894)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (190, 466, 1234)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3322)
[M::mem_pestat] mean and std.dev: (750.22, 753.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4366)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 480.893 CPU sec, 59.871 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272353, 17, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (329, 425, 546)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 980)
[M::mem_pestat] mean and std.dev: (442.34, 169.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1072, 1745, 2654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5818)
[M::mem_pestat] mean and std.dev: (1811.44, 1153.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7400)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (349, 440, 1298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3196)
[M::mem_pestat] mean and std.dev: (741.27, 620.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4145)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 419.948 CPU sec, 52.722 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272935, 8, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (327, 421, 541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 969)
[M::mem_pestat] mean and std.dev: (438.62, 167.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1183)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 662252 reads in 428.038 CPU sec, 53.193 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272961, 11, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (227, 530, 1303)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3455)
[M::mem_pestat] mean and std.dev: (850.00, 894.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4531)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 417, 536)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 962)
[M::mem_pestat] mean and std.dev: (434.35, 166.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1175)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (90, 493, 2785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8175)
[M::mem_pestat] mean and std.dev: (1531.36, 1682.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10870)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (262, 336, 1064)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2668)
[M::mem_pestat] mean and std.dev: (563.57, 489.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3470)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 472.130 CPU sec, 58.723 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272722, 15, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (251, 1146, 4077)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11729)
[M::mem_pestat] mean and std.dev: (1742.33, 2033.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15555)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (320, 413, 529)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 947)
[M::mem_pestat] mean and std.dev: (428.60, 163.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1156)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (265, 357, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7207)
[M::mem_pestat] mean and std.dev: (1314.64, 1662.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9521)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (222, 806, 2164)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6048)
[M::mem_pestat] mean and std.dev: (1272.62, 1347.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7990)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 459.924 CPU sec, 57.239 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272236, 16, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 400, 1475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4049)
[M::mem_pestat] mean and std.dev: (727.55, 683.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5336)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 410, 525)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 937)
[M::mem_pestat] mean and std.dev: (425.77, 160.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1143)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (88, 719, 2417)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7075)
[M::mem_pestat] mean and std.dev: (1263.31, 1410.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9404)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 412, 1521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4079)
[M::mem_pestat] mean and std.dev: (709.87, 687.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5358)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 472.368 CPU sec, 58.788 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 272137, 10, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (317, 408, 520)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 926)
[M::mem_pestat] mean and std.dev: (422.34, 158.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1129)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (104, 1538, 3608)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10616)
[M::mem_pestat] mean and std.dev: (1674.90, 1877.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14120)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 465.885 CPU sec, 57.900 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271184, 13, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (314, 404, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (417.45, 154.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (784, 1758, 5875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16057)
[M::mem_pestat] mean and std.dev: (2701.62, 2606.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21148)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (365, 474, 1310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3200)
[M::mem_pestat] mean and std.dev: (857.45, 781.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4145)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 498.061 CPU sec, 61.943 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 270814, 13, 14)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (326, 420, 538)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 962)
[M::mem_pestat] mean and std.dev: (436.79, 165.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1174)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (90, 1598, 3214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9462)
[M::mem_pestat] mean and std.dev: (1958.54, 2125.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12586)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 362, 421)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 787)
[M::mem_pestat] mean and std.dev: (307.83, 113.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 970)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 634.832 CPU sec, 79.152 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272036, 13, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 420, 540)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 970)
[M::mem_pestat] mean and std.dev: (437.65, 167.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1185)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 304, 1825)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5411)
[M::mem_pestat] mean and std.dev: (945.46, 1235.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7204)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (424, 636, 2419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6409)
[M::mem_pestat] mean and std.dev: (1028.33, 1046.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8404)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 502.339 CPU sec, 62.534 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 273060, 18, 20)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 419, 539)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 967)
[M::mem_pestat] mean and std.dev: (436.65, 166.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1181)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (73, 1548, 1913)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5593)
[M::mem_pestat] mean and std.dev: (1548.06, 1493.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7523)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 456, 935)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2427)
[M::mem_pestat] mean and std.dev: (474.22, 361.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3173)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 487.284 CPU sec, 60.667 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272930, 12, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 416, 534)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 958)
[M::mem_pestat] mean and std.dev: (432.45, 164.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1170)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (189, 2651, 4379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12759)
[M::mem_pestat] mean and std.dev: (2200.92, 1998.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16949)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (332, 762, 1360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3416)
[M::mem_pestat] mean and std.dev: (995.60, 853.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4444)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 503.111 CPU sec, 62.522 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 272248, 8, 4)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (293, 363, 388)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (103, 578)
[M::mem_pestat] mean and std.dev: (300.33, 81.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 673)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 411, 526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 940)
[M::mem_pestat] mean and std.dev: (426.57, 161.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1147)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 662252 reads in 434.483 CPU sec, 54.147 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272120, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (382, 843, 1091)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2509)
[M::mem_pestat] mean and std.dev: (705.67, 397.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3218)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (317, 409, 522)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 932)
[M::mem_pestat] mean and std.dev: (423.47, 159.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1137)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (508, 936, 1490)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3454)
[M::mem_pestat] mean and std.dev: (699.67, 540.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4436)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 295, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1805)
[M::mem_pestat] mean and std.dev: (341.18, 177.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2322)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 550.660 CPU sec, 68.801 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 271880, 14, 19)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (316, 406, 516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 916)
[M::mem_pestat] mean and std.dev: (419.60, 156.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1116)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (32, 143, 1747)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5177)
[M::mem_pestat] mean and std.dev: (721.54, 1217.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6892)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (337, 884, 1303)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3235)
[M::mem_pestat] mean and std.dev: (948.47, 641.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4201)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 482.510 CPU sec, 59.988 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 271100, 18, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (208, 380, 2016)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5632)
[M::mem_pestat] mean and std.dev: (841.07, 938.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7440)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (314, 404, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (417.38, 155.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (156, 768, 3040)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8808)
[M::mem_pestat] mean and std.dev: (1781.78, 2186.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11692)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 455.095 CPU sec, 56.542 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272994, 16, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1236, 1989, 2482)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4974)
[M::mem_pestat] mean and std.dev: (1906.30, 1216.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6772)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 418, 537)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (434.97, 165.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1176)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 1839, 3315)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9595)
[M::mem_pestat] mean and std.dev: (2254.31, 2777.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13362)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (283, 305, 867)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2035)
[M::mem_pestat] mean and std.dev: (443.36, 283.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2619)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 435.901 CPU sec, 54.122 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 273276, 15, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 419, 537)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 961)
[M::mem_pestat] mean and std.dev: (435.48, 165.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1173)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (531, 917, 1931)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4731)
[M::mem_pestat] mean and std.dev: (1128.69, 1007.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6131)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (414, 776, 904)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1884)
[M::mem_pestat] mean and std.dev: (552.90, 253.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2374)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 388.407 CPU sec, 48.283 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 272802, 16, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 714, 5330)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15606)
[M::mem_pestat] mean and std.dev: (2297.54, 3226.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20744)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 419, 538)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 966)
[M::mem_pestat] mean and std.dev: (435.60, 166.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1180)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 912, 2972)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8368)
[M::mem_pestat] mean and std.dev: (1609.75, 1731.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11066)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 608, 1093)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2767)
[M::mem_pestat] mean and std.dev: (642.20, 453.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3604)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 386.889 CPU sec, 48.046 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272448, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 417, 535)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 957)
[M::mem_pestat] mean and std.dev: (433.74, 164.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1168)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1472, 2285, 4641)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10979)
[M::mem_pestat] mean and std.dev: (2461.83, 1867.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14148)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (459, 501, 1186)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2640)
[M::mem_pestat] mean and std.dev: (572.78, 328.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3367)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 419.618 CPU sec, 52.283 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 272269, 20, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 415, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 951)
[M::mem_pestat] mean and std.dev: (430.32, 163.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1161)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (762, 1349, 3030)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7566)
[M::mem_pestat] mean and std.dev: (1793.00, 1599.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9834)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (288, 557, 1076)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2652)
[M::mem_pestat] mean and std.dev: (676.20, 596.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3440)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 434.927 CPU sec, 54.154 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272229, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (320, 412, 527)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 941)
[M::mem_pestat] mean and std.dev: (427.67, 161.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1148)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (131, 1266, 4531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13331)
[M::mem_pestat] mean and std.dev: (2296.50, 2687.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17731)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 261, 1036)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2700)
[M::mem_pestat] mean and std.dev: (547.40, 620.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3532)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 426.573 CPU sec, 52.991 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 271689, 10, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 409, 521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 927)
[M::mem_pestat] mean and std.dev: (423.64, 158.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1130)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (110, 2729, 4613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13619)
[M::mem_pestat] mean and std.dev: (2890.20, 3219.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18122)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (249, 642, 1204)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3114)
[M::mem_pestat] mean and std.dev: (789.30, 641.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4069)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 478.555 CPU sec, 59.613 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 271003, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (249, 920, 4103)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11811)
[M::mem_pestat] mean and std.dev: (1749.00, 2080.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15665)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (314, 404, 513)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 911)
[M::mem_pestat] mean and std.dev: (417.11, 155.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1110)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (133, 2673, 4371)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12847)
[M::mem_pestat] mean and std.dev: (2480.82, 2370.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17085)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (336, 687, 1553)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3987)
[M::mem_pestat] mean and std.dev: (746.00, 577.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5204)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 444.420 CPU sec, 55.196 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272976, 11, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (208, 1208, 1398)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3778)
[M::mem_pestat] mean and std.dev: (913.00, 978.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4968)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 412, 528)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 946)
[M::mem_pestat] mean and std.dev: (428.14, 162.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1155)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (114, 766, 4411)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13005)
[M::mem_pestat] mean and std.dev: (2075.27, 2718.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17302)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (344, 1287, 1526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3890)
[M::mem_pestat] mean and std.dev: (933.80, 608.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5072)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 435.267 CPU sec, 54.295 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 272530, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 418, 536)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 960)
[M::mem_pestat] mean and std.dev: (434.23, 165.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1172)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 442, 1385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3915)
[M::mem_pestat] mean and std.dev: (981.36, 1269.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6059)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (457, 699, 1510)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3616)
[M::mem_pestat] mean and std.dev: (787.50, 533.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4669)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 421.459 CPU sec, 73.946 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (19, 272667, 16, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (170, 553, 1930)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5450)
[M::mem_pestat] mean and std.dev: (926.53, 1224.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7210)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 416, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 950)
[M::mem_pestat] mean and std.dev: (431.69, 163.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1159)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (566, 1958, 4386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12026)
[M::mem_pestat] mean and std.dev: (2139.06, 1566.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15846)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (372, 691, 788)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1620)
[M::mem_pestat] mean and std.dev: (586.22, 265.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2036)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 587.999 CPU sec, 73.313 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272557, 12, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (795, 998, 1294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2292)
[M::mem_pestat] mean and std.dev: (770.75, 378.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2791)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 416, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 952)
[M::mem_pestat] mean and std.dev: (431.23, 163.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1162)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (160, 1339, 4582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13426)
[M::mem_pestat] mean and std.dev: (2614.67, 3002.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17848)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 649, 5112)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14790)
[M::mem_pestat] mean and std.dev: (2077.93, 2529.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19629)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 447.163 CPU sec, 55.623 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (16, 272567, 9, 17)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (272, 351, 1309)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3383)
[M::mem_pestat] mean and std.dev: (632.20, 597.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4420)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 412, 527)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 943)
[M::mem_pestat] mean and std.dev: (427.42, 162.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1151)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 229, 762)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1994)
[M::mem_pestat] mean and std.dev: (326.40, 242.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2610)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 573.500 CPU sec, 71.602 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 272966, 18, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 413, 528)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 942)
[M::mem_pestat] mean and std.dev: (428.70, 161.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1149)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (66, 1011, 1590)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4638)
[M::mem_pestat] mean and std.dev: (1047.12, 1288.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6202)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (420, 439, 779)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1497)
[M::mem_pestat] mean and std.dev: (552.40, 313.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1856)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 598.241 CPU sec, 74.558 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 271464, 10, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 519, 1181)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2995)
[M::mem_pestat] mean and std.dev: (574.09, 421.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3902)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 408, 521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 927)
[M::mem_pestat] mean and std.dev: (423.38, 157.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1130)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (33, 620, 4110)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12264)
[M::mem_pestat] mean and std.dev: (1477.20, 1849.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16341)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 841, 1094)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2632)
[M::mem_pestat] mean and std.dev: (651.21, 495.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3401)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 446.430 CPU sec, 55.814 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 270570, 13, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (238, 583, 3406)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9742)
[M::mem_pestat] mean and std.dev: (1727.42, 2586.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12910)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (331, 426, 547)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 979)
[M::mem_pestat] mean and std.dev: (443.98, 167.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1195)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (126, 971, 4264)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12540)
[M::mem_pestat] mean and std.dev: (1792.46, 1962.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16678)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (303, 739, 1625)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4269)
[M::mem_pestat] mean and std.dev: (812.27, 791.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5591)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 557.330 CPU sec, 69.438 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 272034, 12, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (206, 354, 1764)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4880)
[M::mem_pestat] mean and std.dev: (1025.31, 1235.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6438)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (332, 428, 551)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 989)
[M::mem_pestat] mean and std.dev: (446.12, 170.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1208)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 982, 3277)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9595)
[M::mem_pestat] mean and std.dev: (1908.00, 2481.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12754)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 629, 1532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4186)
[M::mem_pestat] mean and std.dev: (732.83, 635.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5513)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 568.012 CPU sec, 70.738 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 271973, 11, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (215, 245, 665)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1565)
[M::mem_pestat] mean and std.dev: (323.82, 246.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2015)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (334, 430, 556)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1000)
[M::mem_pestat] mean and std.dev: (449.70, 172.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1222)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (657, 974, 4386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11844)
[M::mem_pestat] mean and std.dev: (1892.73, 2028.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15573)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (416, 698, 2187)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5729)
[M::mem_pestat] mean and std.dev: (1356.67, 1593.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7729)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 543.424 CPU sec, 67.621 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 272603, 20, 15)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (375, 735, 1162)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2736)
[M::mem_pestat] mean and std.dev: (746.85, 447.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3523)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (329, 423, 544)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 974)
[M::mem_pestat] mean and std.dev: (440.96, 167.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1189)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (505, 1217, 3682)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10036)
[M::mem_pestat] mean and std.dev: (2167.40, 2135.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13213)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (439, 529, 1568)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3826)
[M::mem_pestat] mean and std.dev: (887.15, 713.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4955)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 419.542 CPU sec, 52.076 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 272485, 14, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (327, 421, 541)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 969)
[M::mem_pestat] mean and std.dev: (438.30, 166.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1183)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (61, 913, 1514)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4420)
[M::mem_pestat] mean and std.dev: (1190.71, 1379.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6707)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 477, 528)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 942)
[M::mem_pestat] mean and std.dev: (426.11, 168.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1149)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 401.322 CPU sec, 50.511 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 271953, 16, 19)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (305, 575, 741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1613)
[M::mem_pestat] mean and std.dev: (509.54, 364.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2049)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (325, 419, 537)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 961)
[M::mem_pestat] mean and std.dev: (435.58, 165.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1173)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (297, 2278, 6301)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 18309)
[M::mem_pestat] mean and std.dev: (3097.81, 3149.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 24313)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (214, 437, 1109)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2899)
[M::mem_pestat] mean and std.dev: (525.82, 482.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3794)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 422.940 CPU sec, 52.597 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271631, 19, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 416, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 953)
[M::mem_pestat] mean and std.dev: (431.87, 162.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1163)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (767, 1504, 2831)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6959)
[M::mem_pestat] mean and std.dev: (1722.56, 1423.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9023)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 492.625 CPU sec, 61.202 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (17, 272264, 15, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (389, 830, 1405)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3437)
[M::mem_pestat] mean and std.dev: (933.81, 748.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4453)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (324, 416, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 945)
[M::mem_pestat] mean and std.dev: (431.75, 161.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1152)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (98, 859, 2161)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6287)
[M::mem_pestat] mean and std.dev: (938.14, 1008.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8350)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 435.977 CPU sec, 54.203 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 272760, 12, 16)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (332, 427, 551)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 989)
[M::mem_pestat] mean and std.dev: (446.25, 169.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1208)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (547, 1970, 3030)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7996)
[M::mem_pestat] mean and std.dev: (1482.18, 1298.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10479)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (187, 456, 1422)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3892)
[M::mem_pestat] mean and std.dev: (716.80, 789.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5127)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 444.839 CPU sec, 55.346 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272352, 12, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (331, 427, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 985)
[M::mem_pestat] mean and std.dev: (445.13, 169.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1203)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 1304, 2608)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7734)
[M::mem_pestat] mean and std.dev: (1366.17, 1578.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10297)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (276, 842, 2053)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5607)
[M::mem_pestat] mean and std.dev: (929.00, 902.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7384)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 499.179 CPU sec, 62.158 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 272793, 17, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 857, 1504)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4022)
[M::mem_pestat] mean and std.dev: (848.64, 633.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5281)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (328, 423, 544)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 976)
[M::mem_pestat] mean and std.dev: (440.84, 168.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1192)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (172, 624, 4190)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12226)
[M::mem_pestat] mean and std.dev: (1654.41, 1882.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16244)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (156, 296, 460)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1068)
[M::mem_pestat] mean and std.dev: (285.90, 224.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1372)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 407.675 CPU sec, 50.705 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 272490, 10, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (327, 422, 542)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 972)
[M::mem_pestat] mean and std.dev: (438.90, 167.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1187)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (539, 1199, 2742)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7148)
[M::mem_pestat] mean and std.dev: (2175.20, 2291.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11340)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (339, 544, 2935)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8127)
[M::mem_pestat] mean and std.dev: (1291.85, 1274.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10723)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 422.320 CPU sec, 52.497 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272589, 12, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 416, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 953)
[M::mem_pestat] mean and std.dev: (432.04, 164.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1163)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (347, 1280, 1872)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4922)
[M::mem_pestat] mean and std.dev: (1142.42, 951.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6447)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (289, 605, 1568)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4126)
[M::mem_pestat] mean and std.dev: (744.92, 788.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5405)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 423.751 CPU sec, 52.739 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271835, 11, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 415, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 950)
[M::mem_pestat] mean and std.dev: (431.46, 163.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1159)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (413, 1256, 3560)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9854)
[M::mem_pestat] mean and std.dev: (1829.45, 1648.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13001)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 297, 760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1826)
[M::mem_pestat] mean and std.dev: (398.89, 283.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2359)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 408.316 CPU sec, 50.755 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 271565, 11, 18)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (318, 407, 519)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 921)
[M::mem_pestat] mean and std.dev: (421.83, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1122)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (151, 1295, 2419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6955)
[M::mem_pestat] mean and std.dev: (1577.18, 1669.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9223)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 218, 596)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1498)
[M::mem_pestat] mean and std.dev: (334.31, 256.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1949)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 422.860 CPU sec, 52.580 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 269675, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (319, 411, 524)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 934)
[M::mem_pestat] mean and std.dev: (425.45, 159.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1139)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 307, 656)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1614)
[M::mem_pestat] mean and std.dev: (382.07, 285.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2093)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 583.401 CPU sec, 72.659 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 269307, 16, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (249, 488, 932)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2298)
[M::mem_pestat] mean and std.dev: (685.00, 569.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2981)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 414, 529)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 943)
[M::mem_pestat] mean and std.dev: (429.99, 162.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1150)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (34, 523, 2536)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7540)
[M::mem_pestat] mean and std.dev: (1298.62, 1475.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10042)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (284, 604, 1370)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3542)
[M::mem_pestat] mean and std.dev: (728.50, 634.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4628)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 488.539 CPU sec, 60.811 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 270125, 14, 16)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (225, 282, 1475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3975)
[M::mem_pestat] mean and std.dev: (711.70, 687.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5225)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 416, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 955)
[M::mem_pestat] mean and std.dev: (432.26, 164.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1166)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (113, 1298, 4394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12956)
[M::mem_pestat] mean and std.dev: (1786.93, 1896.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17237)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (441, 673, 1013)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2157)
[M::mem_pestat] mean and std.dev: (670.27, 421.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2729)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 454.949 CPU sec, 56.694 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272978, 13, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 1151, 1162)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3124)
[M::mem_pestat] mean and std.dev: (647.33, 479.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4105)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (323, 417, 535)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 959)
[M::mem_pestat] mean and std.dev: (433.40, 164.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1171)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (36, 342, 1833)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5427)
[M::mem_pestat] mean and std.dev: (728.67, 926.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7224)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 662252 reads in 437.102 CPU sec, 54.418 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 272761, 20, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 415, 532)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 952)
[M::mem_pestat] mean and std.dev: (430.75, 163.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1162)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (154, 371, 1980)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5632)
[M::mem_pestat] mean and std.dev: (1070.21, 1504.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7458)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (340, 639, 1033)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2419)
[M::mem_pestat] mean and std.dev: (718.46, 491.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3112)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 424.352 CPU sec, 52.745 real sec
[M::process] read 662252 sequences (100000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 272811, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (325, 443, 1288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3214)
[M::mem_pestat] mean and std.dev: (569.00, 369.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4177)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (322, 415, 531)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 949)
[M::mem_pestat] mean and std.dev: (430.61, 163.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1158)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (647, 2440, 4468)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12110)
[M::mem_pestat] mean and std.dev: (2812.75, 2676.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15931)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 1209, 1666)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4486)
[M::mem_pestat] mean and std.dev: (1206.80, 1008.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5896)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 423.368 CPU sec, 52.718 real sec
[M::process] read 70472 sequences (10641272 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 272693, 18, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (349, 569, 1218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2956)
[M::mem_pestat] mean and std.dev: (879.00, 662.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3825)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (320, 410, 523)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 929)
[M::mem_pestat] mean and std.dev: (425.46, 159.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1132)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (589, 1452, 3630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9712)
[M::mem_pestat] mean and std.dev: (2085.67, 1881.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12753)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (591, 657, 1833)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4317)
[M::mem_pestat] mean and std.dev: (791.22, 571.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5559)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 662252 reads in 402.735 CPU sec, 50.338 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 29001, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (313, 401, 510)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 904)
[M::mem_pestat] mean and std.dev: (414.58, 153.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1101)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 70472 reads in 48.127 CPU sec, 5.995 real sec
[main] Version: 0.7.17-r1188
[main] CMD: /Dedicated/jmichaelson-wdata/bcbio-dna/bin/bwa mem -K 100000000 -v 3 -t 8 -Y -M -R @RG\tID:S28_lane1\tSM:S28\tPL:ILLUMINA\tLB:lib1 /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/bwa/hg38.fa /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_28_lane1_20230820000_S28_L001_R1_001.fastq.gz /Dedicated/jmichaelson-sdata/NDVR/genomics/2023_aug_21/fq/Lowpass_28_lane1_20230820000_S28_L001_R2_001.fastq.gz
[main] Real time: 3835.808 sec; CPU: 28467.689 sec
[bam_sort_core] merging from 20 files and 2 in-memory blocks...
[Tue Jan 16 15:56:00 CST 2024] picard.sam.markduplicates.MarkDuplicates INPUT=[/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted.bam] OUTPUT=/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted_set_marked.bam METRICS_FILE=/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_marked_dup_metrics.txt    MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=50000 MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=8000 SORTING_COLLECTION_SIZE_RATIO=0.25 PROGRAM_RECORD_ID=MarkDuplicates PROGRAM_GROUP_NAME=MarkDuplicates REMOVE_DUPLICATES=false ASSUME_SORTED=false DUPLICATE_SCORING_STRATEGY=SUM_OF_BASE_QUALITIES READ_NAME_REGEX=[a-zA-Z0-9]+:[0-9]:([0-9]+):([0-9]+):([0-9]+).* OPTICAL_DUPLICATE_PIXEL_DISTANCE=100 VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json
[Tue Jan 16 15:56:00 CST 2024] Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux 3.10.0-1160.99.1.el7.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_382-b05; Picard version: 1.141(8ece590411350163e7689e9e77aab8efcb622170_1447695087) IntelDeflater
INFO	2024-01-16 15:56:00	MarkDuplicates	Start of doWork freeMemory: 510837688; totalMemory: 514850816; maxMemory: 954728448
INFO	2024-01-16 15:56:00	MarkDuplicates	Reading input file and constructing read end information.
INFO	2024-01-16 15:56:00	MarkDuplicates	Will retain up to 3672032 data points before spilling to disk.
INFO	2024-01-16 15:56:06	MarkDuplicates	Read     1,000,000 records.  Elapsed time: 00:00:04s.  Time for last 1,000,000:    4s.  Last read position: chr1:71,055,075
INFO	2024-01-16 15:56:06	MarkDuplicates	Tracking 6316 as yet unmatched pairs. 280 records in RAM.
INFO	2024-01-16 15:56:11	MarkDuplicates	Read     2,000,000 records.  Elapsed time: 00:00:09s.  Time for last 1,000,000:    4s.  Last read position: chr1:146,173,564
INFO	2024-01-16 15:56:11	MarkDuplicates	Tracking 11884 as yet unmatched pairs. 318 records in RAM.
INFO	2024-01-16 15:56:15	MarkDuplicates	Read     3,000,000 records.  Elapsed time: 00:00:13s.  Time for last 1,000,000:    4s.  Last read position: chr1:221,345,076
INFO	2024-01-16 15:56:15	MarkDuplicates	Tracking 16886 as yet unmatched pairs. 120 records in RAM.
INFO	2024-01-16 15:56:23	MarkDuplicates	Read     4,000,000 records.  Elapsed time: 00:00:21s.  Time for last 1,000,000:    8s.  Last read position: chr2:40,956,324
INFO	2024-01-16 15:56:23	MarkDuplicates	Tracking 66690 as yet unmatched pairs. 4602 records in RAM.
INFO	2024-01-16 15:56:27	MarkDuplicates	Read     5,000,000 records.  Elapsed time: 00:00:25s.  Time for last 1,000,000:    4s.  Last read position: chr2:115,389,551
INFO	2024-01-16 15:56:27	MarkDuplicates	Tracking 75963 as yet unmatched pairs. 3056 records in RAM.
INFO	2024-01-16 15:56:33	MarkDuplicates	Read     6,000,000 records.  Elapsed time: 00:00:31s.  Time for last 1,000,000:    5s.  Last read position: chr2:193,366,398
INFO	2024-01-16 15:56:33	MarkDuplicates	Tracking 77644 as yet unmatched pairs. 1298 records in RAM.
INFO	2024-01-16 15:56:38	MarkDuplicates	Read     7,000,000 records.  Elapsed time: 00:00:36s.  Time for last 1,000,000:    4s.  Last read position: chr3:26,693,744
INFO	2024-01-16 15:56:38	MarkDuplicates	Tracking 79205 as yet unmatched pairs. 4431 records in RAM.
INFO	2024-01-16 15:56:47	MarkDuplicates	Read     8,000,000 records.  Elapsed time: 00:00:45s.  Time for last 1,000,000:    8s.  Last read position: chr3:99,192,486
INFO	2024-01-16 15:56:47	MarkDuplicates	Tracking 82074 as yet unmatched pairs. 2645 records in RAM.
INFO	2024-01-16 15:56:52	MarkDuplicates	Read     9,000,000 records.  Elapsed time: 00:00:50s.  Time for last 1,000,000:    5s.  Last read position: chr3:176,524,443
INFO	2024-01-16 15:56:52	MarkDuplicates	Tracking 83178 as yet unmatched pairs. 699 records in RAM.
INFO	2024-01-16 15:56:57	MarkDuplicates	Read    10,000,000 records.  Elapsed time: 00:00:55s.  Time for last 1,000,000:    5s.  Last read position: chr4:49,149,396
INFO	2024-01-16 15:56:57	MarkDuplicates	Tracking 106935 as yet unmatched pairs. 8859 records in RAM.
INFO	2024-01-16 15:57:02	MarkDuplicates	Read    11,000,000 records.  Elapsed time: 00:01:00s.  Time for last 1,000,000:    4s.  Last read position: chr4:125,071,617
INFO	2024-01-16 15:57:02	MarkDuplicates	Tracking 112535 as yet unmatched pairs. 1895 records in RAM.
INFO	2024-01-16 15:57:10	MarkDuplicates	Read    12,000,000 records.  Elapsed time: 00:01:08s.  Time for last 1,000,000:    7s.  Last read position: chr5:12,522,572
INFO	2024-01-16 15:57:10	MarkDuplicates	Tracking 115260 as yet unmatched pairs. 12710 records in RAM.
INFO	2024-01-16 15:57:15	MarkDuplicates	Read    13,000,000 records.  Elapsed time: 00:01:13s.  Time for last 1,000,000:    5s.  Last read position: chr5:88,319,278
INFO	2024-01-16 15:57:15	MarkDuplicates	Tracking 121385 as yet unmatched pairs. 3165 records in RAM.
INFO	2024-01-16 15:57:20	MarkDuplicates	Read    14,000,000 records.  Elapsed time: 00:01:18s.  Time for last 1,000,000:    4s.  Last read position: chr5:165,903,564
INFO	2024-01-16 15:57:20	MarkDuplicates	Tracking 121427 as yet unmatched pairs. 600 records in RAM.
INFO	2024-01-16 15:57:28	MarkDuplicates	Read    15,000,000 records.  Elapsed time: 00:01:26s.  Time for last 1,000,000:    8s.  Last read position: chr6:57,891,249
INFO	2024-01-16 15:57:28	MarkDuplicates	Tracking 121777 as yet unmatched pairs. 4164 records in RAM.
INFO	2024-01-16 15:57:33	MarkDuplicates	Read    16,000,000 records.  Elapsed time: 00:01:31s.  Time for last 1,000,000:    5s.  Last read position: chr6:135,956,059
INFO	2024-01-16 15:57:33	MarkDuplicates	Tracking 121270 as yet unmatched pairs. 1279 records in RAM.
INFO	2024-01-16 15:57:38	MarkDuplicates	Read    17,000,000 records.  Elapsed time: 00:01:36s.  Time for last 1,000,000:    4s.  Last read position: chr7:41,052,597
INFO	2024-01-16 15:57:38	MarkDuplicates	Tracking 120885 as yet unmatched pairs. 5204 records in RAM.
INFO	2024-01-16 15:57:44	MarkDuplicates	Read    18,000,000 records.  Elapsed time: 00:01:42s.  Time for last 1,000,000:    5s.  Last read position: chr7:114,414,911
INFO	2024-01-16 15:57:44	MarkDuplicates	Tracking 121566 as yet unmatched pairs. 1879 records in RAM.
INFO	2024-01-16 15:57:50	MarkDuplicates	Read    19,000,000 records.  Elapsed time: 00:01:48s.  Time for last 1,000,000:    6s.  Last read position: chr8:30,147,780
INFO	2024-01-16 15:57:50	MarkDuplicates	Tracking 120840 as yet unmatched pairs. 4569 records in RAM.
INFO	2024-01-16 15:57:56	MarkDuplicates	Read    20,000,000 records.  Elapsed time: 00:01:54s.  Time for last 1,000,000:    5s.  Last read position: chr8:105,597,347
INFO	2024-01-16 15:57:56	MarkDuplicates	Tracking 119916 as yet unmatched pairs. 1549 records in RAM.
INFO	2024-01-16 15:58:04	MarkDuplicates	Read    21,000,000 records.  Elapsed time: 00:02:02s.  Time for last 1,000,000:    7s.  Last read position: chr9:37,271,306
INFO	2024-01-16 15:58:04	MarkDuplicates	Tracking 118926 as yet unmatched pairs. 4317 records in RAM.
INFO	2024-01-16 15:58:09	MarkDuplicates	Read    22,000,000 records.  Elapsed time: 00:02:07s.  Time for last 1,000,000:    5s.  Last read position: chr9:126,414,284
INFO	2024-01-16 15:58:09	MarkDuplicates	Tracking 118473 as yet unmatched pairs. 785 records in RAM.
INFO	2024-01-16 15:58:19	MarkDuplicates	Read    23,000,000 records.  Elapsed time: 00:02:17s.  Time for last 1,000,000:    9s.  Last read position: chr10:56,559,793
INFO	2024-01-16 15:58:19	MarkDuplicates	Tracking 116944 as yet unmatched pairs. 3944 records in RAM.
INFO	2024-01-16 15:58:24	MarkDuplicates	Read    24,000,000 records.  Elapsed time: 00:02:22s.  Time for last 1,000,000:    5s.  Last read position: chr10:130,832,021
INFO	2024-01-16 15:58:24	MarkDuplicates	Tracking 115335 as yet unmatched pairs. 444 records in RAM.
INFO	2024-01-16 15:58:31	MarkDuplicates	Read    25,000,000 records.  Elapsed time: 00:02:29s.  Time for last 1,000,000:    6s.  Last read position: chr11:69,736,598
INFO	2024-01-16 15:58:31	MarkDuplicates	Tracking 115913 as yet unmatched pairs. 2918 records in RAM.
INFO	2024-01-16 15:58:40	MarkDuplicates	Read    26,000,000 records.  Elapsed time: 00:02:38s.  Time for last 1,000,000:    9s.  Last read position: chr12:9,665,885
INFO	2024-01-16 15:58:40	MarkDuplicates	Tracking 113947 as yet unmatched pairs. 7131 records in RAM.
INFO	2024-01-16 15:58:47	MarkDuplicates	Read    27,000,000 records.  Elapsed time: 00:02:45s.  Time for last 1,000,000:    7s.  Last read position: chr12:85,696,077
INFO	2024-01-16 15:58:47	MarkDuplicates	Tracking 111434 as yet unmatched pairs. 2730 records in RAM.
INFO	2024-01-16 15:58:55	MarkDuplicates	Read    28,000,000 records.  Elapsed time: 00:02:53s.  Time for last 1,000,000:    7s.  Last read position: chr13:35,925,190
INFO	2024-01-16 15:58:55	MarkDuplicates	Tracking 109580 as yet unmatched pairs. 3653 records in RAM.
INFO	2024-01-16 15:59:01	MarkDuplicates	Read    29,000,000 records.  Elapsed time: 00:02:59s.  Time for last 1,000,000:    6s.  Last read position: chr14:18,929,144
INFO	2024-01-16 15:59:01	MarkDuplicates	Tracking 107529 as yet unmatched pairs. 5447 records in RAM.
INFO	2024-01-16 15:59:12	MarkDuplicates	Read    30,000,000 records.  Elapsed time: 00:03:10s.  Time for last 1,000,000:   10s.  Last read position: chr14:94,834,629
INFO	2024-01-16 15:59:12	MarkDuplicates	Tracking 104498 as yet unmatched pairs. 1175 records in RAM.
INFO	2024-01-16 15:59:17	MarkDuplicates	Read    31,000,000 records.  Elapsed time: 00:03:15s.  Time for last 1,000,000:    5s.  Last read position: chr15:78,553,806
INFO	2024-01-16 15:59:17	MarkDuplicates	Tracking 101440 as yet unmatched pairs. 1471 records in RAM.
INFO	2024-01-16 15:59:26	MarkDuplicates	Read    32,000,000 records.  Elapsed time: 00:03:24s.  Time for last 1,000,000:    8s.  Last read position: chr16:46,843,016
INFO	2024-01-16 15:59:26	MarkDuplicates	Tracking 98609 as yet unmatched pairs. 3065 records in RAM.
INFO	2024-01-16 15:59:32	MarkDuplicates	Read    33,000,000 records.  Elapsed time: 00:03:30s.  Time for last 1,000,000:    6s.  Last read position: chr17:27,344,510
INFO	2024-01-16 15:59:32	MarkDuplicates	Tracking 94295 as yet unmatched pairs. 4402 records in RAM.
INFO	2024-01-16 15:59:41	MarkDuplicates	Read    34,000,000 records.  Elapsed time: 00:03:39s.  Time for last 1,000,000:    9s.  Last read position: chr18:13,880,476
INFO	2024-01-16 15:59:41	MarkDuplicates	Tracking 91830 as yet unmatched pairs. 3757 records in RAM.
INFO	2024-01-16 15:59:47	MarkDuplicates	Read    35,000,000 records.  Elapsed time: 00:03:45s.  Time for last 1,000,000:    6s.  Last read position: chr19:8,073,745
INFO	2024-01-16 15:59:48	MarkDuplicates	Tracking 87883 as yet unmatched pairs. 5188 records in RAM.
INFO	2024-01-16 15:59:54	MarkDuplicates	Read    36,000,000 records.  Elapsed time: 00:03:52s.  Time for last 1,000,000:    6s.  Last read position: chr20:21,214,814
INFO	2024-01-16 15:59:54	MarkDuplicates	Tracking 82581 as yet unmatched pairs. 12219 records in RAM.
INFO	2024-01-16 16:00:00	MarkDuplicates	Read    37,000,000 records.  Elapsed time: 00:03:58s.  Time for last 1,000,000:    6s.  Last read position: chr21:24,637,395
INFO	2024-01-16 16:00:00	MarkDuplicates	Tracking 74326 as yet unmatched pairs. 1735 records in RAM.
INFO	2024-01-16 16:00:08	MarkDuplicates	Read    38,000,000 records.  Elapsed time: 00:04:06s.  Time for last 1,000,000:    7s.  Last read position: chrX:11,261,645
INFO	2024-01-16 16:00:08	MarkDuplicates	Tracking 67783 as yet unmatched pairs. 10185 records in RAM.
INFO	2024-01-16 16:00:13	MarkDuplicates	Read    39,000,000 records.  Elapsed time: 00:04:11s.  Time for last 1,000,000:    4s.  Last read position: chrX:88,354,199
INFO	2024-01-16 16:00:13	MarkDuplicates	Tracking 62328 as yet unmatched pairs. 4548 records in RAM.
INFO	2024-01-16 16:00:18	MarkDuplicates	Read    40,000,000 records.  Elapsed time: 00:04:16s.  Time for last 1,000,000:    5s.  Last read position: chr1_KI270709v1_random:3,654
INFO	2024-01-16 16:00:18	MarkDuplicates	Tracking 52242 as yet unmatched pairs. 672 records in RAM.
INFO	2024-01-16 16:00:25	MarkDuplicates	Read 40923455 records. 0 pairs never matched.
INFO	2024-01-16 16:00:28	MarkDuplicates	After buildSortedReadEndLists freeMemory: 1036685280; totalMemory: 1047527424; maxMemory: 1047527424
INFO	2024-01-16 16:00:28	MarkDuplicates	Will retain up to 32735232 duplicate indices before spilling to disk.
INFO	2024-01-16 16:00:28	MarkDuplicates	Traversing read pair information and detecting duplicates.
INFO	2024-01-16 16:00:35	MarkDuplicates	Traversing fragment information and detecting duplicates.
INFO	2024-01-16 16:00:45	MarkDuplicates	Sorting list of duplicate records.
INFO	2024-01-16 16:00:45	MarkDuplicates	After generateDuplicateIndexes freeMemory: 785642736; totalMemory: 1058013184; maxMemory: 1058013184
INFO	2024-01-16 16:00:45	MarkDuplicates	Marking 6446031 records as duplicates.
INFO	2024-01-16 16:00:45	MarkDuplicates	Found 1714243 optical duplicate clusters.
INFO	2024-01-16 16:03:13	MarkDuplicates	Written    10,000,000 records.  Elapsed time: 00:02:27s.  Time for last 10,000,000:  147s.  Last read position: chr4:49,149,396
INFO	2024-01-16 16:05:44	MarkDuplicates	Written    20,000,000 records.  Elapsed time: 00:04:58s.  Time for last 10,000,000:  151s.  Last read position: chr8:105,597,347
INFO	2024-01-16 16:08:14	MarkDuplicates	Written    30,000,000 records.  Elapsed time: 00:07:29s.  Time for last 10,000,000:  150s.  Last read position: chr14:94,834,629
INFO	2024-01-16 16:10:49	MarkDuplicates	Written    40,000,000 records.  Elapsed time: 00:10:03s.  Time for last 10,000,000:  154s.  Last read position: chr1_KI270709v1_random:3,654
INFO	2024-01-16 16:11:10	MarkDuplicates	Before output close freeMemory: 1052369944; totalMemory: 1066401792; maxMemory: 1066401792
INFO	2024-01-16 16:11:10	MarkDuplicates	After output close freeMemory: 1052368992; totalMemory: 1066401792; maxMemory: 1066401792
[Tue Jan 16 16:11:10 CST 2024] picard.sam.markduplicates.MarkDuplicates done. Elapsed time: 15.18 minutes.
Runtime.totalMemory()=1066401792
16:11:16.019 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_compression.so
[Tue Jan 16 16:11:16 CST 2024] MarkDuplicates  --INPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted.bam --OUTPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted_set_marked.bam --METRICS_FILE /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_marked_dup_metrics.txt  --MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP 50000 --MAX_FILE_HANDLES_FOR_READ_ENDS_MAP 8000 --SORTING_COLLECTION_SIZE_RATIO 0.25 --TAG_DUPLICATE_SET_MEMBERS false --REMOVE_SEQUENCING_DUPLICATES false --TAGGING_POLICY DontTag --CLEAR_DT true --DUPLEX_UMI false --ADD_PG_TAG_TO_READS true --REMOVE_DUPLICATES false --ASSUME_SORTED false --DUPLICATE_SCORING_STRATEGY SUM_OF_BASE_QUALITIES --PROGRAM_RECORD_ID MarkDuplicates --PROGRAM_GROUP_NAME MarkDuplicates --READ_NAME_REGEX <optimized capture of last three ':' separated fields as numeric values> --OPTICAL_DUPLICATE_PIXEL_DISTANCE 100 --MAX_OPTICAL_DUPLICATE_SET_SIZE 300000 --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false
Jan 16, 2024 4:11:17 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine
INFO: Failed to detect whether we are running on Google Compute Engine.
[Tue Jan 16 16:11:17 CST 2024] Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux 3.10.0-1160.99.1.el7.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_382-b05; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.2.0
INFO	2024-01-16 16:11:17	MarkDuplicates	Start of doWork freeMemory: 1605262096; totalMemory: 1625817088; maxMemory: 19786104832
INFO	2024-01-16 16:11:17	MarkDuplicates	Reading input file and constructing read end information.
INFO	2024-01-16 16:11:17	MarkDuplicates	Will retain up to 71688785 data points before spilling to disk.
INFO	2024-01-16 16:11:23	MarkDuplicates	Read     1,000,000 records.  Elapsed time: 00:00:05s.  Time for last 1,000,000:    5s.  Last read position: chr1:71,055,075
INFO	2024-01-16 16:11:23	MarkDuplicates	Tracking 6316 as yet unmatched pairs. 280 records in RAM.
INFO	2024-01-16 16:11:27	MarkDuplicates	Read     2,000,000 records.  Elapsed time: 00:00:09s.  Time for last 1,000,000:    4s.  Last read position: chr1:146,173,564
INFO	2024-01-16 16:11:27	MarkDuplicates	Tracking 11884 as yet unmatched pairs. 318 records in RAM.
INFO	2024-01-16 16:11:31	MarkDuplicates	Read     3,000,000 records.  Elapsed time: 00:00:13s.  Time for last 1,000,000:    4s.  Last read position: chr1:221,345,076
INFO	2024-01-16 16:11:31	MarkDuplicates	Tracking 16886 as yet unmatched pairs. 120 records in RAM.
INFO	2024-01-16 16:11:35	MarkDuplicates	Read     4,000,000 records.  Elapsed time: 00:00:17s.  Time for last 1,000,000:    4s.  Last read position: chr2:40,956,324
INFO	2024-01-16 16:11:35	MarkDuplicates	Tracking 66690 as yet unmatched pairs. 4602 records in RAM.
INFO	2024-01-16 16:11:40	MarkDuplicates	Read     5,000,000 records.  Elapsed time: 00:00:22s.  Time for last 1,000,000:    4s.  Last read position: chr2:115,389,551
INFO	2024-01-16 16:11:40	MarkDuplicates	Tracking 75963 as yet unmatched pairs. 3056 records in RAM.
INFO	2024-01-16 16:11:43	MarkDuplicates	Read     6,000,000 records.  Elapsed time: 00:00:25s.  Time for last 1,000,000:    3s.  Last read position: chr2:193,366,398
INFO	2024-01-16 16:11:43	MarkDuplicates	Tracking 77644 as yet unmatched pairs. 1298 records in RAM.
INFO	2024-01-16 16:11:47	MarkDuplicates	Read     7,000,000 records.  Elapsed time: 00:00:30s.  Time for last 1,000,000:    4s.  Last read position: chr3:26,693,744
INFO	2024-01-16 16:11:48	MarkDuplicates	Tracking 79205 as yet unmatched pairs. 4431 records in RAM.
INFO	2024-01-16 16:11:52	MarkDuplicates	Read     8,000,000 records.  Elapsed time: 00:00:34s.  Time for last 1,000,000:    4s.  Last read position: chr3:99,192,486
INFO	2024-01-16 16:11:52	MarkDuplicates	Tracking 82074 as yet unmatched pairs. 2645 records in RAM.
INFO	2024-01-16 16:11:56	MarkDuplicates	Read     9,000,000 records.  Elapsed time: 00:00:38s.  Time for last 1,000,000:    4s.  Last read position: chr3:176,524,443
INFO	2024-01-16 16:11:56	MarkDuplicates	Tracking 83178 as yet unmatched pairs. 699 records in RAM.
INFO	2024-01-16 16:12:01	MarkDuplicates	Read    10,000,000 records.  Elapsed time: 00:00:43s.  Time for last 1,000,000:    4s.  Last read position: chr4:49,149,396
INFO	2024-01-16 16:12:01	MarkDuplicates	Tracking 106935 as yet unmatched pairs. 8859 records in RAM.
INFO	2024-01-16 16:12:04	MarkDuplicates	Read    11,000,000 records.  Elapsed time: 00:00:46s.  Time for last 1,000,000:    3s.  Last read position: chr4:125,071,617
INFO	2024-01-16 16:12:04	MarkDuplicates	Tracking 112535 as yet unmatched pairs. 1895 records in RAM.
INFO	2024-01-16 16:12:09	MarkDuplicates	Read    12,000,000 records.  Elapsed time: 00:00:51s.  Time for last 1,000,000:    4s.  Last read position: chr5:12,522,572
INFO	2024-01-16 16:12:09	MarkDuplicates	Tracking 115260 as yet unmatched pairs. 12710 records in RAM.
INFO	2024-01-16 16:12:13	MarkDuplicates	Read    13,000,000 records.  Elapsed time: 00:00:55s.  Time for last 1,000,000:    3s.  Last read position: chr5:88,319,278
INFO	2024-01-16 16:12:13	MarkDuplicates	Tracking 121385 as yet unmatched pairs. 3165 records in RAM.
INFO	2024-01-16 16:12:23	MarkDuplicates	Read    14,000,000 records.  Elapsed time: 00:01:05s.  Time for last 1,000,000:    9s.  Last read position: chr5:165,903,564
INFO	2024-01-16 16:12:23	MarkDuplicates	Tracking 121427 as yet unmatched pairs. 600 records in RAM.
INFO	2024-01-16 16:12:26	MarkDuplicates	Read    15,000,000 records.  Elapsed time: 00:01:08s.  Time for last 1,000,000:    3s.  Last read position: chr6:57,891,249
INFO	2024-01-16 16:12:26	MarkDuplicates	Tracking 121777 as yet unmatched pairs. 4164 records in RAM.
INFO	2024-01-16 16:12:31	MarkDuplicates	Read    16,000,000 records.  Elapsed time: 00:01:13s.  Time for last 1,000,000:    4s.  Last read position: chr6:135,956,059
INFO	2024-01-16 16:12:31	MarkDuplicates	Tracking 121270 as yet unmatched pairs. 1279 records in RAM.
INFO	2024-01-16 16:12:34	MarkDuplicates	Read    17,000,000 records.  Elapsed time: 00:01:17s.  Time for last 1,000,000:    3s.  Last read position: chr7:41,052,597
INFO	2024-01-16 16:12:34	MarkDuplicates	Tracking 120885 as yet unmatched pairs. 5204 records in RAM.
INFO	2024-01-16 16:12:39	MarkDuplicates	Read    18,000,000 records.  Elapsed time: 00:01:21s.  Time for last 1,000,000:    4s.  Last read position: chr7:114,414,911
INFO	2024-01-16 16:12:39	MarkDuplicates	Tracking 121566 as yet unmatched pairs. 1879 records in RAM.
INFO	2024-01-16 16:12:43	MarkDuplicates	Read    19,000,000 records.  Elapsed time: 00:01:25s.  Time for last 1,000,000:    3s.  Last read position: chr8:30,147,780
INFO	2024-01-16 16:12:43	MarkDuplicates	Tracking 120840 as yet unmatched pairs. 4569 records in RAM.
INFO	2024-01-16 16:12:47	MarkDuplicates	Read    20,000,000 records.  Elapsed time: 00:01:29s.  Time for last 1,000,000:    4s.  Last read position: chr8:105,597,347
INFO	2024-01-16 16:12:47	MarkDuplicates	Tracking 119916 as yet unmatched pairs. 1549 records in RAM.
INFO	2024-01-16 16:12:51	MarkDuplicates	Read    21,000,000 records.  Elapsed time: 00:01:33s.  Time for last 1,000,000:    3s.  Last read position: chr9:37,271,306
INFO	2024-01-16 16:12:51	MarkDuplicates	Tracking 118926 as yet unmatched pairs. 4317 records in RAM.
INFO	2024-01-16 16:12:56	MarkDuplicates	Read    22,000,000 records.  Elapsed time: 00:01:38s.  Time for last 1,000,000:    4s.  Last read position: chr9:126,414,284
INFO	2024-01-16 16:12:56	MarkDuplicates	Tracking 118473 as yet unmatched pairs. 785 records in RAM.
INFO	2024-01-16 16:13:00	MarkDuplicates	Read    23,000,000 records.  Elapsed time: 00:01:42s.  Time for last 1,000,000:    4s.  Last read position: chr10:56,559,793
INFO	2024-01-16 16:13:00	MarkDuplicates	Tracking 116944 as yet unmatched pairs. 3944 records in RAM.
INFO	2024-01-16 16:13:04	MarkDuplicates	Read    24,000,000 records.  Elapsed time: 00:01:46s.  Time for last 1,000,000:    4s.  Last read position: chr10:130,832,021
INFO	2024-01-16 16:13:04	MarkDuplicates	Tracking 115335 as yet unmatched pairs. 444 records in RAM.
INFO	2024-01-16 16:13:08	MarkDuplicates	Read    25,000,000 records.  Elapsed time: 00:01:50s.  Time for last 1,000,000:    3s.  Last read position: chr11:69,736,598
INFO	2024-01-16 16:13:08	MarkDuplicates	Tracking 115913 as yet unmatched pairs. 2918 records in RAM.
INFO	2024-01-16 16:13:13	MarkDuplicates	Read    26,000,000 records.  Elapsed time: 00:01:55s.  Time for last 1,000,000:    4s.  Last read position: chr12:9,665,885
INFO	2024-01-16 16:13:13	MarkDuplicates	Tracking 113947 as yet unmatched pairs. 7131 records in RAM.
INFO	2024-01-16 16:13:16	MarkDuplicates	Read    27,000,000 records.  Elapsed time: 00:01:58s.  Time for last 1,000,000:    3s.  Last read position: chr12:85,696,077
INFO	2024-01-16 16:13:16	MarkDuplicates	Tracking 111434 as yet unmatched pairs. 2730 records in RAM.
INFO	2024-01-16 16:13:21	MarkDuplicates	Read    28,000,000 records.  Elapsed time: 00:02:03s.  Time for last 1,000,000:    4s.  Last read position: chr13:35,925,190
INFO	2024-01-16 16:13:21	MarkDuplicates	Tracking 109580 as yet unmatched pairs. 3653 records in RAM.
INFO	2024-01-16 16:13:25	MarkDuplicates	Read    29,000,000 records.  Elapsed time: 00:02:07s.  Time for last 1,000,000:    4s.  Last read position: chr14:18,929,144
INFO	2024-01-16 16:13:25	MarkDuplicates	Tracking 107529 as yet unmatched pairs. 5447 records in RAM.
INFO	2024-01-16 16:13:29	MarkDuplicates	Read    30,000,000 records.  Elapsed time: 00:02:11s.  Time for last 1,000,000:    3s.  Last read position: chr14:94,834,629
INFO	2024-01-16 16:13:29	MarkDuplicates	Tracking 104498 as yet unmatched pairs. 1175 records in RAM.
INFO	2024-01-16 16:13:49	MarkDuplicates	Read    31,000,000 records.  Elapsed time: 00:02:31s.  Time for last 1,000,000:   19s.  Last read position: chr15:78,553,806
INFO	2024-01-16 16:13:49	MarkDuplicates	Tracking 101440 as yet unmatched pairs. 1471 records in RAM.
INFO	2024-01-16 16:13:53	MarkDuplicates	Read    32,000,000 records.  Elapsed time: 00:02:35s.  Time for last 1,000,000:    3s.  Last read position: chr16:46,843,016
INFO	2024-01-16 16:13:53	MarkDuplicates	Tracking 98609 as yet unmatched pairs. 3065 records in RAM.
INFO	2024-01-16 16:13:57	MarkDuplicates	Read    33,000,000 records.  Elapsed time: 00:02:39s.  Time for last 1,000,000:    4s.  Last read position: chr17:27,344,510
INFO	2024-01-16 16:13:57	MarkDuplicates	Tracking 94295 as yet unmatched pairs. 4402 records in RAM.
INFO	2024-01-16 16:14:01	MarkDuplicates	Read    34,000,000 records.  Elapsed time: 00:02:43s.  Time for last 1,000,000:    3s.  Last read position: chr18:13,880,476
INFO	2024-01-16 16:14:01	MarkDuplicates	Tracking 91830 as yet unmatched pairs. 3757 records in RAM.
INFO	2024-01-16 16:14:06	MarkDuplicates	Read    35,000,000 records.  Elapsed time: 00:02:48s.  Time for last 1,000,000:    4s.  Last read position: chr19:8,073,745
INFO	2024-01-16 16:14:06	MarkDuplicates	Tracking 87883 as yet unmatched pairs. 5188 records in RAM.
INFO	2024-01-16 16:14:10	MarkDuplicates	Read    36,000,000 records.  Elapsed time: 00:02:52s.  Time for last 1,000,000:    4s.  Last read position: chr20:21,214,814
INFO	2024-01-16 16:14:10	MarkDuplicates	Tracking 82581 as yet unmatched pairs. 12219 records in RAM.
INFO	2024-01-16 16:14:15	MarkDuplicates	Read    37,000,000 records.  Elapsed time: 00:02:57s.  Time for last 1,000,000:    4s.  Last read position: chr21:24,637,395
INFO	2024-01-16 16:14:15	MarkDuplicates	Tracking 74326 as yet unmatched pairs. 1735 records in RAM.
INFO	2024-01-16 16:14:19	MarkDuplicates	Read    38,000,000 records.  Elapsed time: 00:03:01s.  Time for last 1,000,000:    4s.  Last read position: chrX:11,261,645
INFO	2024-01-16 16:14:19	MarkDuplicates	Tracking 67783 as yet unmatched pairs. 10185 records in RAM.
INFO	2024-01-16 16:14:23	MarkDuplicates	Read    39,000,000 records.  Elapsed time: 00:03:05s.  Time for last 1,000,000:    4s.  Last read position: chrX:88,354,199
INFO	2024-01-16 16:14:23	MarkDuplicates	Tracking 62328 as yet unmatched pairs. 4548 records in RAM.
INFO	2024-01-16 16:14:27	MarkDuplicates	Read    40,000,000 records.  Elapsed time: 00:03:10s.  Time for last 1,000,000:    4s.  Last read position: chr1_KI270709v1_random:3,654
INFO	2024-01-16 16:14:27	MarkDuplicates	Tracking 52242 as yet unmatched pairs. 672 records in RAM.
INFO	2024-01-16 16:14:34	MarkDuplicates	Read 40923455 records. 0 pairs never matched.
INFO	2024-01-16 16:14:51	MarkDuplicates	After buildSortedReadEndLists freeMemory: 7473463000; totalMemory: 12503744512; maxMemory: 19786104832
INFO	2024-01-16 16:14:51	MarkDuplicates	Will retain up to 618315776 duplicate indices before spilling to disk.
INFO	2024-01-16 16:14:52	MarkDuplicates	Traversing read pair information and detecting duplicates.
INFO	2024-01-16 16:15:13	MarkDuplicates	Traversing fragment information and detecting duplicates.
INFO	2024-01-16 16:15:14	MarkDuplicates	Sorting list of duplicate records.
INFO	2024-01-16 16:15:15	MarkDuplicates	After generateDuplicateIndexes freeMemory: 14649281600; totalMemory: 19706413056; maxMemory: 19786104832
INFO	2024-01-16 16:15:15	MarkDuplicates	Marking 6446031 records as duplicates.
INFO	2024-01-16 16:15:15	MarkDuplicates	Found 359980 optical duplicate clusters.
INFO	2024-01-16 16:15:15	MarkDuplicates	Reads are assumed to be ordered by: coordinate
INFO	2024-01-16 16:16:14	MarkDuplicates	Written    10,000,000 records.  Elapsed time: 00:00:57s.  Time for last 10,000,000:   57s.  Last read position: chr4:49,149,396
INFO	2024-01-16 16:17:09	MarkDuplicates	Written    20,000,000 records.  Elapsed time: 00:01:52s.  Time for last 10,000,000:   55s.  Last read position: chr8:105,597,347
INFO	2024-01-16 16:18:08	MarkDuplicates	Written    30,000,000 records.  Elapsed time: 00:02:51s.  Time for last 10,000,000:   58s.  Last read position: chr14:94,834,629
INFO	2024-01-16 16:19:04	MarkDuplicates	Written    40,000,000 records.  Elapsed time: 00:03:47s.  Time for last 10,000,000:   56s.  Last read position: chr1_KI270709v1_random:3,654
INFO	2024-01-16 16:19:09	MarkDuplicates	Before output close freeMemory: 11820761720; totalMemory: 20341850112; maxMemory: 20341850112
INFO	2024-01-16 16:19:16	MarkDuplicates	After output close freeMemory: 20195450912; totalMemory: 20294139904; maxMemory: 20294139904
[Tue Jan 16 16:19:16 CST 2024] picard.sam.markduplicates.MarkDuplicates done. Elapsed time: 8.01 minutes.
Runtime.totalMemory()=20294139904
Tool returned:
0
Using GATK jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar MarkDuplicates --INPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted.bam --OUTPUT /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted_set_marked.bam --METRICS_FILE /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_marked_dup_metrics.txt
16:19:24.276 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_compression.so
Jan 16, 2024 4:19:25 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine
INFO: Failed to detect whether we are running on Google Compute Engine.
16:19:25.912 INFO  BaseRecalibrator - ------------------------------------------------------------
16:19:25.913 INFO  BaseRecalibrator - The Genome Analysis Toolkit (GATK) v4.1.2.0
16:19:25.913 INFO  BaseRecalibrator - For support and documentation go to https://software.broadinstitute.org/gatk/
16:19:25.913 INFO  BaseRecalibrator - Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux v3.10.0-1160.99.1.el7.x86_64 amd64
16:19:25.913 INFO  BaseRecalibrator - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_382-b05
16:19:25.913 INFO  BaseRecalibrator - Start Date/Time: January 16, 2024 4:19:24 PM CST
16:19:25.913 INFO  BaseRecalibrator - ------------------------------------------------------------
16:19:25.913 INFO  BaseRecalibrator - ------------------------------------------------------------
16:19:25.913 INFO  BaseRecalibrator - HTSJDK Version: 2.19.0
16:19:25.913 INFO  BaseRecalibrator - Picard Version: 2.19.0
16:19:25.914 INFO  BaseRecalibrator - HTSJDK Defaults.COMPRESSION_LEVEL : 2
16:19:25.914 INFO  BaseRecalibrator - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false
16:19:25.914 INFO  BaseRecalibrator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true
16:19:25.914 INFO  BaseRecalibrator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false
16:19:25.914 INFO  BaseRecalibrator - Deflater: IntelDeflater
16:19:25.914 INFO  BaseRecalibrator - Inflater: IntelInflater
16:19:25.914 INFO  BaseRecalibrator - GCS max retries/reopens: 20
16:19:25.914 INFO  BaseRecalibrator - Requester pays: disabled
16:19:25.914 INFO  BaseRecalibrator - Initializing engine
16:19:27.261 INFO  FeatureManager - Using codec VCFCodec to read file file:///Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.dbsnp138.vcf.gz
16:19:27.474 INFO  FeatureManager - Using codec VCFCodec to read file file:///Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.known_indels.vcf.gz
16:19:27.674 INFO  BaseRecalibrator - Done initializing engine
16:19:27.678 INFO  BaseRecalibrationEngine - The covariates being used here: 
16:19:27.678 INFO  BaseRecalibrationEngine - 	ReadGroupCovariate
16:19:27.678 INFO  BaseRecalibrationEngine - 	QualityScoreCovariate
16:19:27.678 INFO  BaseRecalibrationEngine - 	ContextCovariate
16:19:27.678 INFO  BaseRecalibrationEngine - 	CycleCovariate
16:19:27.754 INFO  ProgressMeter - Starting traversal
16:19:27.755 INFO  ProgressMeter -        Current Locus  Elapsed Minutes       Reads Processed     Reads/Minute
16:19:37.795 INFO  ProgressMeter -        chr1:12148032              0.2                141000         842713.4
16:19:47.801 INFO  ProgressMeter -        chr1:24769738              0.3                292000         874033.4
16:19:57.831 INFO  ProgressMeter -        chr1:38223159              0.5                453000         903740.6
16:20:07.877 INFO  ProgressMeter -        chr1:51902716              0.7                611000         913735.9
16:20:17.926 INFO  ProgressMeter -        chr1:65410137              0.8                762000         911301.6
16:20:27.963 INFO  ProgressMeter -        chr1:78468674              1.0                897000         893901.1
16:20:37.966 INFO  ProgressMeter -        chr1:92612186              1.2               1046000         893877.0
16:20:48.021 INFO  ProgressMeter -       chr1:106892885              1.3               1191000         890289.8
16:20:58.043 INFO  ProgressMeter -       chr1:122615967              1.5               1353000         899122.8
16:21:08.074 INFO  ProgressMeter -       chr1:154879685              1.7               1582000         946181.7
16:21:18.142 INFO  ProgressMeter -       chr1:167842667              1.8               1729000         939784.6
16:21:28.167 INFO  ProgressMeter -       chr1:180869342              2.0               1872000         932797.4
16:21:38.179 INFO  ProgressMeter -       chr1:194882490              2.2               2016000         927436.7
16:21:48.292 INFO  ProgressMeter -       chr1:207519332              2.3               2156000         920469.3
16:21:58.357 INFO  ProgressMeter -       chr1:217950253              2.5               2270000         904370.5
16:22:08.379 INFO  ProgressMeter -       chr1:231393149              2.7               2420000         903974.5
16:22:18.414 INFO  ProgressMeter -       chr1:244366919              2.8               2564000         901446.7
16:22:28.460 INFO  ProgressMeter -         chr2:7386428              3.0               2696000         895160.6
16:22:38.511 INFO  ProgressMeter -        chr2:20872362              3.2               2844000         894550.6
16:22:48.605 INFO  ProgressMeter -        chr2:33271522              3.3               3017000         901269.6
16:22:58.652 INFO  ProgressMeter -        chr2:45833411              3.5               3154000         897310.1
16:23:08.697 INFO  ProgressMeter -        chr2:58801979              3.7               3292000         893990.3
16:23:18.737 INFO  ProgressMeter -        chr2:72400865              3.8               3443000         894355.4
16:23:28.747 INFO  ProgressMeter -        chr2:85681467              4.0               3584000         892311.8
16:23:38.754 INFO  ProgressMeter -       chr2:103709478              4.2               3763000         899525.5
16:23:48.770 INFO  ProgressMeter -       chr2:118335792              4.4               3914000         899721.9
16:23:58.783 INFO  ProgressMeter -       chr2:131319808              4.5               4057000         898139.3
16:24:08.799 INFO  ProgressMeter -       chr2:144891469              4.7               4200000         896656.8
16:24:18.833 INFO  ProgressMeter -       chr2:159139965              4.9               4349000         896460.7
16:24:28.885 INFO  ProgressMeter -       chr2:173204911              5.0               4498000         896224.2
16:24:38.938 INFO  ProgressMeter -       chr2:187119743              5.2               4642000         895038.9
16:24:48.984 INFO  ProgressMeter -       chr2:201996154              5.4               4796000         895809.5
16:24:59.013 INFO  ProgressMeter -       chr2:216093684              5.5               4945000         895679.2
16:25:09.048 INFO  ProgressMeter -       chr2:229571530              5.7               5094000         895535.5
16:25:19.048 INFO  ProgressMeter -       chr2:241796893              5.9               5237000         894467.0
16:25:29.115 INFO  ProgressMeter -        chr3:11854527              6.0               5371000         891797.7
16:25:39.144 INFO  ProgressMeter -        chr3:25145181              6.2               5516000         891141.1
16:25:49.149 INFO  ProgressMeter -        chr3:38600463              6.4               5661000         890577.4
16:25:59.176 INFO  ProgressMeter -        chr3:52573736              6.5               5824000         892749.5
16:26:09.175 INFO  ProgressMeter -        chr3:65439168              6.7               5966000         891734.3
16:26:19.206 INFO  ProgressMeter -        chr3:78723993              6.9               6109000         890847.3
16:26:29.255 INFO  ProgressMeter -        chr3:94876508              7.0               6267000         892101.8
16:26:39.320 INFO  ProgressMeter -       chr3:108979322              7.2               6412000         891455.3
16:26:49.349 INFO  ProgressMeter -       chr3:123067844              7.4               6562000         891588.2
16:26:59.361 INFO  ProgressMeter -       chr3:136396758              7.5               6713000         891883.6
16:27:09.372 INFO  ProgressMeter -       chr3:150483475              7.7               6864000         892168.2
16:27:19.381 INFO  ProgressMeter -       chr3:164657864              7.9               7012000         892076.0
16:27:29.418 INFO  ProgressMeter -       chr3:178708125              8.0               7158000         891660.8
16:27:39.461 INFO  ProgressMeter -       chr3:192168379              8.2               7307000         891630.4
16:27:49.472 INFO  ProgressMeter -         chr4:5921279              8.4               7446000         890462.2
16:27:59.530 INFO  ProgressMeter -        chr4:18533010              8.5               7584000         889140.7
16:28:09.594 INFO  ProgressMeter -        chr4:32063846              8.7               7725000         888205.0
16:28:19.626 INFO  ProgressMeter -        chr4:44862957              8.9               7859000         886568.4
16:28:29.663 INFO  ProgressMeter -        chr4:57717262              9.0               8024000         888418.1
16:28:39.705 INFO  ProgressMeter -        chr4:71215641              9.2               8157000         886710.8
16:28:49.734 INFO  ProgressMeter -        chr4:80602424              9.4               8256000         881456.4
16:28:59.794 INFO  ProgressMeter -        chr4:94966571              9.5               8406000         881689.7
16:29:09.851 INFO  ProgressMeter -       chr4:109550245              9.7               8558000         882122.5
16:29:19.874 INFO  ProgressMeter -       chr4:123847264              9.9               8704000         881986.4
16:29:29.934 INFO  ProgressMeter -       chr4:138326977             10.0               8848000         881598.3
16:29:39.969 INFO  ProgressMeter -       chr4:152767554             10.2               9003000         882344.3
16:29:50.037 INFO  ProgressMeter -       chr4:166602096             10.4               9145000         881754.6
16:30:00.077 INFO  ProgressMeter -       chr4:180541987             10.5               9286000         881133.3
16:30:10.128 INFO  ProgressMeter -         chr5:2217457             10.7               9421000         879956.0
16:30:20.184 INFO  ProgressMeter -        chr5:15380103             10.9               9563000         879452.0
16:30:30.243 INFO  ProgressMeter -        chr5:29292103             11.0               9704000         878868.7
16:30:40.300 INFO  ProgressMeter -        chr5:42855964             11.2               9851000         878840.8
16:30:50.309 INFO  ProgressMeter -        chr5:58671405             11.4              10021000         880897.3
16:31:00.318 INFO  ProgressMeter -        chr5:74589631             11.5              10177000         881681.5
16:31:10.344 INFO  ProgressMeter -        chr5:88932495             11.7              10328000         881995.0
16:31:20.375 INFO  ProgressMeter -       chr5:103910243             11.9              10481000         882461.9
16:31:30.422 INFO  ProgressMeter -       chr5:117181388             12.0              10617000         881484.8
16:31:40.465 INFO  ProgressMeter -       chr5:130836685             12.2              10759000         881030.7
16:31:50.465 INFO  ProgressMeter -       chr5:144864562             12.4              10919000         882094.0
16:32:00.487 INFO  ProgressMeter -       chr5:158397431             12.5              11068000         882226.3
16:32:10.546 INFO  ProgressMeter -       chr5:172142612             12.7              11217000         882312.5
16:32:20.610 INFO  ProgressMeter -         chr6:3715184             12.9              11367000         882468.3
16:32:30.633 INFO  ProgressMeter -        chr6:16008588             13.0              11505000         881746.6
16:32:40.685 INFO  ProgressMeter -        chr6:29352040             13.2              11651000         881616.3
16:32:50.735 INFO  ProgressMeter -        chr6:40921425             13.4              11785000         880594.8
16:33:00.806 INFO  ProgressMeter -        chr6:54587928             13.6              11936000         880830.4
16:33:10.852 INFO  ProgressMeter -        chr6:70178114             13.7              12077000         880358.0
16:33:20.870 INFO  ProgressMeter -        chr6:84069349             13.9              12221000         880142.6
16:33:30.895 INFO  ProgressMeter -        chr6:98359647             14.1              12368000         880138.5
16:33:40.904 INFO  ProgressMeter -       chr6:112649620             14.2              12520000         880502.7
16:33:50.953 INFO  ProgressMeter -       chr6:127251876             14.4              12670000         880678.6
16:34:00.956 INFO  ProgressMeter -       chr6:141141132             14.6              12818000         880759.4
16:34:11.000 INFO  ProgressMeter -       chr6:154616656             14.7              12962000         880525.8
16:34:21.032 INFO  ProgressMeter -       chr6:167413624             14.9              13104000         880174.9
16:34:31.094 INFO  ProgressMeter -         chr7:8119685             15.1              13238000         879271.2
16:34:41.151 INFO  ProgressMeter -        chr7:20966624             15.2              13369000         878195.2
16:34:51.167 INFO  ProgressMeter -        chr7:28189474             15.4              13448000         873802.8
16:35:01.185 INFO  ProgressMeter -        chr7:41865470             15.6              13596000         873938.1
16:35:11.216 INFO  ProgressMeter -        chr7:55197533             15.7              13741000         873867.6
16:35:21.287 INFO  ProgressMeter -        chr7:65568994             15.9              13823000         869797.8
16:35:31.298 INFO  ProgressMeter -        chr7:79559888             16.1              13981000         870599.4
16:35:41.329 INFO  ProgressMeter -        chr7:94095712             16.2              14128000         870688.8
16:35:51.383 INFO  ProgressMeter -       chr7:107741198             16.4              14284000         871305.0
16:36:01.403 INFO  ProgressMeter -       chr7:122678220             16.6              14436000         871697.0
16:36:11.443 INFO  ProgressMeter -       chr7:136717089             16.7              14590000         872183.4
16:36:21.525 INFO  ProgressMeter -       chr7:150622365             16.9              14740000         872387.2
16:36:31.528 INFO  ProgressMeter -         chr8:1783024             17.1              14859000         870837.6
16:36:41.599 INFO  ProgressMeter -        chr8:12676282             17.2              14972000         868912.5
16:36:51.660 INFO  ProgressMeter -        chr8:24022807             17.4              15097000         867723.5
16:37:01.705 INFO  ProgressMeter -        chr8:37699836             17.6              15248000         868048.8
16:37:11.734 INFO  ProgressMeter -        chr8:52928087             17.7              15399000         868381.8
16:37:21.790 INFO  ProgressMeter -        chr8:67139940             17.9              15551000         868742.6
16:37:31.816 INFO  ProgressMeter -        chr8:80574814             18.1              15692000         868512.0
16:37:41.837 INFO  ProgressMeter -        chr8:95021101             18.2              15841000         868728.3
16:37:51.855 INFO  ProgressMeter -       chr8:109252110             18.4              15994000         869160.4
16:38:01.893 INFO  ProgressMeter -       chr8:123708400             18.6              16144000         869407.6
16:38:11.899 INFO  ProgressMeter -       chr8:136754774             18.7              16287000         869301.4
16:38:21.965 INFO  ProgressMeter -         chr9:3712289             18.9              16425000         868886.7
16:38:31.978 INFO  ProgressMeter -        chr9:13844859             19.1              16531000         866841.5
16:38:42.014 INFO  ProgressMeter -        chr9:26375273             19.2              16663000         866166.8
16:38:52.049 INFO  ProgressMeter -        chr9:40986452             19.4              16814000         866482.2
16:39:02.088 INFO  ProgressMeter -        chr9:77758600             19.6              16984000         867761.4
16:39:12.132 INFO  ProgressMeter -        chr9:91469457             19.7              17135000         868051.3
16:39:22.190 INFO  ProgressMeter -        chr9:97079368             19.9              17200000         864006.8
16:39:32.246 INFO  ProgressMeter -       chr9:110894314             20.1              17349000         864215.7
16:39:42.296 INFO  ProgressMeter -       chr9:124743126             20.2              17505000         864771.1
16:39:52.330 INFO  ProgressMeter -       chr9:137011435             20.4              17657000         865133.5
16:40:02.370 INFO  ProgressMeter -       chr10:11233690             20.6              17797000         864901.2
16:40:12.391 INFO  ProgressMeter -       chr10:24176849             20.7              17942000         864927.6
16:40:22.434 INFO  ProgressMeter -       chr10:37423838             20.9              18090000         865081.8
16:40:32.459 INFO  ProgressMeter -       chr10:52751254             21.1              18252000         865919.7
16:40:42.477 INFO  ProgressMeter -       chr10:66653350             21.2              18395000         865835.8
16:40:52.532 INFO  ProgressMeter -       chr10:80383506             21.4              18553000         866438.3
16:41:02.552 INFO  ProgressMeter -       chr10:94519493             21.6              18706000         866823.8
16:41:12.586 INFO  ProgressMeter -      chr10:108258669             21.7              18862000         867330.7
16:41:22.630 INFO  ProgressMeter -      chr10:121704542             21.9              19011000         867504.5
16:41:32.679 INFO  ProgressMeter -      chr10:133504299             22.1              19148000         867129.6
16:41:42.726 INFO  ProgressMeter -       chr11:11017614             22.2              19276000         866355.9
16:41:52.764 INFO  ProgressMeter -       chr11:23414559             22.4              19412000         865957.7
16:42:02.825 INFO  ProgressMeter -       chr11:36219121             22.6              19548000         865549.4
16:42:12.851 INFO  ProgressMeter -       chr11:48567113             22.8              19682000         865082.6
16:42:22.856 INFO  ProgressMeter -       chr11:62843900             22.9              19810000         864372.9
16:42:32.913 INFO  ProgressMeter -       chr11:74792069             23.1              19954000         864334.6
16:42:42.951 INFO  ProgressMeter -       chr11:87258344             23.3              20090000         863964.6
16:42:53.026 INFO  ProgressMeter -      chr11:100122690             23.4              20222000         863406.4
16:43:03.047 INFO  ProgressMeter -      chr11:112985066             23.6              20359000         863101.0
16:43:13.054 INFO  ProgressMeter -      chr11:125266502             23.8              20500000         862976.8
16:43:23.064 INFO  ProgressMeter -        chr12:2404184             23.9              20639000         862768.9
16:43:33.090 INFO  ProgressMeter -       chr12:14413628             24.1              20774000         862388.3
16:43:43.161 INFO  ProgressMeter -       chr12:27281401             24.3              20909000         861986.9
16:43:53.160 INFO  ProgressMeter -       chr12:40725182             24.4              21037000         861345.5
16:44:03.173 INFO  ProgressMeter -       chr12:53226520             24.6              21177000         861193.2
16:44:13.177 INFO  ProgressMeter -       chr12:66135435             24.8              21320000         861169.4
16:44:23.235 INFO  ProgressMeter -       chr12:80362540             24.9              21469000         861355.6
16:44:33.257 INFO  ProgressMeter -       chr12:87959151             25.1              21544000         858610.6
16:44:43.271 INFO  ProgressMeter -      chr12:101858778             25.3              21694000         858875.8
16:44:53.342 INFO  ProgressMeter -      chr12:115123693             25.4              21848000         859262.7
16:45:03.344 INFO  ProgressMeter -      chr12:127509036             25.6              21996000         859448.7
16:45:13.397 INFO  ProgressMeter -       chr13:23366082             25.8              22154000         859992.2
16:45:23.431 INFO  ProgressMeter -       chr13:36449990             25.9              22298000         859999.7
16:45:33.449 INFO  ProgressMeter -       chr13:50246866             26.1              22448000         860244.7
16:45:43.459 INFO  ProgressMeter -       chr13:64865616             26.3              22595000         860377.3
16:45:53.502 INFO  ProgressMeter -       chr13:78949368             26.4              22737000         860301.2
16:46:03.567 INFO  ProgressMeter -       chr13:93311545             26.6              22879000         860214.1
16:46:13.586 INFO  ProgressMeter -      chr13:106270380             26.8              23018000         860040.7
16:46:23.637 INFO  ProgressMeter -       chr14:23360304             26.9              23159000         859926.7
16:46:33.687 INFO  ProgressMeter -       chr14:36962093             27.1              23304000         859962.2
16:46:43.736 INFO  ProgressMeter -       chr14:50857685             27.3              23446000         859887.7
16:46:53.749 INFO  ProgressMeter -       chr14:64137890             27.4              23590000         859905.9
16:47:03.760 INFO  ProgressMeter -       chr14:76705045             27.6              23734000         859924.9
16:47:13.760 INFO  ProgressMeter -       chr14:89385772             27.8              23869000         859625.3
16:47:23.771 INFO  ProgressMeter -      chr14:101404456             27.9              24008000         859467.2
16:47:33.808 INFO  ProgressMeter -       chr15:27023814             28.1              24145000         859225.7
16:47:43.816 INFO  ProgressMeter -       chr15:40487020             28.3              24284000         859072.9
16:47:53.860 INFO  ProgressMeter -       chr15:53475974             28.4              24428000         859080.1
16:48:03.880 INFO  ProgressMeter -       chr15:65688040             28.6              24564000         858818.6
16:48:13.947 INFO  ProgressMeter -       chr15:78674200             28.8              24714000         859023.8
16:48:23.969 INFO  ProgressMeter -       chr15:91055471             28.9              24852000         858834.7
16:48:34.046 INFO  ProgressMeter -         chr16:810495             29.1              24983000         858379.3
16:48:44.066 INFO  ProgressMeter -       chr16:10571254             29.3              25101000         857513.8
16:48:54.067 INFO  ProgressMeter -       chr16:23555637             29.4              25246000         857583.5
16:49:04.089 INFO  ProgressMeter -       chr16:46388896             29.6              25412000         858352.1
16:49:14.102 INFO  ProgressMeter -       chr16:57055603             29.8              25579000         859150.0
16:49:24.154 INFO  ProgressMeter -       chr16:69935223             29.9              25724000         859185.5
16:49:34.191 INFO  ProgressMeter -       chr16:80973301             30.1              25850000         858596.7
16:49:44.203 INFO  ProgressMeter -         chr17:682376             30.3              25968000         857762.0
16:49:54.238 INFO  ProgressMeter -       chr17:11908622             30.4              26104000         857516.9
16:50:04.755 INFO  ProgressMeter -       chr17:26939923             30.6              26250000         857376.2
16:50:14.814 INFO  ProgressMeter -       chr17:40174860             30.8              26401000         857612.5
16:50:24.843 INFO  ProgressMeter -       chr17:51968123             31.0              26542000         857536.1
16:50:40.151 INFO  ProgressMeter -       chr17:59547932             31.2              26625000         853184.9
16:50:50.163 INFO  ProgressMeter -       chr17:72596345             31.4              26773000         853364.4
16:51:00.203 INFO  ProgressMeter -         chr18:291856             31.5              26917000         853402.6
16:51:10.235 INFO  ProgressMeter -       chr18:12537358             31.7              27052000         853160.1
16:51:20.287 INFO  ProgressMeter -       chr18:30368279             31.9              27201000         853350.4
16:51:30.350 INFO  ProgressMeter -       chr18:44079885             32.0              27345000         853377.9
16:51:40.376 INFO  ProgressMeter -       chr18:55497885             32.2              27470000         852831.5
16:51:50.418 INFO  ProgressMeter -       chr18:68474222             32.4              27607000         852654.8
16:52:00.495 INFO  ProgressMeter -         chr19:587089             32.5              27739000         852310.5
16:52:10.547 INFO  ProgressMeter -       chr19:11293783             32.7              27878000         852194.2
16:52:20.610 INFO  ProgressMeter -       chr19:22881138             32.9              28022000         852226.8
16:52:30.612 INFO  ProgressMeter -       chr19:37316593             33.0              28160000         852103.8
16:52:40.614 INFO  ProgressMeter -       chr19:48706823             33.2              28301000         852072.3
16:52:50.651 INFO  ProgressMeter -         chr20:877735             33.4              28434000         851787.0
16:53:00.671 INFO  ProgressMeter -       chr20:12485150             33.5              28563000         851391.7
16:53:10.699 INFO  ProgressMeter -       chr20:24990710             33.7              28700000         851234.6
16:53:20.714 INFO  ProgressMeter -       chr20:40133759             33.9              28874000         852176.6
16:53:30.718 INFO  ProgressMeter -       chr20:52034986             34.0              29014000         852115.3
16:53:40.765 INFO  ProgressMeter -       chr20:63610553             34.2              29147000         851832.2
16:53:50.802 INFO  ProgressMeter -       chr21:21172691             34.4              29291000         851875.9
16:54:00.862 INFO  ProgressMeter -       chr21:33832190             34.6              29425000         851620.3
16:54:10.881 INFO  ProgressMeter -       chr21:45810788             34.7              29556000         851297.9
16:54:20.947 INFO  ProgressMeter -       chr22:26605877             34.9              29715000         851761.3
16:54:30.981 INFO  ProgressMeter -       chr22:38798395             35.1              29861000         851862.8
16:54:40.999 INFO  ProgressMeter -       chr22:49945690             35.2              29997000         851685.8
16:54:51.048 INFO  ProgressMeter -        chrX:15662499             35.4              30176000         852713.2
16:55:01.078 INFO  ProgressMeter -        chrX:32264376             35.6              30356000         853766.6
16:55:11.086 INFO  ProgressMeter -        chrX:48604302             35.7              30532000         854707.0
16:55:21.110 INFO  ProgressMeter -        chrX:68793646             35.9              30706000         855576.5
16:55:31.154 INFO  ProgressMeter -        chrX:85398413             36.1              30882000         856485.6
16:55:41.197 INFO  ProgressMeter -       chrX:101746389             36.2              31047000         857082.9
16:55:51.229 INFO  ProgressMeter -       chrX:119172499             36.4              31227000         858091.3
16:56:01.264 INFO  ProgressMeter -       chrX:136003077             36.6              31405000         859034.9
16:56:11.298 INFO  ProgressMeter -       chrX:152472475             36.7              31578000         859833.5
16:56:21.300 INFO  ProgressMeter - chrUn_GL000224v1:176600             36.9              31914000         865055.8
16:56:27.248 INFO  BaseRecalibrator - 8917079 read(s) filtered by: ((((((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND WellformedReadFilter)
  8917079 read(s) filtered by: (((((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter)
      8917079 read(s) filtered by: ((((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter)
          2585912 read(s) filtered by: (((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter)
              2450693 read(s) filtered by: ((MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter)
                  2450693 read(s) filtered by: (MappingQualityNotZeroReadFilter AND MappingQualityAvailableReadFilter)
                      2450693 read(s) filtered by: MappingQualityNotZeroReadFilter 
              135219 read(s) filtered by: NotSecondaryAlignmentReadFilter 
          6331167 read(s) filtered by: NotDuplicateReadFilter 

16:56:27.248 INFO  ProgressMeter - chrUn_JTFH01001991v1_decoy:1898             37.0              32095544         867645.3
16:56:27.248 INFO  ProgressMeter - Traversal complete. Processed 32095544 total reads in 37.0 minutes.
16:56:27.291 INFO  BaseRecalibrator - Calculating quantized quality scores...
16:56:27.300 INFO  BaseRecalibrator - Writing recalibration report...
16:56:28.623 INFO  BaseRecalibrator - ...done!
16:56:28.623 INFO  BaseRecalibrator - Shutting down engine
[January 16, 2024 4:56:28 PM CST] org.broadinstitute.hellbender.tools.walkers.bqsr.BaseRecalibrator done. Elapsed time: 37.07 minutes.
Runtime.totalMemory()=8679063552
Tool returned:
32095544
Using GATK jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar BaseRecalibrator --input /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted_set_marked.bam --reference /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/seq/hg38.fa --known-sites /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.dbsnp138.vcf.gz --known-sites /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/variation/hg38_v0_Homo_sapiens_assembly38.known_indels.vcf.gz --output /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_recal_data.table
16:56:31.337 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_compression.so
Jan 16, 2024 4:56:32 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine
INFO: Failed to detect whether we are running on Google Compute Engine.
16:56:33.022 INFO  ApplyBQSR - ------------------------------------------------------------
16:56:33.023 INFO  ApplyBQSR - The Genome Analysis Toolkit (GATK) v4.1.2.0
16:56:33.023 INFO  ApplyBQSR - For support and documentation go to https://software.broadinstitute.org/gatk/
16:56:33.023 INFO  ApplyBQSR - Executing as msmuhammad@argon-itf-bx47-08.hpc on Linux v3.10.0-1160.99.1.el7.x86_64 amd64
16:56:33.023 INFO  ApplyBQSR - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_382-b05
16:56:33.023 INFO  ApplyBQSR - Start Date/Time: January 16, 2024 4:56:31 PM CST
16:56:33.023 INFO  ApplyBQSR - ------------------------------------------------------------
16:56:33.023 INFO  ApplyBQSR - ------------------------------------------------------------
16:56:33.024 INFO  ApplyBQSR - HTSJDK Version: 2.19.0
16:56:33.024 INFO  ApplyBQSR - Picard Version: 2.19.0
16:56:33.024 INFO  ApplyBQSR - HTSJDK Defaults.COMPRESSION_LEVEL : 2
16:56:33.024 INFO  ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false
16:56:33.024 INFO  ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true
16:56:33.024 INFO  ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false
16:56:33.024 INFO  ApplyBQSR - Deflater: IntelDeflater
16:56:33.024 INFO  ApplyBQSR - Inflater: IntelInflater
16:56:33.024 INFO  ApplyBQSR - GCS max retries/reopens: 20
16:56:33.024 INFO  ApplyBQSR - Requester pays: disabled
16:56:33.025 INFO  ApplyBQSR - Initializing engine
16:56:33.713 INFO  ApplyBQSR - Done initializing engine
16:56:33.781 INFO  ProgressMeter - Starting traversal
16:56:33.781 INFO  ProgressMeter -        Current Locus  Elapsed Minutes       Reads Processed     Reads/Minute
16:56:43.790 INFO  ProgressMeter -        chr1:38566199              0.2                560000        3357314.1
16:56:53.801 INFO  ProgressMeter -        chr1:82345820              0.3               1139000        3413586.4
16:57:03.801 INFO  ProgressMeter -       chr1:123550672              0.5               1716000        3429713.5
16:57:13.804 INFO  ProgressMeter -       chr1:161604888              0.7               2218000        3325088.1
16:57:23.817 INFO  ProgressMeter -       chr1:206110548              0.8               2799000        3356383.4
16:57:33.835 INFO  ProgressMeter -       chr1:244736051              1.0               3320000        3317014.7
16:57:43.846 INFO  ProgressMeter -        chr2:31925699              1.2               3806000        3259259.3
16:57:53.846 INFO  ProgressMeter -        chr2:70152999              1.3               4385000        3286080.1
16:58:03.856 INFO  ProgressMeter -       chr2:112957787              1.5               4968000        3309242.3
16:58:13.861 INFO  ProgressMeter -       chr2:153795454              1.7               5500000        3297362.1
16:58:23.869 INFO  ProgressMeter -       chr2:200281148              1.8               6087000        3317527.8
16:58:33.879 INFO  ProgressMeter -           chr3:45621              2.0               6649000        3321787.2
16:58:43.893 INFO  ProgressMeter -        chr3:38795534              2.2               7158000        3300848.5
16:58:53.897 INFO  ProgressMeter -        chr3:82637025              2.3               7743000        3315681.3
16:59:03.910 INFO  ProgressMeter -       chr3:124788756              2.5               8330000        3329136.9
16:59:13.917 INFO  ProgressMeter -       chr3:165142775              2.7               8857000        3318554.2
16:59:23.925 INFO  ProgressMeter -         chr4:9994300              2.8               9438000        3328239.6
16:59:33.931 INFO  ProgressMeter -        chr4:49510682              3.0              10018000        3336552.9
16:59:43.945 INFO  ProgressMeter -        chr4:88658674              3.2              10547000        3327759.2
16:59:53.961 INFO  ProgressMeter -       chr4:135980249              3.3              11133000        3336913.5
17:00:03.960 INFO  ProgressMeter -       chr4:182613303              3.5              11717000        3344863.2
17:00:13.977 INFO  ProgressMeter -        chr5:30942128              3.7              12231000        3332773.2
17:00:23.985 INFO  ProgressMeter -        chr5:73188042              3.8              12806000        3337735.2
17:00:33.986 INFO  ProgressMeter -       chr5:119314512              4.0              13386000        3343644.0
17:00:43.998 INFO  ProgressMeter -       chr5:156320354              4.2              13876000        3327365.2
17:00:54.010 INFO  ProgressMeter -        chr6:17649198              4.3              14458000        3333538.3
17:01:04.014 INFO  ProgressMeter -        chr6:59579325              4.5              15039000        3339118.5
17:01:14.022 INFO  ProgressMeter -        chr6:98664717              4.7              15525000        3323924.8
17:01:24.034 INFO  ProgressMeter -       chr6:144347629              4.8              16107000        3329578.0
17:01:34.046 INFO  ProgressMeter -        chr7:16916687              5.0              16685000        3334054.9
17:01:44.051 INFO  ProgressMeter -        chr7:54210019              5.2              17173000        3320914.0
17:01:54.067 INFO  ProgressMeter -        chr7:96698887              5.3              17757000        3326464.5
17:02:04.076 INFO  ProgressMeter -       chr7:140471421              5.5              18339000        3331385.6
17:02:14.089 INFO  ProgressMeter -        chr8:16194785              5.7              18810000        3316407.5
17:02:24.095 INFO  ProgressMeter -        chr8:59208218              5.8              19396000        3322048.2
17:02:34.105 INFO  ProgressMeter -       chr8:103678668              6.0              19976000        3326339.6
17:02:44.111 INFO  ProgressMeter -       chr8:143997919              6.2              20502000        3321686.1
17:02:54.127 INFO  ProgressMeter -        chr9:43102644              6.3              21084000        3326032.9
17:03:04.136 INFO  ProgressMeter -       chr9:101471776              6.5              21666000        3330199.4
17:03:14.150 INFO  ProgressMeter -       chr9:138171799              6.7              22177000        3323484.1
17:03:24.160 INFO  ProgressMeter -       chr10:41068991              6.8              22756000        3327070.8
17:03:34.164 INFO  ProgressMeter -       chr10:81064363              7.0              23328000        3329535.2
17:03:44.174 INFO  ProgressMeter -      chr10:118826874              7.2              23834000        3322637.7
17:03:54.179 INFO  ProgressMeter -       chr11:27224123              7.3              24419000        3326854.3
17:04:04.183 INFO  ProgressMeter -       chr11:69535711              7.5              24997000        3329958.6
17:04:14.190 INFO  ProgressMeter -      chr11:108189391              7.7              25499000        3323001.9
17:04:24.200 INFO  ProgressMeter -       chr12:15940416              7.8              26083000        3326778.9
17:04:34.203 INFO  ProgressMeter -       chr12:58877372              8.0              26661000        3329697.6
17:04:44.206 INFO  ProgressMeter -       chr12:97706813              8.2              27153000        3321975.8
17:04:54.209 INFO  ProgressMeter -       chr13:17112220              8.3              27707000        3321996.4
17:05:04.227 INFO  ProgressMeter -       chr13:57211791              8.5              28276000        3323681.6
17:05:47.053 INFO  ProgressMeter -       chr13:91540332              9.2              28692000        3111565.0
17:06:35.769 INFO  ProgressMeter -       chr13:91621036             10.0              28693000        2859824.4
17:06:45.770 INFO  ProgressMeter -       chr14:37761112             10.2              29250000        2867698.6
17:06:55.783 INFO  ProgressMeter -       chr14:81946332             10.4              29831000        2877579.2
17:07:05.790 INFO  ProgressMeter -       chr15:34665744             10.5              30405000        2886509.5
17:07:15.801 INFO  ProgressMeter -       chr15:73787339             10.7              30932000        2890751.1
17:07:25.802 INFO  ProgressMeter -       chr16:13493749             10.9              31517000        2900244.0
17:07:35.810 INFO  ProgressMeter -       chr16:54313414             11.0              32102000        2909419.4
17:07:45.824 INFO  ProgressMeter -        chr17:1359962             11.2              32623000        2912581.5
17:07:55.833 INFO  ProgressMeter -       chr17:41733290             11.4              33204000        2920950.3
17:08:05.841 INFO  ProgressMeter -       chr17:82488340             11.5              33785000        2929081.3
17:08:15.849 INFO  ProgressMeter -       chr18:36128941             11.7              34302000        2931510.9
17:08:25.865 INFO  ProgressMeter -         chr19:875577             11.9              34887000        2939568.9
17:08:35.873 INFO  ProgressMeter -       chr19:41884959             12.0              35464000        2946771.3
17:08:45.880 INFO  ProgressMeter -       chr20:19116707             12.2              35972000        2948129.9
17:08:55.880 INFO  ProgressMeter -       chr20:55647622             12.4              36553000        2955373.9
17:09:05.888 INFO  ProgressMeter -       chr21:35075679             12.5              37137000        2962637.0
17:09:15.896 INFO  ProgressMeter -       chr22:35238495             12.7              37622000        2961915.2
17:09:25.907 INFO  ProgressMeter -        chrX:26866638             12.9              38207000        2968971.4
17:09:35.917 INFO  ProgressMeter -        chrX:71994519             13.0              38790000        2975697.3
17:09:45.920 INFO  ProgressMeter -       chrX:112638413             13.2              39306000        2977208.5
17:09:55.923 INFO  ProgressMeter -        chrY:10768956             13.4              39885000        2983387.0
17:10:05.927 INFO  ProgressMeter - chrUn_GL000224v1:31367             13.5              40455000        2988748.3
17:10:15.934 INFO  ProgressMeter -             unmapped             13.7              40954000        2988786.8
17:10:16.882 INFO  ApplyBQSR - No reads filtered by: WellformedReadFilter
17:10:16.882 INFO  ProgressMeter -             unmapped             13.7              41012623        2989617.8
17:10:16.882 INFO  ProgressMeter - Traversal complete. Processed 41012623 total reads in 13.7 minutes.
17:10:19.033 INFO  ApplyBQSR - Shutting down engine
[January 16, 2024 5:10:19 PM CST] org.broadinstitute.hellbender.tools.walkers.bqsr.ApplyBQSR done. Elapsed time: 13.80 minutes.
Runtime.totalMemory()=1020788736
Using GATK jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Dedicated/jmichaelson-wdata/bcbio-dna/anaconda/share/gatk4-4.1.2.0-1/gatk-package-4.1.2.0-local.jar ApplyBQSR --reference /Dedicated/jmichaelson-wdata/bcbio-dna/genomes/Hsapiens/hg38/seq/hg38.fa --input /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_sorted_set_marked.bam --bqsr-recal-file /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_recal_data.table --output /Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_recal.bam
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane2.sam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane1.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane2.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane1_sorted.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane2_sorted.bam’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane1_sorted.bam.bai’: No such file or directory
rm: cannot remove ‘/Dedicated/jmichaelson-wdata/msmuhammad/projects/RPOE/genetics/data/derivatives/S28_lane2_sorted.bam.bai’: No such file or directory
